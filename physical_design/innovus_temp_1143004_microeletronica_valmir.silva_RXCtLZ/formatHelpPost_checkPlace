.nf
.P Product Version     22.14    Cadence Design Systems, Inc. 
.fi
.TH checkPlace  22.14 "Fri Oct 06 02:12:27 2023" 
.SH Name \fBcheckPlace\fR \-  Checks FIXED and PLACED cells for violations, adds violation markers to the design display area, and generates a violation report
.SH Syntax \fBcheckPlace\fR  [<violationReportFileName>]   [-clearMarker]  [-honorPrerouteForFiller]  [-ignoreFillerInUtil]  [-ignoreOutOfCore]   [-inst <list_of_instances>]   [-ioPinBlockage]  [-macroBlockage]  [-noCheckPinAccess]  [-noHardFence]  [-noHalo]  [-noPreplaced]   [-selectedOnly] 
.P Checks FIXED and PLACED cells for violations, adds violation markers to the design display area, and generates a violation report. Use the Violation Browser to see the violation markers.
.P This command considers preplaced instances and macros as FIXED.
.P Note: The utilization value reported by checkPlace and the density value reported by timeDesign might differ because checkPlace considers padding when calculating utilization but timeDesign does not consider padding when calculating density.
.P You can delete padding by running the deleteAllCellPad command before running checkPlace.
.P Note: If setPlaceMode -place_detail_legalization_inst_gap is defined, checkPlace will report the gaps that violate the specified spacing.
.P The checkPlace command checks for the following violations:
.RS  "*" 2 Implant max cover length. If this violation is detected, GUI adds markers for every instance. As per this violation rule the implant shapes cannot be fully covered horizontally by neighbor shapes on both top and bottom opposite sides. If checkPlace detects the violation, GUI adds markers for every instance  "*" 2 Region and fence violations (Instances placed outside their region or fence)
.RE
.RS  "*" 2 Out of core area violations (Instances placed partly or wholly outside the core area)
.RE
.RS  "*" 2 Not placed on placement grid (Standard cells not on the placement grid, or blocks not on the manufacturing grid). If the design is using the FinFET technology, checkPlace will also check if standard cells and blocks are not aligned on the FinFET grid and report violations.
.RE
.RS  "*" 2 Row orientation violations (Instances whose orientation is illegal for their row; may short power to ground)
.RE
.RS  "*" 2 Tech site violations (Instances placed on tech sites not matching their cells and instances that do not have rows for their tech sites)
.RE
.RS  "*" 2 Overlapping with other instance (Placed instances that overlap with other instances)
.RE
.RS  "*" 2 Pin access violations (Instances with at least one signal pin that does not have routing access due to pre-wires)
.RE
.RS  "*" 2 Orientation violations (Instances whose orientation is not legal based on its cell symmetry rules)
.RE
.RS  "*" 2 Routing/placement blockage violations in the core area (Instances placed in an obstruction created by pre-wires or routing blockage)   The command does not check fixed macros.
.RE
.RS  "*" 2 Site orientation violations (Instances whose orientation does not match the tech site orientation)
.RE
.RS  "*" 2 Not of fence violations (Instances placed inside a fence to which it does not belong)  "*" 2 Instance padding violations if setPlaceMode -place_detail_honor_inst_pad is set to true.  "*" 2 Standard cells' power-pin connection  "*" 2 Checks the VT implant spacing rule when VT shape does not touch the cell boundary.  "*" 2  Prints implant layer names in the Implant Layer Spacing violation. The implant Spacing Violation would be as follows:  Implant_Spacing_Violation  $instance1 implant layer $layer1 has corner touch violation to $instance2 implant layer $layer2  VT group name: $Group  Base layer: $layer  MinWidth: $width  MinSpacing:$spacing    ShiftDistance: $value  Box=$box  Note: It only works for the static check of the checkPlace command.
.RE
.P In addition to checking for violations, the command reports the following:
.RS  "*" 2 Number of placed instances in the design  "*" 2 Number of unplaced macros in the design  "*" 2 Placement density, in terms of used sites over available sites  "*" 2 Default power domain density
.RE 
.SH Parameters   "\fB-noCheckPinAccess\fR" Specifies whether to check for pin access violations.  "\fB-clearMarker\fR" Removes the violation markers from a previous checkPlace run, without rerunning checkPlace.  "\fB-honorPrerouteForFiller\fR" Checks for placement blockage violations on physical instances placed under preroutes or specified by setPlaceMode -place_detail_preroute_as_obs.  By default, checkPlace does not treat filler cells placed under preroutes as violations, even though they are placement/routing blockages; however, it does treat standard cells placed under preroutes as violations.  "\fB-ignoreFillerInUtil\fR" Ignores filler cells in calculating utilization.   "\fB-ignoreOutOfCore\fR" Skips instances outside the core design area.  "\fB-inst <list_of_instances>\fR" Specifies the list of instances to check.   "\fB-ioPinBlockage\fR" Instructs legalization routines to treat top-level I/O pins as fixed metal obstructions while placing standard cell instances at the block level. There is a minor run-time penalty with this parameter, so it is not turned on by default.   "\fB-macroBlockage\fR" Checks for overlap between hard macro and macro-only blockage and reports macro blockage violation. By default, macro-only blockage is ignored for both hard macro and standard cell. With this setting, it is treated as a placement obstruction for macros.  "\fB-noHalo\fR" Skips block halos. Uses the place-and-route boundary for the placement overlap check.  "\fB-noHardFence\fR" Ignores fence and region placement constraints.  "\fB-noPreplaced\fR" Does not check fixed instances. When this parameter is specified, checkPlace treats fixed instances as placement blockages.  "\fB-selectedOnly\fR" Specifies to check only the selected instances legality.   "\fB<violationReportFileName>\fR" Specifies the report file. If you do not specify this parameter, the command displays a summary report.  The report file is more detailed than the summary report, and lists every instance with a violation.It contains details on the violations along with a Tcl procedure to select instances based on the violation type.
.P Note: If a design is loaded where a macro is fixed in an orientation that is not supported according to its LEF, running checkPlace changes the orientation and the position of the macro, even if the -noPreplaced option is specified. Here is an example:
.P Cell positions before checkPlace:   FPFEL0_SLM/fpicl/fpiclmsc/ThermRemote_FP_1: {544.32 648}   FPFEL0_SLM/fpicl/fpiclmsc/ThermRemote_FP_2: {544.32 669.6}   < CMD> checkPlace   **WARN: (ENCDB-1266): Both given orientation and original orientation not legal,   FPFEL0_SLM/fpicl/fpiclmsc/ThermRemote_FP_1 changes to orientation R0   **WARN: (ENCDB-1266): Both given orientation and original orientation not legal,   FPFEL0_SLM/fpicl/fpiclmsc/ThermRemote_FP_2 changes to orientation R0   Design has 3 cells with cell padding or block halo.   Begin checking placement
... (start mem=690.9M, init mem=714.5M)   *info: Placed = 1098   *info: Unplaced = 0   Placement Density:0.00%(0/407468)   Finished checkPlace (cpu: total=0:00:07.6, vio checks=0:00:00.0; mem=696.2M)   Cell positions after checkPlace:   FPFEL0_SLM/fpicl/fpiclmsc/ThermRemote_FP_1: {544.446 648}   FPFEL0_SLM/fpicl/fpiclmsc/ThermRemote_FP_2: {544.446 669.6} 
.P If few instances are getting overlapped, the report will clearly specifies the violation type and list all the instances. Here is an example:
.P #########################################################
.P ## Total instances with placement violations: 5
.P #########################################################
.P ## Insts placed overlapping with other insts (5) ##
.P #########################################################
.P ### 4 (Preplaced) Overlapping with other instance>
.P set pchkOverlapFixedList [list \\
.P  {proc0/rf0/u0/u0/rfd_reg_22_27/DFF} \\
.P  {proc0/rf0/u0/u0/rfd_reg_37_26/DFF} \\
.P  {proc0/rf0/u0/u0/rfd_reg_37_27/DFF} \\
.P  {proc0/rf0/u0/u0/rfd_reg_38_27/DFF} \\
.P  ] 
.SH Related Information
.RS  "*" 2 timeDesign   "*" 2 deleteAllCellPad  "*" 2 setPlaceMode  "*" 2 verify_drc  "*" 2 Tools Menu chapter in the Innovus Menu Reference
.RS  "*" 2 Violation Browser
.RE 
.RE
.P
