.nf
.P Product Version     22.14    Cadence Design Systems, Inc. 
.fi
.TH check_design  22.14 "Fri Oct 06 02:12:27 2023" 
.SH Name \fBcheck_design\fR \-  Checks that all prerequisites to run all or part of the hierarchical or block implementation flow are met. 
.P The check_design command checks the preconditions for major flow steps before they are run.  If there are errors identified by check_design, the current script will stop.check.  Note that output to console and log file is controlled by setMessageLimit.  A complete list of errors is dumped to -out_file
.SH Syntax \fBcheck_design\fR  [-help]  [-out_file <fileName>]   {[-type {library netlist power_intent timing hierarchical pin_assign budget assign_statements place opt cts route signoff all}] [-no_check ]}  
.P Checks that all prerequisites to run all or part of the hierarchical or block implementation flow are met. 
.P The check_design command checks the preconditions for major flow steps before they are run.  If there are errors identified by check_design, the current script will stop.check.  Note that output to console and log file is controlled by setMessageLimit.  A complete list of errors is dumped to -out_file.
.P  Some examples of problems that will cause design checks to fail include:
.RS  "*" 2 Cells used in the design that cannot be legally placed
.RE
.RS  "*" 2 Tracks misaligned with some or all cell pins
.RE
.RS  "*" 2 In advanced processes, power nets that cannot be colored in the expected pattern once cells are placed
.RE
.RS  "*" 2 Cell rows that are unblocked for placement but where pin layers are obstructed
.RE
.RS  "*" 2 Cell rows that are unusable due to orientation and power rail misalignment
.RE
.RS  "*" 2 Cells instantiated in the netlist that have no timing model defined
.RE
.RS  "*" 2 Tracks blocked by power grid spacing constraints
.RE
.RS  "*" 2 Instances not covered by a true timing path in any view
.RE
.RS  "*" 2 ILM model with no clock tree defined
.RE
.RS  "*" 2 No hold fixing cells are specified and delay cells are not usable
.RE
.RS  "*" 2 No clock inverters, buffers, clock gates or logic cells are specified and the library cells are not usable for clock trees
.RE
.RS  "*" 2 CTS cannot balance all skew groups without increasing insertion delay
.RE
.RS  "*" 2 Preserved nets and cells in the clock tree that will violate other constraints because they cannot be resized or buffered.
.RE 
.SH Parameters    "\fB-help\fR" Prints a brief description that includes a list of parameters, their usage, and their defaults.  For a detailed description of the command and all of its parameters, use the man command:   man check_design.  No other args allowed with -help  "\fB-type          \fR" Specifies the category of the flow to be checked.  The intent is to run check_design before each of the operation in the list. Each of the categories run several checks related to that operation. 
.RS  "*" 2 library: Checks the library integrity and corrects binding of all design instances to library cells or RTL modules (hinst  module, inst   base_cell/lib_cell).
.RS  "*" 2  For physical_only library, check_design will flag libcells that have only LEF but no
.lib representation.  "*" 2  For logical_only library, check_design will flag libcells that have only
.lib but no LEF representation.  "*" 2  For unresolved library, check_design will check if design instance is missing binding (hinst  module, inst  base_cell/lib_cell)
.RE  "*" 2 netlist: Checks the netlist integrity at any point in the flow.
.RS  "*" 2  For undriven netlist, check_design will check the list of input/inout hpins/pins with no driver on the net connected to it (driver can be input port or output hpin/pin).  "*" 2  For multiple_driver netlist, check_design will check the list of input/inout pins or output/inout ports with more than one driver on their net)  "*" 2  For unloaded netlist, check_design will check the input/inout ports or output hpins/pins with no load (input/inout pins) in their fanout or hinsts/insts that have nothing connected to any output pin)  "*" 2  For constant netlist, check_design will check the output ports or input pins/hpins that are driven by a logical constant 0/1.  "*" 2  For feedthrough netlist, check_design will check the hinsts, where every output pin is directly driven by an input pin, w/o any logic in between).
.RE  "*" 2 library: Checks the library integrity and corrects binding of all design instances to library cells or RTL modules.  "*" 2 netlist: Checks the netlist integrity at any point in the flow.  "*" 2 power_intent: Checks related to MSV setup including power domain/fence checks.      "*" 2 timing: Performs checks related to timing setup integrity. This check is run prior to running any operation that requires timing information. Note: The check_timing command should still be used for more exhaustive timing checks.  "*" 2 hierarchical: When you use the hierarchical, pin_assign, or budget options with the -type parameter, the check_design command checks for hierarchical partitions in the design. It performs checks related to the hierarchical flow. This type checks if the partition has a fence and if the fence is inside the core boundary. If not, it displays an error message. This check is run before running hierarchical design operations.
.RE
.RS  "*" 2 pin_assign: Checks related to pin assignment for partitioning flows. This check is run before pin assignment.
.RE
.RS  "*" 2 budget: Checks related to time budgeting for partitioning flows. This check is run before timing budgeting.  "*" 2 assign_statements: Performs checks for the netlist for assign statements. This check is run before exporting a netlist for signoff.
.RE
.RS  "*" 2 place: Checks related to placement such as PG rail alignment, pin access issues, missing followpin in the rails of standard cells, misaligned well tap cell, and missing termination cell. This check is run before placement.
.RE
.RS  "*" 2 opt: Checks related to optimization such as checks for available cells. This check is run before optimization.
.RE
.RS  "*" 2 cts: Checks related to clock tree definition such as constraint targets and route types. This is run before cts but after creating the clock tree spec. This check cannot run with pre-cts Innovus DB (just after place_opt_design). You need to set CCOpt option (target skew, target trans, etc) and also need to load the CCOpt spec file. 
.RE
.RS  "*" 2 route: Checks related to routing such as congestion, placement, and pin access issues. The -type route cannot be run with pre-placed DB. This check is run before routing. It is useful to run check_drc ahead of time so the design markers are up to date.
.RE
.RS  "*" 2 signoff: Checks related to the signoff activities including extraction and ECOs. This check is run before TSO. To use this types, you need to set the Tempus path, else the tool will give an error. 
.RE
.RS  "*" 2 all: Checks related to all categories.
.RE   Note: -type or -no_check is required (except when using -help argument)  "\fB-no_check\fR" Do not run any checks, echo the error messages associated with the checks that would be run for the specified -type. Run check_design -no_check to see the list of checks.   -type or -no_check is required (except when using -help argument)  "\fB-out_file <fileName>\fR" Specifies the output report file. Contents dumped to this file are in the Tcl format.  Sourcing this file will create a TCL dictionary of the violations found by check_design.  
.SH Examples
.RS  "*" 2 The following example shows the usage of the -out_file option:
.RE
.P > check_design -type "place cts route" -out_file checks.tcl
.P *** Summary of all messages that are not suppressed in this session:   Severity ID Count Summary   WARNING CHKCTS-16 1 Preferred routing layers for route_type
...   ERROR CHKCTS-1 3 CTS maximum transition target must be se...   ERROR CHKCTS-10 1 Route type(s) %s used for trunk or top c...   WARNING CHKCTS-21 1 Clock logic cells are not specified for
...   WARNING CHKCTS-46 1 Clock logic cells are not specified for
...   WARNING NRIG-1323 65 Net %s has bottom preferred routing laye...
.P  > source checks.tcl
.P > dict keys $design_checks   cts route
.P > dict keys [dict get $design_checks place]
.P CHKCTS-1 CHKCTS-10 CHKCTS-16 CHKCTS-21 CHKCTS-46
.P # Each check as the following keys  > dict keys [dict get [dict get $design_checks cts] CHKCTS-1]
.P severity count violations
.P # For information regarding the check, use get_message:  > get_message -id CHKCTS-1 short
.P CTS maximum transition target must be set to a numeric value for delay_corner %s and delay_type %s for clock_tree %s and net_type %s.
.P # To query the violations, use the check dictionary:  > dict get [dict get [dict get $design_checks cts] CHKCTS-1] violations
.P {dc_0.9v_125c late clk top}  {dc_0.9v_125c late clk trunk}  {dc_0.9v_125c late clk leaf}
.P 
.RS  "*" 2 The following command generates a list of errors that will prevent or seriously impact the running of the place step in the implementation flow.   check_design -type place -out_file place.checkDesign
.RE     ###############################################################      #  Generated by:      Cadence Innovus 17.12-e034_1     #  OS:                Linux x86_64(Host ID ip-172-19-134-167)     #  Generated on:      Mon Nov  6 05:53:12 2017     #  Design:            fuuBar     #  Command:           check_design -type place -out_file place.checkDesign     ###############################################################     #Design Check : place (12432915)     # -------------------------------------------------------------------------------------     # Message: The via for net %s in DPT layer %s does not align with the tracks at %.4f %.4f.     #    Help:     # --------------------------------------------------------------------------------------     dict set design_checks place IMPPP-4418 {       count 12432915       violations {         {vddcx_2 M3 464.7360 2139.8625}         {vddcx_2 M3 464.3520 2139.8625}         {vddcx_2 M3 463.8720 2139.8625}         {vddcx_2 M3 464.7360 2139.8825}        
...       }     }     #Design Check : place (7280)     # --------------------------------------------------------------------------------------     # Message: The color of PG wire which is a non-default width %.4f wire for net %s in layer %s should have the opposite color with the track at %.4f %.4f.     #    Help:      # --------------------------------------------------------------------------------------     dict set design_checks place IMPPP-4420 {       count 7280       violations {         {0.0800 vssx_0 M0 202.3680 1095.6000}          {0.0800 vddcx_2 M0 202.3680 1095.3000}         
...        }      }     
.SH Related Information
.RS  "*" 2 check_timing  "*" 2 setMessageLimit
.RE
.P
