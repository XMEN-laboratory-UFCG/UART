.nf
.P Product Version     22.14    Cadence Design Systems, Inc. 
.fi
.TH createStairwayBoundary  22.14 "Fri Oct 06 02:12:27 2023" 
.SH Name \fBcreateStairwayBoundary\fR \-  Creates small stairway rectilinear edges at a specified partition corner to improve congestion
.SH Syntax \fBcreateStairwayBoundary\fR   [-help]   -dx <value>  -dy <value>   [-growNeighborPtnDir {<x y>}]   -ptn <partition_name>   -step <number_of_steps>  {-corner {LL LR UL UR} | -vertex <number_of_vertex>}
.P Creates small stairway rectilinear edges at a specified partition corner to improve congestion.
.P Note: This command does not support master/clones.
.P Note: The -dx,  -dy, -ptn, -step, and  -corner/-vertex options should be set by default. The partition will snap to the row automatically. 
.SH Parameters   "\fB-help\fR" Outputs a brief description that includes the type and default information for each   createStairwayBoundary parameter.  For a detailed description of the command and all of its parameters, use the man command:   man createStairwayBoundary   "\fB-corner {LL LR UL UR}\fR" Specifies partition corner where a stairway will be created. 
.RS  "*" 2 UL: Upper left  "*" 2 LL: Lower left  "*" 2 LR: Lower right  "*" 2 UR: Upper right
.RE   Data_type: enum, optional  "\fB-dx <value>\fR" Specifies step width.  Data_type: float, required  "\fB-dy <value       >\fR" Specifies step height.  Data_type: float, required  "\fB-growNeighborPtnDir {<x y>}\fR" Specifies the direction of the target partition in which the neighbor partition will grow to fill the stairway gap between the target partition and the neighbor partition. If this option is not specified, no abutted partition will grow.  Data_type: enum, optional  "\fB-ptn <partition_name>\fR" Specifies the name of the target partition.  Data_type: string, required  "\fB-step <number_of_steps>\fR" Specifies the number of steps to be created in stairway.  Data_type: int, required  "\fB-vertex <number_of_vertex >  \fR" Specifies partition vertex where stairway will be created. Vertex starts from the lower-left corner of the partition clockwise. The first vertex is 0. A vertex can be negative, and for a negative vertex, corner numbering starts at 0 from the lower-left corner of a partition counter clockwise.  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   Data_type: int, optional 
.SH Examples
.RS  "*" 2 The following command creates five-stairway rectilinear edges. The width and height of steps are 10.  createStairwayBoundary -dx 10 -dy 10 -ptn mcore -step 5 -corner UR  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   "*" 2 The following command sets -growNeighborPtnDir y, and the partition next to the target partition in the Y direction extends.  createStairwayBoundary -dx 10 -dy 10 -ptn regfile_iu_rftype2_abits8_dbits32_words136  -step 5 -corner UL -growNeighborPtnDir y   (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)  "*" 2 The following command sets -growNeighborPtnDir x, and the partition next to the target partition in the X direction extends.  createStairwayBoundary -dx 10 -dy 10 -ptn regfile_iu_rftype2_abits8_dbits32_words136  -step 5 -corner UL -growNeighborPtnDir x  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)  "*" 2 The following command changes the vertex 2 to a stairway.  createStairwayBoundary -dx 10 -dy 10 -ptn iu  -step 5 -vertex 2 -growNeighborPtnDir y  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.) 
.RE 
.SH Related Information
.RS  "*" 2 Floorplanning the Design chapter in the Innovus User Guide
.RE
.P
