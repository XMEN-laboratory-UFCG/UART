.nf
.P Product Version     22.14    Cadence Design Systems, Inc. 
.fi
.TH createPlaceBlockage  22.14 "Fri Oct 06 02:12:27 2023" 
.SH Name \fBcreatePlaceBlockage\fR \-  Creates cell placement blockages that can be placed
.SH Syntax \fBcreatePlaceBlockage\fR   [-help]   {{[-box {<x1 y1 x2 y2>} | -polygon {{<x1 y1>} {<x2 y2>}...}     | -boxList {{<x1 y1>} {<x2 y2>}...}     | -allPartition | -allMacro ]     [-inst <inst_name> | -hinst <hinst_name>] }     [-name <place_blockage_name> | -prefixOn ]     [{-type {hard soft partial macroOnly}}     [-density <value>] [-excludeFlops ]]     [-noCutByCore]     [-snapToSite] }   [ {-inst <inst_name> | -hinst <hinst_name> | -allPartition | -allMacro }     [-cover ]     [-innerRingBySide {<x1 y1 x2 y2>} | -innerRingByEdge {<edge1 edge2 edge3
...>}]     [-outerRingBySide {<x1 y1 x2 y2>} | -outerRingByEdge {<edge1 edge2 edge3
...>}] ]
.P Creates cell placement blockages that can be placed. A placement blockage is a floorplan object used to block standard cell placements. Use this command after importing the design. 
.SH Parameters   "\fB-allMacro\fR" For each macro creates a placement blockage covering that macro.  Data_type: bool, optional  "\fB-allPartition\fR" For each partition creates a placement blockage covering that partition.  Data_type: bool, optional  "\fB-box {<x1 y1 x2 y2>}\fR" Specifies the coordinates of the blockage area.
.RS  "*" 2 x1: Specifies the lower left x coordinate of the obstruction area.  "*" 2 y1: Specifies the lower left y coordinate of the obstruction area.  "*" 2 x2: Specifies the upper right x coordinate of the obstruction area.  "*" 2 y2: Specifies the upper right y coordinate of the obstruction area.
.RE   Note: You can enclose the coordinate values (x1...y2) in double-quotes, curly-braces, [ list
... ], or just separate them with spaces.  Data_type: box optional   "\fB-boxList {{<x1 y1> <x2 y2>}
...}\fR" Specifies the coordinates of a list of blockage areas.  Data_type: box_list, optional  "\fB-cover\fR" By default the parameters (-outerRingByEdge and -outerRingBySide) used to create placement blockages around the outside of the object, create toroidal placement blockages. The -cover parameter combined with these parameters creates a solid placement blockage, otherwise the -cover parameter does nothing.  Data_type: bool, optional   "\fB-density <value>\fR" Specifies the maximum density allowed for partial or soft blockages. The value is in steps of 5 between 5 and 100, with units of percent.   For example, a partial placement value of 75 means that up to 75 percent placement density is allowed in the area.  Note: The -density parameter can only be used in combination with the -type partial or -type soft parameter.  Minimum: 5  Maximum: 100  Data_type: inst, optional  "\fB-excludeFlops\fR" Specifies that flops and latches will not be placed in the blockage during global placement.  Note: The -excludeFlops parameter can only be used with the -type partial and -density parameters.  Data_type: bool, optional   "\fB-help\fR" Outputs a brief description that includes the type and default information for each createPlaceBlockage parameter.  For a detailed description of the command and all of its parameters, use the man command:   man createPlaceBlockage  "\fB-hinst <hinst_name>\fR" Specifies the name of the hierarchical instance on which the placement blockage is to be applied.  Data_type: (hInst), optional  "\fB-innerRingByEdge {<edge1 edge2 edge3
...>}  \fR" Creates a hollow ring of placement blockage around the inside of the object(s) specified. edgeN is the width in microns of the blockage created inside the Nth edge. edge1 is the vertical edge starting at the left corner of the leftmost edge with the lowest y coordinate as placed, and proceeding clockwise through the other edges.  Note :
.RS  "*" 2 The -inst , -hinst , -allMacro, or -allPartition parameters must be specified with this parameter.  "*" 2 There must be an edgeN specified for every edge of the object(s).  "*" 2 Enclose the edgeNs in double-quotes, curly braces, or [ list
... ].
.RE   Data_type: string, optional  "\fB-innerRingBySide {<x1 y1 x2 y2>}\fR" Creates a hollow ring of placement blockage around the inside of the object(s) specified. bottom is the width in microns of the blockage created on bottom edges, etc.  Note:
.RS  "*" 2 The -inst, -hinst, -allMacros, or -allPartition parameters must be specified with this parameter.  "*" 2 The -innerRingBySide parameter can be used with rectilinear objects.  "*" 2 Enclose the bottom...left valuesin double-quotes, curly braces, or [ list
... ]
.RE   Data_type: box, optional  "\fB-inst <inst_name>\fR" Specifies the name of the instance on which the placement blockage is to be applied.  Data_type: (inst), optional  "\fB-name <place_blockage_name>\fR" Specifies the name of the placement blockage.  Note: Placement blockage names need not be unique.  Note: If neither -name nor -prefixOn parameters are specified, then the created place blockage is named defScreenName.  Data_type: string, optional  "\fB-noCutByCore\fR" Specifies that placement blockages should not be truncated at the core boundary. Placement blockage will always be truncated at the die boundary.  Data_type: bool, optional  "\fB-prefixOn\fR" Specifies that the placement blockages should be named with a prefix defined by getFPlanMode -defaultBlockageNamePrefix attribute. Names are of the form prefix_<int>  Data_type: bool, optional  "\fB-outerRingByEdge {<edge1 edge2 edge3
...>}\fR" Creates a hollow ring of placement blockage around the outside of the object(s) specified. edgeN is the width in microns of the placement blockage along the Nth edge. edge1 is the vertical edge starting at the left corner of the leftmost edge with the lowest y coordinate as placed, and proceeding clockwise through the other edges.  Note:
.RS  "*" 2 The -inst, -hinst , -allMacros, or -allPartition parameters must be specified with this parameter.  "*" 2 There must be an edgeN specified for every edge of the object(s).  "*" 2 By default, a toroid of blockage is created around the specified object(s). Use the -cover parameter to create a solid blockage over the objects with the specified additional halo of blockage.  "*" 2 Enclose the edgeNs in double-quotes, curly braces, or [ list
... ].
.RE   Data_type: string, optional  "\fB-outerRingBySide {<x1 y1 x2 y2> <}>\fR" Creates a hollow ring of placement blockage around the outside of the object(s) specified. bottom is the width in microns of the placement blockage along the bottom edge(s) of object(s) specified, etc.  Note:
.RS  "*" 2 The -inst, -hinst, or -allPartition parameters must be specified with this parameter.  "*" 2 The -outerRingBySide parameter can be used with rectilinear objects.  "*" 2 By default, a toroid of blockage is created around the specified object(s). Use the -cover parameter to create a solid blockage over the objects with the specified additional halo of blockage.  "*" 2 Enclose the bottom...left in double-quotes, curly braces, or [ list
... ].
.RE   Data_type: box, optional  "\fB-polygon {{<x1 y1>} {<x2 y2>}
...}\fR" Specifies the polygon vertices of the blockage, in microns.  Data_type: point_list, optional   "\fB-snapToSite\fR" Snaps the newly created placement blockage to a row site.  Data_type: bool, optional   "\fB-type {hard | soft | partial | macroOnly}\fR" Specifies the type of blockage to be created.
.RS  "*" 2 hard: Neither standard cell instances nor macros may be placed in the blockage. This is the default.  "*" 2 soft: Only buffers, inverters, isolation cells, clock gates, tie cells and level shifters are allowed to be placed inside the soft blockages. All other cells are placed outside the soft placement blockage. You can optionally specify cells and instances that are allowed or forbidden to be placed inside soft blockages by using the specifySelectiveBlkgGate or unspecifySelectiveBlkgGate commands.  "*" 2 partial: In conjunction with the -density parameter alone or with the -density and -excludeFlops parameters together, creates a placement blockage that has a maximum density as specified (and sometimes excludes flops and latches too).  "*" 2 macro_only: Enables the proto_design command to keep macros out of the placement blockage; however, it enables standard cells to be placed inside the box as if no blockage is present. Macro-Only blockage is represented as "0" percent partial blockage in floorplan file, DEF file, and in Innovus DB.
.RE   Default: hard  Note: Alternatively, you can create different types of placement blockages using the Set Placement Blockage Options form or after creating the placement blockage, you can double-click on the object in the design display area to open the Attribute Editor and select from four blockage types.  Data_type: enum, optional 
.SH Example
.RS  "*" 2 The following command creates a soft blockage, softBlockage2 in the design area:  createPlaceBlockage -type soft -box { { 3442.3600 3739.2000 3511.6500 5716.6300 } } -name softBlockage2   "*" 2 The following command creates a hard blockage covers the block instance of DTMF_INST/PLLCLK_INST:  createPlaceBlockage -type hard -inst DTMF_INST/PLLCLK_INST -cover  Before:                                                                                                              After:  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)         (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   "*" 2 The following command creates a hard blockage for hierarchical instance (Module) of DTMF_INST/TDSP_CORE_INST:  createPlaceBlockage -type hard -hinst DTMF_INST/TDSP_CORE_INST -cover  Before:                                                                                                   After:  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   "*" 2 The following command creates a hollow ring of placement blockage inside of the object:  createPlaceBlockage -type hard -inst DTMF_INST/PLLCLK_INST -innerRingByEdge {30 40 50 60}  Before:                                                                                                              After:  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)     (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)  createPlaceBlockage -type hard -inst DTMF_INST/PLLCLK_INST -innerRingBySide {30 40 50 60}  Before:                                                                                                              After:  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)     (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   "*" 2  The following command shows the functionality of the option noCutByCore:  createPlaceBlockage -box {952 1690 1291 1899}      createPlaceBlockage -box {952 1690 1291 1899} -noCutByCore  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)         (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   "*" 2 The following command shows the functionality of the option prefixOn:  setFPlanMode -defaultBlockageNamePrefix prefix   createPlaceBlockage -box {932 1004 1286 1265}             (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)  createPlaceBlockage -box {932 1004 1286 1265} -prefixOn  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   "*" 2 The following command creates a hollow ring of placement blockage outside of the object:  createPlaceBlockage -hinst DTMF_INST/TDSP_CORE_INST -innerRingByEdge {20 30 40 50}  Before:                                                                                                          After:  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)  createPlaceBlockage -hinst DTMF_INST/TDSP_CORE_INST -innerRingBySide {20 30 40 50}  Before:                                                                                                          After:  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.) 
.RE 
.SH Related Information
.RS  "*" 2 setFPlanMode  "*" 2 deletePlaceBlockage   "*" 2 Placing the Design chapter in the Innovus User Guide 
.RS  "*" 2  Guiding Placement with Blockages
.RE 
.RE
.P
