.nf
.P Product Version     22.14    Cadence Design Systems, Inc. 
.fi
.TH create_ccopt_flexible_htree  22.14 "Fri Oct 06 02:12:27 2023" 
.SH Name \fBcreate_ccopt_flexible_htree\fR \-  Creates a design object for a flexible H-tree, under the specified pin
.SH Syntax \fBcreate_ccopt_flexible_htree\fR  [-help]  [-adjust_sink_grid_for_aspect_ratio {true | false}]  -final_cell <base_cell>   [-hv_balance {true | false}]  [-image_directory <dirName>]  [-inverting]  [-layer_density <value>]  [-max_driver_distance <value>]  [-max_root_distance <value>]  [-mode {drv | distance}]   -name <flexibleHtreeName>  [-omit_symmetry <string>]  [-partition_boundary_polarity {non_inverting | inverting | ignore}]  [-partition_groups {{partition
...} [max_boundary_net_length] [inverting | non_inverting] [subtree]
...}]  [-power_weight <value>]   -pin {pin | port}   [-sink_grid {columns rows}]  [-sink_grid_box {<xmin ymin xmax ymax>}]  [-sink_grid_exclusion_zones {{<xmin ymin xmax ymax>}
...}sink_grid_exclusion_zones]  [-sink_instance_prefix <prefixName>]  [-sink_grid_sink_area {width height}]  [-sinks {{pin_name | {<xmin ymin xmax ymax>}}
...}]  [-stop_at_sdc_clock_roots]  -trunk_cell <base_cell> 
.P Creates a design object for a flexible H-tree, under the specified pin. The H-tree is adjusted to consider placement and routing blockages, and any power routing.
.P You can specify this command in a sequence to create multiple flexible H-trees.  
.P Note: This command does not synthesize flexible H-trees. After creating or defining flexible H-trees using this command, use the synthesize_ccopt_flexible_htrees command to synthesize all the flexible H-trees created using this command. 
.SH Parameters    "\fB-help   \fR" Outputs a brief description that includes type and default information for each create_ccopt_flexible_htree parameter. For a detailed description of the command and all of its parameters, use the man command:  man create_ccopt_flexible_htree.   "\fB-adjust_sink_grid_for_aspect_ratio {true | false}\fR" When set to true, adjusts the sink grid for aspect ratio.  Default: true  "\fB-image_directory <dirName>\fR" Specifies the name of the directory to which the images generated by the H-tree synthesis algorithm are written.  The images are PNG files.  Color coding of images is provided below:  White: Unobstructed edges of the synthesis grid  Red: Grid points that are blocked for trunk cell placement in all modules  Orange: Grid points that are blocked for final cell placement in all modules  Red orange: Grid points that are blocked for trunk and final cell placement in all modules  Yellow circle: The grid point of the source  Yellow points: Candidate grid points of H-tree sinks  Yellow rectangle: The sink area containing target grid point candidates of H-sinks, adjusted to the synthesis grid  Brown: If specified, the sink grid box snapped to the synthesis grid  Green/blue: The edges of the synthesized H-tree  Purple: H-tree repeaters  Cyan: Partition boundaries in hierarchical designs  "\fB-final_cell <base_cell>\fR" Specifies the library cell (buffer or inverter) to use for the ends of the clock tree.  "\fB-hv_balance {true | false}\fR" When set to true, specifies that the horizontal and vertical metal wires can only be balanced against other wires of the same orientation.  When set to false, specifies that any wire can be balanced against any other wire.  Default: true  "\fB-inverting\fR" Specifies whether the tree will invert its input or not. By default, this parameter is not enabled.   "\fB-layer_density <value>\fR" Specifies the layer density used to compute the parasitics for timing estimates of H-tree nets.   "\fB-max_driver_distance <value>\fR" When specified, the software ignores DRVs and uses the given value as the maximum length of the nets connecting the H-tree drivers.  "\fB-max_root_distance <value>\fR" When specified, the software ignores DRVs and uses the given value as the maximum length of the net connecting the root and the first driver of the H-tree. This value can only be specified if the -max_driver_distance parameter is also specified.  "\fB-mode {drv | distance}\fR" Specifies the driver insertion mode.  When set to drv, drivers are inserted to avoid DRVs.  When set to distance, the parameters, -max_driver_distance and -max_root_distance determine the maximum net lengths allowed. Transitions and delays are not computed in this case.  Default: drv  Note: When this parameter is set to distance, the -max_driver_distance and -max_root_distance parameters must be specified.  "\fB-name  <flexibleHtreeName>\fR" Specifies the name of the flexible H-tree to be created. This parameter is required.   "\fB-omit_symmetry <string>\fR" Specifies that no symmetry drivers and/or branches should be added to balance the pin load of nets in the flexible H-tree.  Symmetry drivers are drivers that are added to balance pin capacitances at branch points. For example, if buffer pairs are inserted at branch points, one of these buffers may not drive any fanout and is inserted to match other buffer pairs at the same level of the flexible H-tree. Omitting symmetry drivers can reduce the power of the H-tree but increase its skew. Drivers that are added to terminate symmetry branches do not count as symmetry drivers and are never omitted.  Similarly, symmetry branches are branches that are needed to balance the wire load at branch points. They are added to match other branchpoints at the same level of the flexible H-tree. Symmetry branches are always terminated with drivers, which are not counted as symmetry drivers.  Possible values for this parameter are:  false: Add symmetry branches and drivers  true: Omit both symmetry drivers and branches  drivers: Omit symmetry drivers  branches: Omit symmetry branches  {drivers branches}: Omit both symmetry drivers and branches  {}: Add symmetry branches and drivers  By default, symmetry branches and buffers are added.  "\fB-partition_boundary_polarity {non_inverting | inverting | ignore}\fR" Specifies the polarity of the clock signal with regard to the source of the flexible H-tree when entering partitions. The following values are allowed:
.RS  "*" 2 non_inverting: When specified, allows only non-inverting polarity at partition entry points.  "*" 2 inverting: When specified, allows only inverting polarity at partition entry points.  "*" 2 ignore: When specified, allows inverting and non-inverting polarity at partition entry points.
.RE   Default: non_inverting  "\fB-partition_groups {{<partition>
...} [max_boundary_net_length] [inverting | non_inverting] [<subtree>]
...}\fR" Specifies the groups in which partitions are clustered in channelless designs. Nested lists imply allowed crossings between groups. Each group has zero or one input port and each partition must only be specified once. Optionally, a maximum pre-route net length from the boundary of a partition group can be specified. The maximum pre-route net length must be specified as the second parameter of a nested partition group. Optionally, the next argument specifies the clock phase when entering the partition group in relation to the root pin of the H-tree. Allowed values are 'inverting' and 'non_inverting'. If no value is specified, the clock phase is unconstrained. The clock phase is unconstrained when crossing the boundaries of partitions within the same group. All specified clock phases must be either inverting or non_inverting.  For example, if the following partitions are specified:  {{A} {{C D} 50 non_inverting {{E F}} {{G}}}}  It means the following:
.RS  "*" 2 The H-tree starts in partition A and descends into group C/D.  "*" 2 From partition group C/D, the tree descends into groups E/F and G.  "*" 2 Any clustering of sinks inside the C/D and E/F groups is allowed, potentially crossing internal partition boundaries several times.  "*" 2 Partition A has no clock input port and one clock output port  "*" 2 Partition group C/D has one clock input port and two clock output ports  "*" 2 Partition group E/F and G have one clock input port and no clock output port  "*" 2 The maximum net length from the entry point into partition group C/D is 50um (pre-route)  "*" 2 The clock phase is non_inverting when entering parition group C/D. The clock phase is unconstrained when entering other partition groups
.RE   Default: {}  "\fB-power_weight <value>\fR" Specifies the power versus insertion delay trade-off. Valid values are between 0 and 1, specifying the weight that is put on power optimization during the synthesis of flexible H-trees.  Default: 1   "\fB-pin  {pin | port}\fR" Specifies the pin under which to create the flexible H-tree. This parameter is required.  "\fB-sink_grid {columns rows}\fR" Specifies the columns and rows of a grid of H-tree sinks. The columns and rows may be swapped if the -adjust_sink_grid_for_aspect_ratio parameter is set to true.  Note: This parameter is not supported in master/clone designs.  "\fB-sink_grid_box {xmin ymin xmax ymax}\fR" Specifies the area of the box that the grid of H-trees should cover.   "\fB-sink_grid_exclusion_zones {{<xmin ymin xmax ymax>}
...}\fR" Specifies zones from which sinks of the sink grid are excluded if the zones completely cover the respective sink area.  "\fB-sink_grid_sink_area {width height}\fR" Specifies the approximate size of the rectangle describing valid locations for final cells, specified using the -final_cell parameter, per H-tree sink in the grid.   "\fB-sink_instance_prefix <prefixName>\fR" Specifies the prefix used for instance names of final cells, specified using the -final_cell parameter and the sinks specified using the -sinks parameter.  "\fB-sinks {<pin_name>| { <xmin ymin xmax ymax> }}\fR" Specifies approximate rectangular sink regions for the buffer locations at the end of the tree, which are specified using the -final_cell parameter or pins. The specified pins must be in the clock tree. Nested lists imply clustering relationships.  "\fB-stop_at_sdc_clock_roots\fR" Specifies that the clock tree definition should stop searching for parts of the clock tree at the root of SDC clocks.   "\fB-trunk_cell <base_cell>\fR" Specifies that this cell should be used for the buffers inside the flexible H-tree. This parameter is required. 
.SH   Examples
.RS  "*" 2 The following command creates a flexible H-tree for four sinks under the the pin "root/Y". The sinks of the H-tree will be of type BUFX16 and placed approximately inside the specified sink rectangles. Other buffers added to the H-tree will be of type BUFX8. No symmetry buffers are added to balance the pin load of nets. The flexible H-tree is then synthesized using the synthesize_ccopt_flexible_htrees command.
.RE
.P create_ccopt_flexible_htree -name tree0 -pin root/Y -sinks { {200 200 300 300} {200 700 300 800} {700 200 800 300} {700 700 800 800} } -final_cell BUFX16 -trunk_cell BUFX8 -omit_symmetry drivers  synthesize_ccopt_flexible_htrees 
.RS  "*" 2 The following commands create two flexible H-trees under the pins "rootA/Y" and "rootB/Y". The sinks will be of the type INVX8 and will be placed in the specified sink grids. Other buffers added to the H-trees will be of type INVX12. Symmetry buffers are omitted to balance the pin load of nets. The flexible H-trees are then synthesized using the synthesize_ccopt_flexible_htrees command.
.RE
.P create_ccopt_flexible_htree -name htreeA -pin rootA/Y -sink_grid {2 2} -final_cell INVX8 -trunk_cell INVX12 -omit_symmetry drivers  create_ccopt_flexible_htree -name htreeB -pin rootB/Y -sink_grid {4 4} -final_cell INVX8 -trunk_cell INVX12 -omit_symmetry drivers  synthesize_ccopt_flexible_htrees
.P Note: During flexible H-tree synthesis a number of buffers (or inverters) are created. In designs with no fence regions, every instance in the flexible H-tree, including all H-tree sinks, are assigned to the top-level hInst. In this case, the create_ccopt_flexible_htree command moves the original fanout of the root pin of the flexible H-tree to a single H-tree sink as shown in the image below. 
.P (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)
.P In designs where there are fence regions, the command chooses hInsts for instances in the flexible H-tree considering fence region constraints. The fanout of the root pin of the flexible H-tree is connected to H-tree sinks that best match the hInst to which a fanout instance belongs.
.P The images below illustrate a clock tree with three clock tree sinks, ff1, ff2, and ff3 and three hInsts, "top", "left", and "right". The hInsts "left" and "right" are fenced. Fenced regions are shown in pale orange. Sink ff1 is in hInst "right", ff2 is in the top-level hInst, and ff3 is in hInst "left". The hInsts "left" and "right" are children of the top-level hInst. After flexible H-tree synthesis there are four H-tree sink instances, t1, t2, t3, and t4 laid out in a square such that t1 is in the fence region for the hInst "left", t2 is in the fence region for the hInst "right", and the other two are in hInst "top". The flops have been connected to H-tree sinks that match their fence constraints. Note that when running ccopt_design after creating the flexible H-tree, multi-tap CTS may reconnect ff2 to t4 rather than t3.
.P Before H-tree Synthesis
.P (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)
.P After H-tree Synthesis
.P (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)
.P Using the Sink Grid Parameters 
.P The diagram below illustrates the usage of the sink grid parameters of this command. Note the following:
.RS  "*" 2 The sink grid is specified as {4 4}, which means it will have four columns and four rows   "*" 2 No H-tree sinks are created for sink areas that are completely covered by placement blockages or exclusions zones  "*" 2 H-tree sink instances with the name specified in the diagram will be placed inside the unblocked parts of the sink areas  "*" 2 The sink grid is adjusted by snapping it to the synthesis grid, which means that the specified sink areas are treated only as a guide
.RE
.P (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.) 
.SH Related Properties
.P You can also set the following properties on the flexible H-tree design objects by using the set_ccopt_property command:
.RS  "*" 2 adjust_sink_grid_for_aspect_ratio   "*" 2 final_cell        "*" 2 flexible_htree  "*" 2 flexible_htree_placement_legalization_effort  "*" 2 htree_sinks   "*" 2 hv_balance  "*" 2 image_directory  "*" 2 inverting  "*" 2 layer_density  "*" 2 mode  "*" 2 omit_symmetry  "*" 2 partition_boundary_polarity  "*" 2 pin  "*" 2 power_weight  "*" 2 sink_grid     "*" 2 sink_grid_sink_area  "*" 2 sink_grid_box  "*" 2 sink_grid_exclusion_zones  "*" 2 sink_instance_prefix  "*" 2 stop_at_sdc_clock_roots  "*" 2 trunk_cell  
.RE
.P For detailed information about all public CCOpt properties, see the CCOpt Properties chapter in the Innovus User Guide.
.P You can also use the following command:
.P get_ccopt_property -help <propertyName> 
.SH Related Information
.RS  "*" 2 delete_ccopt_flexible_htrees  "*" 2 get_ccopt_flexible_htrees  "*" 2 get_ccopt_property  "*" 2 synthesize_ccopt_flexible_htrees  "*" 2 set_ccopt_property
.RE
.RS  "*" 2 The following section in Clock Tree Synthesis chapter of the Innovus User Guide
.RS  "*" 2 Flexible H-Tree and Multi-Tap Clock Flow 
.RE  "*" 2 For details of the use model for this feature, see the Flexible H-tree and Multi-Tap Clock Flow in Innovus Application Note on the Cadence Online Support website.
.RE
.P
