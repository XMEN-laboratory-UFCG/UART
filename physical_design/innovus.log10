
Cadence Innovus(TM) Implementation System.
Copyright 2024 Cadence Design Systems, Inc. All rights reserved worldwide.

Version:	v23.31-s109_1, built Mon Apr 22 16:02:43 PDT 2024
Options:	-stylus -file innovus_script.tcl 
Date:		Wed Oct 29 23:25:23 2025
Host:		microeletronica (x86_64 w/Linux 4.18.0-477.27.1.el8_8.x86_64) (16cores*32cpus*Intel(R) Xeon(R) Silver 4314 CPU @ 2.40GHz 16384KB)
OS:		Red Hat Enterprise Linux 8.8 (Ootpa)

License:
		[23:25:23.510345] Configured Lic search path (23.02-s005): 5280@melicense.embedded.ufcg.edu.br

		invs	Innovus Implementation System	23.1	checkout succeeded
		8 CPU jobs allowed with the current license(s). Use set_multi_cpu_usage to set your required CPU count.


Create and set the environment variable TMPDIR to /home/valmir.silva/UART/physical_design/innovus_temp_1215646_36faecf9-ba77-4c09-9702-cf7fdad084e4_microeletronica_valmir.silva_aBG29m.

Change the soft stacksize limit to 0.2%RAM (256 mbytes). Set global soft_stack_size_limit to change the value.
[INFO] Loading PVS 23.10 fill procedures

**INFO:  MMMC transition support version v31-84 

#@ Processing -files option
@innovus 1> source innovus_script.tcl
#@ Begin verbose source (pre): source innovus_script.tcl
@file 1:
@file 2: set LEF_PATH $env(HOME)/PDK/gsclib045/lef
@@file 3: set_db init_lib_search_path [list $LEF_PATH]
@@file 4: set_db init_lef_files {gsclib045_tech.lef gsclib045_macro.lef}
@file 5:
@@file 6: set_db init_read_netlist_files ../sim/outputs/uart_netlist.v
@@file 7: set_db init_lef_files {gsclib045_tech.lef gsclib045_macro.lef}
@file 8:
@@file 9: set_db init_power_nets VDD
@@file 10: set_db init_ground_nets VSS
@file 11: #read_verilog ../sim/output_files/uart_netlist.v
@file 12: set init_mmmc_file Default.view
@file 13: #read_mmmc Default.view
@@file 14: read_physical -lefs {gsclib045_tech.lef gsclib045_macro.lef}
**ERROR: (IMPIMEX-10):	Specified file cannot be found: gsclib045_tech.lef.
**ERROR: (IMPIMEX-10):	Specified file cannot be found: gsclib045_macro.lef.
@@file 15: read_netlist ../sim/outputs/uart_netlist.v -top uart_top
**ERROR: (IMPIMEX-12):	'init_design' failed. You are missing one or more of the required commands before running init_design.
The MMMC init sequence looks like this: 
read_mmmc top.mmmc 
read_physical -lef {tech.lef stdcell.lef}   #optional in Tempus, required for Innovus 
read_netlist top.v 
read_power_intent -1801 top.1801	    #only for MSV designs 
init_design 

Tempus also supports a single-mode timing init sequence with no MMMC file like this: 
read_libs all.lib 
read_netlist top.v 
read_sdc top.sdc 
init_design 

See the 'Stylus Common UI Initialization' section in the 'Design Import and Export Capabilities' chapter of the Innovus Stylus 
Common UI User Guide for more details.
**ERROR: (IMPSE-110):	File 'innovus_script.tcl' line 15: errors out.
#@ End verbose source innovus_script.tcl
**ERROR: (IMPSYT-6692):	Invalid return code while executing 'innovus_script.tcl' was returned and script processing was stopped. Review the following error in 'innovus_script.tcl' then restart.
Error info: innovus_script.tcl: 
    while executing
"error [putError $::imexEmsHandleId 12]"
    (procedure "::IMEX::check_initialization_state" line 44)
    invoked from within
"::IMEX::check_initialization_state "design""
    (procedure "IMEX::read_netlist" line 41)
    invoked from within
"IMEX::read_netlist ../sim/outputs/uart_netlist.v -top uart_top"
    ("uplevel" body line 1)
    invoked from within
"uplevel [concat IMEX::read_netlist $args] "
    (procedure "se::smap::IMEX::read_netlist" line 1)
    invoked from within
"read_netlist ../sim/outputs/uart_netlist.v -top uart_top"
    (file "innovus_script.tcl" line 15)
    invoked from within
"::se_source_orig innovus_script.tcl"
    ("uplevel" body line 1)
    invoked from within
"uplevel [concat ::se_source_orig $args]"
    invoked from within
"if { !$no_encoding && $encodingName != ""  } {
                  set st [uplevel [concat ::se_source_orig " -encoding " $encodingName " "  $args]]
   ..."
    invoked from within
"if {[::SE::source_verbose_file_state $file_name] == 1} {
              ::SE::source_verbose_start $file_name
              if { !$no_encoding && $enco..."
    invoked from within
"if {$useTclVerbose} {
          # use tcl internal method
          set st ""
          if {[::SE::source_verbose_file_state $file_name] == 1} {
     ..."
    invoked from within
"if {$largeFile == 1} {
    if {$enableVerbose == 0 && [::SE::isEchoFile] == 1} {
      $putCmd "Sourcing $file_name"
    }
    set st [uplevel [concat..."
    (procedure "source" line 186)
    invoked from within
"source innovus_script.tcl"
    invoked from within
"::se::run_command_from_console "source innovus_script.tcl""
    invoked from within
"eval_novus {::se::run_command_from_console "source innovus_script.tcl"}"
    (in namespace inscope "::" script line 1)
    invoked from within
"namespace inscope :: eval_novus "::se::run_command_from_console \"source $fileName\""".
@innovus 2> 
--------------------------------------------------------------------------------
Exiting Innovus on Wed Oct 29 23:26:49 2025
  Total CPU time:     0:00:27
  Total real time:    0:01:28
  Peak memory (main): 1866.68MB


*** Memory Usage v#2 (Current mem = 1760.230M, initial mem = 851.559M) ***
*** Message Summary: 0 warning(s), 5 error(s)

--- Ending "Innovus" (totcpu=0:00:26.7, real=0:01:26, mem=1760.2M) ---
