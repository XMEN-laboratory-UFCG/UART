.nf
.P Product Version     22.14    Cadence Design Systems, Inc. 
.fi
.TH setFPlanMode  22.14 "Fri Oct 06 02:12:27 2023" 
.SH Name \fBsetFPlanMode\fR \-  Sets the global parameters of the check floorplan feature
.SH Syntax \fBsetFPlanMode\fR   [-help] [-reset]  [-autoSyncMasterClone {busGuides|constraints|stdcells|macros}]  [-cellsForExtraSites <cell_name>]  [-checkTypes {basic|fence|oddEvenSiteRow|macroPin|color|alignmentFollowingPin|alignmentPartitionClone|    busGuideConnectivity|feedThrough|partitionInPartition|multiLayerPin|powerDomain|    partition|place|sameLengthSite|narrowChannel|blockOnly|unifiedVddOnBottom|all}]  [-cutOffPlaceBlockageOutsideDie {true|false}]   [-cutOffRouteBlockageOutsideDie {true|false}]   [-defaultBlockageNamePrefix <string>]  [-defaultPowerDomainSite {true|false}]   [-defaultTechSite <string>]   [-enableRectilinearDesign {true|false}]  [-extraSites  <site_name>]  [-forceHonorSnapRule {true|false}]  [-includeIoWhenInitArea {true|false}]   [-initAllCompatibleCoreSiteRows {true|false}]   [-keepRowsWhenMovingPowerDomain {true|false}]  [-maxIoHeight {true|false}]   [-minimumSites <value>]   [-move_macros_with_constraint {guide|region|fence|none|all}]  [-move_preplaced_std_cell_only {true|false}]   [-move_std_cell_with_constraint {guide|region|fence|none|all}]  [-narrowChannelThreshold <value>]   [-no_cut_row {true|false}]   [-powerRailLayer <string>]   [-rowSiteHeight {any|odd|even}]  [-rowSiteWidth {any|odd|even}]   [-snap_all_corners_to_grid {true|false}]  [-snapBlockGrid {manufacturing|inst|placement|userDefine|LayerTrack|finfetInst|finfetManufacturing|finfetPlacement}]  [-snapConstraintGrid {manufacturing|inst|placement|userDefine|LayerTrack|finfetInst|finfetManufacturing|finfetPlacement}]  [-snapCoreGrid {manufacturing|inst|placement|userDefine|LayerTrack|finfetInst|finfetManufacturing|finfetPlacement}]  [-snapDieGrid {manufacturing|inst|placement|userDefine|LayerTrack|finfetInst|finfetManufacturing|finfetPlacement}]  [-snapIoGrid {manufacturing|inst|placement|userDefine|LayerTrack|finfetInst|finfetManufacturing|finfetPlacement}]  [-snapPlaceBlockageGrid {manufacturing|inst|finfetInst|finfetManufacturing|userDefine}}]   [-snapPlaceBlockageType {closest|upsize|sequential}]  [-user_define_grid {<x_offset y_offset x_pitch y_pitch>}]
.P Sets the global parameters of the check floorplan feature. Use the getFPlanMode command to return the current settings for the setFPlanMode command. The setFPlanMode parameters affects the behavior the checkFPlan command. You can use this command after importing the design and before using the checkFPlan command.  
.SH Parameters    "\fB-autoSyncMasterClone {busGuides|constraints|stdcells|macros}\fR" Specifies the objects that automatically sync up between master and clone partitions during add, delete, edit, move, or stretch operations. The sync-up object can be busGuides, standard cells, macros, or constraints (fence/guide/region).
.RS  "*" 2 busGuides: Any change (add, delete, edit, move, or stretch) for busGuides in master will sync-up to clones or vice versa.  For example, setFPlanMode -autoSyncMasterClone {busGuides}  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   "*" 2 constraints: Any change (move, stretch, add, delete, or edit) in fence/guide/region of master will sync-up to clones or vice versa.
.RS  "*" 2 When constraints is not specified, tool will not sync-up any change of fence/guide/region between master and clones.  "*" 2 When constraints is specified, tool will auto sync-up any change of fence/guide/region between master and clones when doing moving/stretching/add/delete/edit.
.RE  "*" 2 stdcells: Any change (add, delete, edit, move, flip, rotate, or unplace) in standard cells will sync-up to clones or vice versa.  For example, setFPlanMode -autoSyncMasterClone {stdcells}  "*" 2 macros: Any change (add, delete, edit, move, flip, rotate, or unplace) in macros in master will sync-up to clones or vice versa.  For example, setFPlanMode -autoSyncMasterClone {macro}  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.) 
.RE   Default: " "  Data_type:  enums={busGuides constraints stdcells macros}  "\fB-cellsForExtraSites <cell_name>\fR" Specifies the cell names for which the additional sites will be created. These sites can be used up later in the flow.  Default: " "  Data_type: string  "\fB-checkTypes {basic|fence|oddEvenSiteRow|macroPin|color|alignmentFollowingPin|alignmentPartitionClone|    busGuideConnectivity|feedThrough|partitionInPartition|multiLayerPin|powerDomain|    partition|place|sameLengthSite|narrowChannel|blockOnly|unifiedVddOnBottom|all}\fR" Specifies the check types for the checkFPlan command.
.RS  "*" 2
.RS  "*" 2 basic: Checks the basic quality of the floorplan to detect potential problems before the design is passed on to other tools.   "*" 2 fence: Checks the fences.  "*" 2 oddEvenSiteRow: Checks odd or even site row. It checks if the current row fits to the setting of setFPlanMode -rowSiteWidth and -rowSiteHeight.  "*" 2 macroPin: Checks if the macro pins are off track.  "*" 2 color: Checks the color issues of all floorplan objects, such as pins, preRoutes, prePlacedInst, etc.  "*" 2 alignmentFollowingPin: Checks if the centerline of the followpin is the same as the row's border and matches the power attribute.  "*" 2 alignmentPartitionClone: Checks that partition clones are aligned with their master on the power mesh. This checks that the master and clones partitions are inside a core boundary, and ensures that the partition fence instances sizes match the master instance.  "*" 2 busGuideConnectivity: Checks incorrect overlapping and connectivity.  "*" 2 feedThrough: Checks feedthrough buffer insertion.  "*" 2 partitionInPartition: Checks if child partitions reside inside parent partitions.  "*" 2 multiLayerPin: Checks multi layer pins.  "*" 2 powerDomain: Checks the power domains.  "*" 2 partition: Checks the partitions.  "*" 2 place: Checks the placement.  "*" 2 sameLengthSite:  Checks the same length site rule where, in a group of continuous poly stripes with the same length, the number of sites must be >= N.(N is specified by the -minimumSites option.)  "*" 2 narrowChannel: Checks for narrow channels.  "*" 2 blockOnly: Checks for performance most frequently used in block implementation. Includes: basic, oddEvenSiteRow, macroPin, and color.  "*" 2 unifiedVddOnBottom: Checks whether all the cells in the design are with the same vdd on bottom.  "*" 2 all: Performs all checks on the floorplan to detect potential problems before the design is passed on to other tools. 
.RE 
.RE   Default: basic  Data_type: enums={basic fence oddEvenSiteRow macroPin color alignmentFollowingPin alignmentPartitionClone busGuideConnectivity feedThrough partitionInPartition multiLayerPin powerDomain partition place sameLengthSite narrowChannel blockOnly unifiedVddOnBottom all}_list  "\fB-cutOffPlaceBlockageOutsideDie {true|false}\fR" When creating placement blockages, it cuts the part outside of die and snaps it by default.  Default: true  Data_type: bool   "\fB-cutOffRouteBlockageOutsideDie {true|false}\fR" When creating routing blockages around inst/Hinst/Partition, it cuts the part outside of die and snaps it by default. If this option is set to false, then the outside part is not cut and snapped.  Default: true  Data_type: bool   "\fB-defaultBlockageNamePrefix <string>\fR" Specifies the name prefix for placement blockage and routing blockage.  Default: " "  Data_type: string   "\fB-defaultPowerDomainSite {true | false }\fR" Creates rows based on the default power domain site instead of the the default site of the design.  Default: false  Data_type: bool   "\fB-defaultTechSite <string>\fR" Specifies a site as default technical site.  Note: After setting a default technical site, the auto-calculating default-technical-site functionality is disabled.  Note: The saveFPlan, loadFPlan, initCoreRow and checkFPlan commands honor the default technical site specified using the setFPlanMode -defaultTechSite parameter.  Default: auto-calculated default-technical-site by tool.  Data_type: string  "\fB-enableRectilinearDesign {true | false}\fR" Specifies whether the design boundary can be changed to rectilinear shape.  Default: false  Data_type: bool  "\fB-extraSites  <site_name>\fR" Specifies the name for the additional sites that will be created for cells which are not used in the netlist by default. These sites can be used up later in the flow.  Note: Sites for all specified cells should be defined in the LEF.  Default: " "  Data_type: string  "\fB-forceHonorSnapRule {true|false}\fR" When enabled, objects are snapped to non-FinFET grids.   Note: If a design has a FinFET grid, during floorplanning, objects will  automatically be snapped to the corresponding FinFET grid even if the snap grid is an instance grid, manufacture grid or a placement grid. However, with the -forceHonorSnapRule parameter set to true, the instance grid, manufacture grid, and placement grid will not be mapped to the FinFET Instance Grid, FinFET Manufacture Grid, and FinFET Placement Grid respectively.   Default: false  Data_type: bool  "\fB-help\fR" Outputs a brief description that includes the type and default information for each setFPlanMode parameter. For a detailed description of the command and all of its parameters, use the man command:    man setFPlanMode.  "\fB-includeIoWhenInitArea {true|false}\fR" Includes IO cells when calculating the area of modules.  Default: false  Data_type: bool   "\fB-initAllCompatibleCoreSiteRows {true|false}\fR" When enabled, initCoreRow creates SITES which are used by all cells in the library.  Default: false  Data_type: bool  "\fB-keepRowsWhenMovingPowerDomain {true|false}\fR" Specifies whether to keep all existing rows in power domain when moving, resizing or reshaping a power domain on GUI or by command.  Default: false  Data_type: bool   "\fB-maxIoHeight {true|false}\fR" When specified, the maximum IO height is used to calculate a die box with IO placement. By default, the minimum IO height is used.  Default: false  Data_type: bool   "\fB-minimumSites <value>\fR" Specifies the number of minimal sites (N) that the checkFPlan command will check for the same length site rule. When the sameLengthSite option of the -checkTypes parameter is specified, this parameter is required.  Default: 0  Data_type: int   "\fB-move_macros_with_constraint {guide|region|fence|none|all}\fR" Specifies that the macros move with the constraint modules at the same time.  Default: fence  Data_type: enums={guide region fence none all}_list  "\fB-move_preplaced_std_cell_only {true|false} \fR" Specifies that only the pre-placed standard cells can move with the constraint modules at the same time.   Default: false  Data_type: bool  "\fB-move_std_cell_with_constraint {guide|region|fence|none|all}\fR" Specifies that standard cells move with the constraint modules at the same time.  Default: none  Data_type: enums={guide region fence none all}_list  "\fB-narrowChannelThreshold <value>\fR" Reports the narrow channels whose width (in micros) is smaller than the specified value. When the narrowChannel option of the -checkTypes parameter is specified, this parameter is required.  Default: 0  Data_type: float  "\fB-no_cut_row {true|false}\fR" Specifies that the rows are not required to be cut before other operations. The following commands honor this mode setting:
.RS  "*" 2 createRouteBlkAlongTrack  "*" 2 check_ufc  "*" 2 fix_floorplan  "*" 2 finishFloorplan
.RE   With the -no_cut_row parameter set to false  or not specified, the tool will run above the mentioned commands based on the current row shape. So the rows for objects like insts, place blockages are expected to be cut out before running these commands to get expected results.  If rows are not cut before run these commands are run and the -no_cut_row parameter is set to true, the tool will identify the rows that have not been cut before running these commands. It calls the cutRow command to get a cut row shape during these commands action. The cutRow command cuts the rows for insts, hinsts, place blockages, route blockages, power domains, groups, or bumps by default. These commands will work based on the cut row shape. But the actual row shape is not changed after these operations.   Default: false  Data_type: bool  "\fB-powerRailLayer <string>\fR" Specifies the layers used for calculating the power/ground on the bottom attribute of the cell or techsite. By default, the lowest metal layer is used.  Default: " "  Data_type: string   "\fB-reset\fR" Restores all parameters modified using setFPlanMode to their default settings. The -reset parameter must be the first parameter specified. If you specify -reset by itself, the software resets all setFPlanMode parameters to their default values. If you specify parameters after -reset, the software resets only those parameters to their default values.  Any values that do not already match the default value and are reset will be reported.  "\fB-rowSiteHeight {any|odd|even}\fR" Specifies the odd even row height constraints.  Default: any  Data_type: enums={any odd even}   "\fB-rowSiteWidth {any|odd|even}\fR" Specifies the odd even row width constraints.  Data_type: enums={any odd even}  "\fB-snap_all_corners_to_grid {true|false}\fR" Snaps all corners of an object to the grid. It defines the snapping behavior for the kinds of objects: constraint, ptnCut and black box.  Note: This option only works when the snapping grid is user defined grid or FinFET grid.
.RS  "*" 2 When the snapping grid is ManufactureGrid, the object is snapped to the closest grid.  "*" 2 When the snapping grid is InstanceGrid and PlacementGrid, the object is moved to first snap the LL corner to the closest location and then to snap the UR corner to closest location.  "*" 2 When the snapping grid is user defined grid, the object is moved to snap the LL corner to the closest location. Then if the -snap_all_corners_to_grid parameter set to true, the object is moved to snap the UR corner to the closest location.  "*" 2 When the snapping grid is FinFET grid and the -snap_all_corners_to_grid parameter set to true, all corners of the object are snapped to the closest grid. However, if the -snap_all_corners_to_grid parameter set to false, only the LL corner of the object is snapped to the closest location.
.RE   Default: false  Data_type: bool  "\fB-snapBlockGrid {manufacturing | inst | placement | userDefine | LayerTrack | finfetInst | finfetManufacturing | finfetPlacement }\fR" Specifies the block snap rules. It can be set to snap to:
.RS  "*" 2 manufacturing: Manufacture Grid  "*" 2 inst: Instance Grid  "*" 2 placement: Placement Grid  "*" 2 userDefine: User-define Grid  "*" 2 LayerTrack: LayerTrack Grid  "*" 2 finfetManufacturing: FinFET Manufacture Grid  "*" 2 finfetInst: FinFET Instance Grid  "*" 2 finfetPlacement: FinFET Placement Grid
.RE   Default: manufacturing  Note: For FinFET designs, the default is finfetManufacturing.  Data_type: enums={manufacturing inst placement userDefine LayerTrack finfetInst finfetManufacturing finfetPlacement}   "\fB-snapConstraintGrid {manufacturing | inst | placement | userDefine | LayerTrack | finfetInst | finfetManufacturing | finfetPlacement }\fR" Specify the constraint snap rules. It can be set to snap to:
.RS  "*" 2 manufacturing: Manufacture Grid  "*" 2 inst: Instance Grid  "*" 2 placement: Placement Grid  "*" 2 userDefine: User-define Grid  "*" 2 LayerTrack: LayerTrack Grid  "*" 2 finfetManufacturing: FinFET Manufacture Grid  "*" 2 finfetInst: FinFET Instance Grid  "*" 2 finfetPlacement: FinFET Placement Grid
.RE   Default: inst  Note: For FinFET designs, the default is finfetInst.  Data_type: enums={manufacturing inst placement userDefine LayerTrack finfetInst finfetManufacturing finfetPlacement}  "\fB-snapCoreGrid {manufacturing | inst | placement | userDefine | LayerTrack | finfetInst | finfetManufacturing | finfetPlacement }\fR" Specifies the core snap rules. It can be set to snap to:
.RS  "*" 2 manufacturing: Manufacture Grid  "*" 2 inst: Instance Grid  "*" 2 placement: Placement Grid  "*" 2 userDefine: User-define Grid  "*" 2 LayerTrack: LayerTrack Grid  "*" 2 finfetManufacturing: FinFET Manufacture Grid  "*" 2 finfetInst: FinFET Instance Grid  "*" 2 finfetPlacement: FinFET Placement Grid
.RE   Default: placement  Note: For FinFET designs, the default is finfetPlacement.  Data_type: enums={manufacturing inst placement userDefine LayerTrack finfetInst finfetManufacturing finfetPlacement}  "\fB-snapDieGrid {manufacturing | inst | placement | userDefine | LayerTrack | finfetInst | finfetManufacturing | finfetPlacement }\fR" Specifies the die snap rules. It can be set to snap to:
.RS  "*" 2 manufacturing: Manufacture Grid  "*" 2 inst: Instance Grid  "*" 2 placement: Placement Grid  "*" 2 userDefine: User-define Grid  "*" 2 LayerTrack: LayerTrack Grid  "*" 2 finfetManufacturing: FinFET Manufacture Grid  "*" 2 finfetInst: FinFET Instance Grid  "*" 2 finfetPlacement: FinFET Placement Grid
.RE   Default: placement  Note: For FinFET designs, the default is finfetPlacement.  Data_type: enums={manufacturing inst placement userDefine LayerTrack finfetInst finfetManufacturing finfetPlacement}  "\fB-snapIoGrid {manufacturing | inst | placement | userDefine | LayerTrack | finfetInst | finfetManufacturing | finfetPlacement }\fR" Specifies the IO snap rules. It can be set to snap to:
.RS  "*" 2 manufacturing: Manufacture Grid  "*" 2 inst: Instance Grid  "*" 2 placement: Placement Grid  "*" 2 userDefine: User-define Grid  "*" 2 LayerTrack: LayerTrack Grid  "*" 2 finfetManufacturing: FinFET Manufacture Grid  "*" 2 finfetInst: FinFET Instance Grid  "*" 2 finfetPlacement: FinFET Placement Grid
.RE   Default: manufacturing  Note: For FinFET designs, the default is finfetManufacturing.  Data_type: enums={manufacturing inst placement userDefine LayerTrack finfetInst finfetManufacturing finfetPlacement}  "\fB-snapPlaceBlockageGrid {manufacturing|inst|finfetInst|finfetManufacturing|userDefine}\fR" Specifies the placement blockage snap rules.
.RS  "*" 2 manufacturing: Manufacture Grid  "*" 2 inst: Instance Grid  "*" 2 userDefine: User-define Grid  "*" 2 finfetManufacturing: FinFET Manufacture Grid  "*" 2 finfetInst: FinFET Instance Grid
.RE   Default: inst  Data_type: enums={manufacturing inst finfetInst finfetManufacturing userDefine}  "\fB-snapPlaceBlockageType {closest|upsize|sequential}\fR" Specifies a snapping type for placement blockages. The snapping types can be:
.RS  "*" 2 closest:  The tool snaps all corners of the placement blockage to the closest specified grid, regardless of which direction could increase or decrease the blockage size.  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)  "*" 2 upsize: The tool snaps all corners of the placement blockage to the corresponding closest specified grid in the direction which would increase the objects' size.   (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   "*" 2 sequential: The tool moves the placement blockage to snap the low-left corner to the closest specified grid, then snaps the upper-right corner to the closest grid.  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.) 
.RE   This setting is honored by the following commands:
.RS  "*" 2 setObjFPlanBox  "*" 2 setObjFPlanBoxList  "*" 2 setObjFPlanPolygon  "*" 2 createPlaceBlockage {-box|-boxList|-polygon}  "*" 2 snapFPlan -placeBlk
.RE   Default: closest  Data_type: enums={closest upsize sequential}  "\fB-user_define_grid {<x_offset y_offset x_pitch y_pitch>}\fR" Specifies the user-defined grid.  The format is {<x_offset y_offset x_pitch y_pitch>}.  Where,   <x_offset y_offset> is the offset of the user-defined grid.   <x_pitch> separates the vertical grid lines.   <y_pitch> separates the horizontal grid lines.   Note: The values are in microns.  Default: {0 0 0 0}  Data_type: box 
.SH Examples
.P In the following, the command checks the same length site rule in a group of continuous poly stripes with the same length. The number of minimal sites it check is set to 6 using the -minimumSites parameter.
.P setFPlanMode -checkTypes sameLengthSite -minimumSites 6
.P (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.) 
.SH Related Information
.RS  "*" 2 saveFPlan  "*" 2 loadFPlan  "*" 2 initCoreRow  "*" 2 checkFPlan  "*" 2 floorPlan  "*" 2 getFPlanMode  "*" 2 Floorplanning the Design chapter in the Innovus User Guide
.RE
.P
