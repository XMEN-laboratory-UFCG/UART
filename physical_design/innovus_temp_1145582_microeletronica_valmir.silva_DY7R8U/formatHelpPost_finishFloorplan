.nf
.P Product Version     22.14    Cadence Design Systems, Inc. 
.fi
.TH finishFloorplan  22.14 "Fri Oct 06 02:12:27 2023" 
.SH Name \fBfinishFloorplan\fR \-  Performs advanced placement-related refinements to a floorplan, to produce a more polished floorplan. The finishFloorplan command, can be used on any floorplan, including third-party generated floorplans
.SH Syntax \fBfinishFloorplan\fR   [-help]   [-mask <integer>]  { [-autoHalo | [-autoHaloBasedOnPitch [-margin <value>]] | -addHalo <width> |   [-fillPlaceBlockage <blkgType> <maxGap>    [-density <value>] [-excludeFlops] [-deadArea <float>] [-honor_placement_density]] |   [-fillRouteBlockage <maxGap> [-layer <layerID>]   [-cutLayer <cutLayerID>]   [-fills ] [-exceptpgnet ]   [-spacing <spaceValue> | -designRuleWidth <width>] [-deadArea <maxDeadArea>]] |  -addCornerBlockage <string> |   [-drcRegionLayer <layer+> [-edgeExtend {<x y>}] [-edgeShrink {<x y>}]]| -addBoundaryEOLBlockage | -addRowBasedRegionBlockage| -undo ]  [-area {<x1 y1 x2 y2>}]   [-namePrefix <name>] } 
.P Performs advanced placement-related refinements to a floorplan, to produce a more polished floorplan. The finishFloorplan command, can be used on any floorplan, including third-party generated floorplans. You can use the setFinishFPlanMode command to set the active objects and specify the channel direction for the finishFloorplan command to use. The setFinishFPlanMode parameters affects the behavior the finishFloorplan command.
.P Note: You can access the functionality of the finishFloorplan command using the finishFPlan alias. 
.P Note: The finishFloorplan command honors the settings of the -no_cut_row parameter of the  setFPlanMode command that specifies if rows are not required to be cut before other operations. When the -no_cut_row parameter is disabled, the finishFloorplan command adds blockages around the current row/non-row area in the design when the "-activeObj row" or -drcRegionObj nonRowArea options of the setFinishFPlanModesetFinishFPlanMode command are set. If rows are not cut before other operations but the -no_cut_row parameter is enabled, the finishFloorplan command can work as cut row flow to add blockages around row/non-row area which satisfy row constraints. 
.SH Parameters   "\fB-addBoundaryEOLBlockage\fR" Adds end-of-line(EOL) routing blockage with COREEOLBLOCKAGE property around active object boundary. This parameter can only work with rows as active objects. For each layer, EOL routing blockage is perpendicular with prefer routing direction.  Note: A Core EOL blockage rule is used to specify line-end blockages formed from the core edges. The EOL Blockage is defined in LEF as below:  PROPERTY LEF58_COREEOLBLOCKAGE COREEOLBLOCKAGE <outwardSize inwardSize> [SIDEEXTENSION <sideExtension>] ; ;   COREEOLBLOCKAGE <outwardSize inwardSize> SIDEEXTENSION <sideExtension>  Defines the line-end blockages formed from the core edges in the orthogonal direction of the preferred routing direction of the layer of a design. The blockage is formed by going outward from the core by outwardSize and inward by inwardSize. If SIDEEXTENSION is defined, the blockage is extended by sizeExtension along the direction of the core edge on both sides. These blockages prevent any line-end of a wire end inside it. If a wire goes through the blockage and just touches the far end edge, it is still a violation. If a wire just touches an edge without extending inside the blockage, it is fine.
.  Data_type: bool, optional  "\fB-addCornerBlockage <x y>\fR" Specifies the width and height of the hard placement blockage that is automatically added around the corner.  Example: finishFloorplan -addCornerBlockage 50 50  Before：   (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)  After：  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   Data_type: string, optional  "\fB-addHalo <width>\fR" Adds halo of the specified width.  Data_type: float, optional  "\fB-addRowBasedRegionBlockage\fR" When specified, it adds row based region blockages. This parameter adds region layer blockages with ROWBASED property in some row areas.  Note: The row area is determined by standard cells with both such row sites and OBS on the region layer.    Data_type: bool, optional  "\fB-area {<x1 y1 x2 y2>}\fR" Specifies the lower left x coordinate, lower left y coordinate, upper right x coordinate, and upper right y coordinate respectively of the blockage area.  Data_type: box, optional  "\fB-autoHalo\fR" Automatically adds halos around every macro in design. For each macro edge, the halo thickness is proportional to pin density on that edge.  Example: finishFloorplan -autoHalo  Before：  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)  After：  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   Data_type: bool, optional  "\fB-autoHaloBasedOnPitch\fR" Automatically add halos based on the number of pins, routing layer, and layer pitch on the edge.  Example: finishFloorplan -autoHaloBasedOnPitch  Before：  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)  After：  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   Data_type: bool, optional   "\fB-cutLayer <cutLayerID>\fR" Specifies the cut layer ID on which the routing blockage is to be applied.  Data_type: string, optional  "\fB-deadArea <float>\fR" Specifies the maximum value of dead area.  Note: A dead area is an island with placeable rows that has a narrow channel connect to main core area. For example, the placeable rows surrounded by macros.  Example：  finishFloorplan -fillPlaceBlockage hard 300  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)  finishFloorplan -fillPlaceBlockage hard 300 -deadArea 90000  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   Data_type: float, optional  "\fB-density <value>  \fR" Specifies the density of the partial placement blockage.  Data_type: string, optional  "\fB-designRuleWidth <width>\fR" Specifies the effective width of the routing blockage. The value is a real number greater than 0.  Data_type: float, optional  "\fB-drcRegionLayer <layer+>\fR" Specifies the region layer name list.  Data_type: string, optional  "\fB-edgeExtend {<x y>}\fR" Specifies that the DRC region can be extended from the specified edge. The -edgeExtend parameter is used for creating DRC region blockages by extending from the specified drcRegion objects.  Note:
.RS  "*" 2 The specified value for option -edgeExtend should be equal to or greater than zero. If the specified value is less than zero, treat it as zero.  "*" 2 For X/Y direction, if the -edgeExtend and -edgeShrink options are specified at the same time, then Innovus compares the value first and then extends or shrinks. Example, -edgeExtend {3 4} and -edgeShrink {2 5} are specified at the same time, tool will extend 1(3-2) in X-direction and Shrink 1(5-4) in Y-direction. 
.RE   Example: setFinishFPlanMode -drcRegionObj hardBlkg         finishFloorplan -drcRegionLayer R1 -edgeExtend {50 100}  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   Data_type: point, optional  "\fB-edgeShrink {<x y>}\fR" Specifies that the DRC region can be shrunk from the specified edge. The -edgeShrink parameter is used for creating DRC region blockages by shrinking the specified drcRegion objects.  Note:
.RS  "*" 2 The specified value for option -edgeShrink should be equal to or greater than zero. If the specified value is less than zero, treat it as zero.  "*" 2 For X/Y direction, if the -edgeExtend and -edgeShrink options are specified at the same time, then Innovus compares the value first and then extends or shrinks. Example, -edgeExtend {3 4} and -edgeShrink {2 5} are specified at the same time, tool will extend 1(3-2) in X-direction and Shrink 1(5-4) in Y-direction. 
.RE   Example: setFinishFPlanMode -drcRegionObj hardBlkg          finishFloorplan -drcRegionLayer R1 -edgeShrink {50 100}  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   Data_type: point, optional  "\fB-exceptpgnet\fR" Specifies that the routing blockage is to be applied on a signal net routing and not on power or ground net routing.  Data_type: bool, optional  "\fB-excludeFlops\fR" Specifies that flops and latches will be excluded from the partial placement blockage.  Note: The -density and -excludeFlops options must be used with the -fillPlaceBlockage parameter.  Data_type: bool, optional  "\fB-fillPlaceBlockage <blkgType maxGap>\fR" Adds placement blockages of the specified blockage type (blkgType) to fill macro-to-macro, macro-to-boundary,   macro-to-OBS, OBS-to-OBS, and boundary-to-OBS gaps up to a specified size (maxGap).
.RS  "*" 2 For blkgType, you can specify soft, hard, or partial.  "*" 2 For maxGap, specify a positive value, in microns.
.RE   Default: -autoPlaceBlockage  Example1: finishFloorplan -fillPlaceBlockage hard 50  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)  Example2: setFinishFPlanMode -activeObj {macro hardblkg}          finishFloorplan -fillPlaceBlockage hard 300  Before:  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)  After:  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   Data_type: string, optional  "\fB-fillRouteBlockage <maxGap>\fR" Adds routing blockage upto a specified size (maxGap)  Example: finishFloorplan -fillRouteBlockage 50  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   Data_type: float, optional  "\fB-fills\fR" Specifies that the routing blockage is to be applied on metalfills.  Data_type: bool, optional  "\fB-help\fR" Outputs a brief description that includes type and default information for each finishFloorplan parameter.  For a detailed description of the command and all of its parameters, use the man command:   man finishFloorplan.  "\fB-honor_placement_density\fR" Adds standard cell density check when adding placement blockages.  Note:
.RS  "*" 2 If option the -density parameter is not specified with the finishFloorplan -fillPlaceBlockage soft command, the density of the created soft blockage is 100.  "*" 2 If there are standard cells in the channel, partial blockages will be created with the density of the current standard cell in the channel when the following command is used:  finishFloorplan -fillPlaceBlockage hard/soft -honor_placement_density  "*" 2 If there are standard cells in the channel and the specified density for the partial blockage is less than the density of the current standard cell in the channel, partial blockages will be created with the density of the current standard cell in the channel with the "finishFloorplan -fillPlaceBlockage partial -density command.  "*" 2 If there are standard cells in the channel and the specified density for partial blockage is larger than the density of the current standard cell in the channel, partial blockages will be created with the specified density when the finishFloorplan -fillPlaceBlockage partial -density command is called.
.RE   Data_type: bool, optional  "\fB-layer <layerID>\fR" Specifies the layer ID of the route blockage.  Data_type: string, optional  "\fB-mask <integer>\fR" Specifies the mask number used when adding routing blockages and creating DRC region.
.RS  "*" 2 The -mask parameter enables the finishFloorplan command to block routing layers with specified masks when adding routing blockages and creating DRC region. Layers with other masks can still be routed through the blockage.
.RE
.RS  "*" 2 The -mask parameter must be used with one or more of -layer, -cutLayer and -drcRegionLayer parameters.  "*" 2 Only one mask can be specified. The default value of the -mask parameter is 0. This implies that all the specified layers will be blocked. Uncolored routes are always blocked.  "*" 2 If the -mask parameter is specified with an integer value greater than 0, then both layers with specified mask and uncolored layers are blocked.  Example. If -mask 1 is specified, it blocks mask 1 and uncolored routes.  "*" 2 If more than one layers are associated  with a mask, the mask is applied to all of them.  "*" 2 If the -mask parameter is specified, the tool checks if the mask is suitable for all of the specified layers. If not, it displays an ERROR message and no blockages are created.  The number of arguments specified with the -mask parameter must be same as the number of arguments specified with the  -layer, -cutLayer and -drcRegionLayer parameters.  "*" 2 The setNanoRouteMode and verify_drc commands honor the -mask parameter.
.RE   Example: 
.RS  "*" 2 The following command creates routing blockages for blocking mask 2 of M1 layer.  finishFloorplan -layer M1 -mask 2 -fillRouteBlockage 400  "*" 2 The following command(s) DRC region for mask 1 of PIO layer in core to die area.  setFinishFPlanMode -drcRegionObj {coreSpacing}  finishFloorplan -drcRegionLayer PIO -mask 1 -edgeExtend {0.083 0}
.RE   Default: 0  Data_type: int, optional  "\fB-margin <value>\fR" Specifies the pitch margin when halos are added using -autoHaloBasedOnPitch.  Default: 0.1  Data_type: float, optional  "\fB-namePrefix <name>\fR" Specifies the name prefix for the added blockage to avoid naming conflict with the existing one.  Data_type: string, optional  "\fB-spacing <spaceValue>\fR" Specifies the minimum spacing between layers within the routing blockage. The value is a real number greater than or equal to 0.  Data_type: float, optional  "\fB-undo\fR" Reverses the previous run of finishFloorplan.  Data_type: bool, optional 
.SH   Example
.RS  "*" 2 The following command creates a dead area with partial placement blockage of gap of 5 microns and density 60:  finishFloorplan -deadArea 100 -fillPlaceBlockage partial 5 -density 60
.RE 
.SH Related Information
.RS  "*" 2 getFinishFPlanMode  "*" 2 setFinishFPlanMode
.RE
.RS  "*" 2 Floorplanning the Design chapter in the Innovus User Guide.
.RS  "*" 2 Finishing the Floorplan
.RE 
.RE
.P
