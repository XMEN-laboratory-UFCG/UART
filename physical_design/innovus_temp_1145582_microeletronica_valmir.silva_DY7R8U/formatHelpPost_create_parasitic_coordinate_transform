.nf
.P Product Version     22.14    Cadence Design Systems, Inc. 
.fi
.TH create_parasitic_coordinate_transform  22.14 "Fri Oct 06 02:12:27 2023" 
.SH Name \fBcreate_parasitic_coordinate_transform\fR \-  Determines accurate location information of nodes during SPEF reading. 
.P In case of hierarchical designs, there can be multiple blocks in a design that are implemented separately
.SH Syntax \fBcreate_parasitic_coordinate_transform\fR   [-help]   {-inst <inst_name>   [-x_block_origin <value>]  [-x_offset< value>]   [-y_block_origin <value>]  [-y_offset <value>]   [-orient {R0 R90 R180 R270 MY MX90 MX MY90}]  [-relative_to_parent]} | {-reset}
.P Determines accurate location information of nodes during SPEF reading. 
.P In case of hierarchical designs, there can be multiple blocks in a design that are implemented separately. During Top level STA analysis, SPEFs of these blocks are stitched together with top for flat STA analysis. This works well if pin location of blocks is not required. In case of AOCV analysis, when spatial analysis is enabled, accurate location of all nodes (pin/net) in the design is required for calculating accurate derates in the design. This makes it necessary to determine accurate nodes location during SPEF reading. This can be achieved by transforming SPEF coordinates as per their physical locations.
.P Note:
.RS  "*" 2 This command works with all possible SPEF and RCDB input combinations with read_parasitics command, which means for only RCDB(s) as input, mix of SPEF(s) and RCDB(s) as input and only SPEF(s) as input.  "*" 2 If this command is not specified, the spefIn command tries to automatically find the orientation and origin of the hierarchical SPEF blocks and applies those identified transforms to the parasitic co-ordinates.  "*" 2 The create_parasitic_coordinate_transform command settings remain in effect for all the subsequent spefIn and read_parasitics until they are reset using the -reset option.  "*" 2 Whenever the block's origin (in block SPEF/DEF) is non-zero, the x and y coordinates need to be specified for applying the transform. The last two parameters, -x_block_origin and -y_block_origin in the following command use-model are only required to be specified for the case of non-zero block origin.  create_parasitic_coordinate_transform -inst <inst_name>   -x_offset <x-offset of block origin in top-level DEF/SPEF>   -y_offset <y-offset of block origin in top-level DEF/SPEF>-orient <orientation>   -x_block_origin <x-coord of non-zero block origin>-y_block_origin <y-coord of non-zero block origin>For example: 
.RS  "*" 2  For Non-Zero Origin Block: Specify the block origin as shown below:  create_parasitic_coordinate_transform -inst eco_inst1   -x_offset 421.6   -y_offset 485   -orient R180   -x_block_origin 3.4   -y_block_origin 9.7  "*" 2  For zero origin block: No need to specify the block origin as shown below:  create_parasitic_coordinate_transform   -inst controller   -x_offset 16.8   -y_offset 205   -orient R0  or  create_parasitic_coordinate_transform   -inst controller   -x_offset 16.8   -y_offset 205   -orient R0   -x_block_origin 0   -y_block_origin 0  Both the above commands are equivalent.
.RE  "*" 2  The impact of this command is valid till first spefIn command is read (in case of MMMC, till all corners SPEFs have been read). If you want to read SPEF again, this command needs to be applied once again. These transformations will be applied during spefIn command.
.RE 
.SH Parameters   "\fB-help\fR" Prints out the command usage. For a detailed description of the command and all of its parameters, use the man command: man create_parasitic_coordinate_transform  "\fB-inst <inst_name>\fR" Indicates the hierarchical name of the instance for which SPEF is being read.   "\fB-orient {R0 R90 R180 R270 MY MX90 MX MY90}  \fR" Indicates orientation change of instances. The valid values are R0, R90, R180, R270, MX,MX90, MY, and MY90.  "\fB-relative_to_parent\fR" When this parameter is specified, the software considers block offsets for the specified instance relative to the immediate parent.   By default, the software considers the offset value relative to the top hinst.  "\fB-reset\fR" Resets SPEF transform values.  "\fB-x_block_origin <value>\fR" Specifies that in case of non-origin block, offset x-coordinate in microns    "\fB-x_offset <value>\fR" Indicates the actual x-coordinate as exists in the physical floor plan, corresponding to the specified instance.   "\fB-y_block_origin <value>\fR" Specifies that in case of non-origin block, offset y-coordinate in microns.    "\fB-y_offset <value>\fR" Indicates the actual y-coordinate as exists in the physical floor plan, corresponding to specified instance. 
.SH Examples
.P Consider the following hierarchical design where X and Z are two blocks inside TOP, and Y is another hierarchical block in X:
.P (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)  Here, X,Y, and Z have the following physical locations in the floor plan:  X - (a,b)   Y- (c,d)  Z- (m,n)
.P You can apply transformations to all blocks with respect to TOP, by using the following commands:
.P create_parasitic_coordinate_transform -inst X -x_offset a -y_offset b
.P create_parasitic_coordinate_transform -inst Z -x_offset m -y_offset n -orient MY
.P create_parasitic_coordinate_transform -inst X/Y -x_offset c -y_offset d -orient R180
.P These transformations will be applied when spefIn command is issued. 
.SH Related Information
.RS  "*" 2 set_analysis_view  "*" 2 redirect  "*" 2 read_parasitics  "*" 2 spefIn
.RE
.P
