.nf
.P Product Version     22.14    Cadence Design Systems, Inc. 
.fi
.TH verify_drc  22.14 "Fri Oct 06 02:12:27 2023" 
.SH Name \fBverify_drc\fR \-  Checks for DRC violations and creates violation markers in the design database that can be seen on the GUI and browsed with the Violation Browser
.SH Syntax \fBverify_drc\fR   [-help]   [-area {{<lx1 ly1 ux1 uy1>} {<lx2 ly2 ux2 uy2>}...}]  [-check_illegal_trim_shapes]  [-check_ndr_spacing]  [-check_only {all | regular | special | selected_net | selected | cell | default}]  [-check_reverse]  [-check_routing_halo]  [-check_same_via_cell]  [-check_short_only]  [-check_trim_length]  [-check_uncolored]  [-enable_post_passive_fill_check]  [-exclude_pg_net]  [-ignore_fill_wire]  [-ignore_trial_route]  [-layer_range {layer1 [layer2]}]   [-limit <max_violation>]   [-report <filename>]  [-view_window] 
.P Checks for DRC violations and creates violation markers in the design database that can be seen on the GUI and browsed with the Violation Browser. Use the set_verify_drc_mode command to set global parameters for verify_drc. The parameters you specify with the set_verify_drc_mode command are then automatically used on running verify_drc. The settings are saved in the design so you need not set them each time you  run verify_drc.
.P Use get_verify_drc_mode to return the current settings for the set_verify_drc_mode command. The verify_drc command also checks the DRC violations within the specified via. This helps in minimizing the DRC violations before the sign-off. In case the design has any DRC violation, the software flags DRC on all the via masters, such as PG via, regular via, via pillar, and via array. Use set_verify_drc_mode -check_same_via_cell true to check via cell violation.
.P Note: The verify_drc command checks only the placed instances. It skips checking the DRC for unplaced instances. This command adds the LEF rule in the description section of the Violation Browser to provide more information on the rule that is causing the DRC violation.
.P 
.SH Parameters   "\fB-help\fR" Prints a brief description that includes the type and default information for each verify_drc parameter.  For a detailed description of the command and all its parameters, use the man command:  man verify_drc  "\fB-area {{<lx1 ly1 ux1 uy1>} {<lx2 ly2 ux2 uy2>}...}  \fR" Specifies the coordinates of one or more area regions to verify. It verifies the objects inside and outside the die, if the area regions are bigger than chip boundary. By default, objects within the chip boundary are verified against the DRC rules. For example, verify_drc -area {0 0 100 100} {100 100 200 200}.  "\fB-check_illegal_trim_shapes\fR" Checks the missing trim shapes for a fulfilled design.   "\fB-check_ndr_spacing\fR" Checks non-default rule spacing as a hard rule.  Note: When the setNanoRouteMode -route_enforce_route_rule_on_special_net_wire parameter is set to true, the non-default rule for special net is also checked.  "\fB-check_only {all | regular | special | selected_net | selected | cell | default}\fR" Specifies which types of shapes are checked against the DRC rules. Following are the various values of this parameter :
.RS  "*" 2 all: Reports the violations between all routing shapes (regular and special) and all other shapes, including routing blockages and cell pin/obs shapes.  "*" 2 regular: Reports only the violations between regular routing shapes (normally created by NanoRoute) and all other shapes. It does not report violations between special routes, routing blockages and cell shapes. This is useful to find violations caused only by NanoRoute.  "*" 2 special: Reports only the violations between the special routes and all other shapes. It does not report violations between the regular routes, routing blockages, and cell shapes. This is useful while checking the power routing or pre-routed special routes with isolating these errors from other violations.  "*" 2 selected_net: Reports only the violations between the objects on the selected nets. Before running verify_drc, the nets need to be selected with the selectNet command.  "*" 2 selected: Reports only the violations on special wire objects/vias of the secondary PG nets with the specified user class.  "*" 2 cell: Reports only the violations between the shapes of cells including the objects inside the same cell and different cells.  "*" 2 default: This value is equivalent to specifying the regular and special at the same time.
.RE   Default: default  "\fB-check_reverse\fR" Reports the CONVEXCORNER REVERSE violation in the flow.   Default: false  "\fB-check_routing_halo\fR" Checks for routing violations in the routing halo area. It also creates the DRC markers on any routing wire parallel to the block boundary or design boundary.  Routing halos are used to avoid cross-coupling between top-level and inside-the-block routes. As short jogs do not affect cross-coupling much, they can be ignored even if they overlap with the halo region. Normally, it is better to have some short jogs instead of more vias.  When the -check_routing_halo option is specified, any jog shape with length less than the value set for set_verify_drc_mode -max_wrong_way_halo is ignored for the wrong way check. verify_drc reports violations only for the jog shapes that have lengths greater than the  set_verify_drc_mode -max_wrong_way_halo setting.  Default: If the set_verify_drc_mode -max_wrong_way_halo option has not been set, verify_drc uses 4*<pitch> as the default value for the routing halo, where <pitch>is the METAL2 routing pitch.  "\fB-check_same_via_cell\fR" Checks the DRC issues in the same via cell.    "\fB-check_short_only\fR" Excludes checking all other DRCs except the short ones.   "\fB-check_trim_length\fR" Checks the maximum length on the trim shape layer.   "\fB-check_uncolored\fR" Reports violations with no color and invalid mask color for the multi-pattern ( MPT) layers.  "\fB-enable_post_passive_fill_check\fR" Checks if the track is fully filled for the full_fill trim layer.  "\fB-exclude_pg_net\fR" Excludes the checking of power and ground (P/G) nets. verify_drc -exclude_pg_net reports violations caused by routing (special and regular) except for a P/G net.  "\fB-ignore_fill_wire\fR" Ignores metal fill wires while checking DRCs.   "\fB-ignore_trial_route\fR" Ignores early global route when checking DRC.   "\fB-layer_range {layer1 [layer2]}\fR" Checks between the specified range of metal layers, including the cut layers. You can use the full layer name, or abbreviations like 1 for the first routing layer, etc. For example, -layer_range {metal1 metal3} will check all the layers between metal1 to metal3. If layer2 is not specified, it only checks DRC on layer1.  "\fB-limit <max_error>\fR" Specifies the maximum number of errors to be reported. The <max_error> value can be any integer from 1 to 2147483646.  Note: Set <max_error> to 0 to remove the limit and report all the DRCs in the design. However, this may impact memory and runtime, if the design has too many DRCs.   Default: 1000  "\fB-report <filename>\fR" Specifies the report file name, which contains the violation information.  "\fB-view_window\fR" Checks for DRC violations in the current window. 
.SH Example
.RS  "*" 2 Any one of the following commands checks for DRC violations between Metal2 and Metal3 layers:
.RE
.P verify_drc -layer_range {2 3}
.P verify_drc -layer_range {3 2}
.RS  "*" 2 The following command checks for special wire related DRC violations, such as spacing violation between power/ground wire to cell blockage:
.RE
.P verify_drc -check_only special 
.SH Related Information
.RS  "*" 2 The Identifying and Viewing Violations chapter of User Guide.  "*" 2 checkPlace  "*" 2 clearDrc  "*" 2 get_verify_drc_mode  "*" 2 saveDrc  "*" 2 set_verify_drc_mode
.RE
.P
