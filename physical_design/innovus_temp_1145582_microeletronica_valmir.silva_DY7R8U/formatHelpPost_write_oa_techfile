.nf
.P Product Version     22.14    Cadence Design Systems, Inc. 
.fi
.TH write_oa_techfile  22.14 "Fri Oct 06 02:12:27 2023" 
.SH Name \fBwrite_oa_techfile\fR \-  Writes out a DFII style ASCII technology file that can be given to the techLoadDump executable to create an equivalent OpenAccess technology database
.SH Syntax \fBwrite_oa_techfile\fR  [-help]   [<fileName>]  [-include_rules]  [-process_node <coord>] 
.P Writes out a DFII style ASCII technology file that can be given to the techLoadDump executable to create an equivalent OpenAccess technology database.
.P This command is used to create and verify OpenAccess technology files that match LEF technology files. By default, write_oa_techfile writes out only DRC information and no LDRS or VIA information.
.P The expected flow for new processes is as follows:
.RS  "*" 2 Read a LEF file into Innovus with init_design.  "*" 2 Use write_oa_techfile to write out the tech (.tf) file.  "*" 2 Run techLoadDump using the
.tf file.  "*" 2 Use lef2oa -pnrLibDataOnly to create the LDRS and vias. 
.RE
.P For more information, refer to the chapter "Technology File Layer Attributes" of the Virtuoso Technology Data ASCII Files Reference. 
.SH Parameter   "\fB-help\fR" Outputs a brief description that includes type and default information for each write_oa_techfile parameter.  For a detailed description of the command and all of its parameters, use the man command: man write_oa_techfile.  "\fB<fileName>\fR" Specifies the output ASCII file name.  "\fB-include_rules\fR" Includes LDRS and VIA information in the output tech file. This option should be used only if the LEF default and NDRs do not utilize fixed vias.   "\fB-process_node <coord>\fR" Specifies a process node value in nm. When specified, write_oa_techfile creates a processNode entry in the techfile for processes using the MASK construct. For example, if you specify  -process_node 20 to indicate a 20nm process, the following entry is included in the control() section of the techfile:  processNode(0.020)  If -process_node is not specified and the write_oa_techfile command detects MASK constructs on any layer, it returns an error. 
.SH Examples
.RS  "*" 2 The following set of commands updates an OpenAccess technology file with any missing information from a LEF technology file:   #Initialize a design using LEF files  write_lef_library -tech_only lef.lef  #A LEF file in canonical                                        #sorted order for easy                                         #comparison with diff  write_oa_techfile lef.tf              #A DFII ASCII tech file                                         #that can be given to                                         #techLoadDump executable  #Edit existing OA tech file to add any missing information in  #the lef.tf file  #Initialize a design using the new OA tech. Then:  write_lef_library -tech_only oa.lef #A LEF file in canonical                                       #order derived from OA tech  #Compare the two LEF files. Any differences need to be fixed  #or explained.  diff lef.lef oa.lef
.RE 
.SH Related Information
.RS  "*" 2 write_lef_library   "*" 2 Mixed Signal (MS) Interoperability Guide 
.RS  "*" 2 Technology Data Preparation chapter  "*" 2 Routing Constraint Interoperability chapter
.RE 
.RE
