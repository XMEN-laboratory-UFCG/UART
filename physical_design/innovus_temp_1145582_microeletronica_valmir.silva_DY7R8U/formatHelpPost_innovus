.nf
.P Product Version     22.14    Cadence Design Systems, Inc. 
.fi
.TH innovus  22.14 "Fri Oct 06 02:12:27 2023" 
.SH Name \fBinnovus\fR \-  Launches an Innovus Implementation System session
.SH Syntax \fBinnovus\fR  [-abort_on_error]  [-batch]  [-cds_lib_file <in_file>]  [-cpus <value>]  [-db <dir> | -ihdb <dir>]  [-disable_user_startup]  [-execute <list_of_Tcl_commands>]  [-files <in_file_list>]   [-help]  [-lic_multi_cpu <lic_list>]  [-lic_options <lic_list>]  [-lic_startup <lic_list>]  [-lic_startup_options <lic_list>]  [-lic_stack {1 | 2}]  [-log <prefix>]  [-no_cmd]  [-no_gui]  [-no_logv]  [-overwrite]  [-stylus]  [-version]  [-wait <minutes>]
.P Launches an Innovus Implementation System session. The innovus command starts one of the following products:
.RS  "*" 2 Innovus Implementation System  "*" 2 Innovus Implementation System Basic  "*" 2 Virtuoso Digital Implementation  "*" 2 Virtuoso Digital Implementation XL  "*" 2 First Encounter L  "*" 2 First Encounter XL
.RE
.P For an overview of the products and product licensing, see Product and Licensing Information chapter in the Innovus User Guide.
.P To start an Innovus session, type the innovus command with the appropriate parameters on the UNIX/Linux command line. If you type the command without parameters, the software starts in GUI mode and creates a log file and a command file. The system attempts to check out the license with the most functionality, then the license with the next most functionality, and so on. 
.SH Parameters   "\fB-help\fR" Writes out the usage and options with brief descriptions.  "\fB-abort_on_error\fR" Exits if an error is detected at any point.  If any Tcl command returns TCL_ERROR to the top level, or any Error (XXX):
... message occurs, the process will exit.  "\fB-batch\fR" Runs without interactive prompt. After all the options, including -execute and -files, are processed, the job exits.  "\fB-cds_lib_file <in_file>\fR" Loads the specified file instead of the default cds.lib file in the current directory to obtain the names and locations of OpenAccess libraries. The cds.lib file is used to list the OpenAccess library names, and their physical locations.  "\fB-cpus <value>\fR" Specifies the number of CPUs to be used for multi-threading on current host. This calls the appropriate Tcl command to set the local cpu count. This happens before any -execute or -files commands are processed. This may require extra multi-CPU licenses to be checked out (see -lic_multi_cpu).  "\fB-db <dir>\fR" Specifies the DB directory to be read. This option calls restoreDesign internally. Example:  innovus -db path/dbName.enc.dat   The specified DB directory is read before -execute or -files is invoked.   Note: The database being restored with -db should not be an Integrated Hierarchical Database (iHDB). If you want to restore an iHDB database, use -ihdb <dir> instead. The -db and -ihdb options cannot be used together.   "\fB-disable_user_startup\fR" Reads only the init file in the installation hierarchy. Does not read init files in the home or current directory.  This option suppresses the default loading from the home and current directory, which can be used to guarantee there are no local over-rides to various project settings. See the "Initialization Files" section for the init files that are loaded by default.  "\fB-execute <list_of_Tcl_commands>\fR" Specifies the Tcl commands to be executed at startup, as a quoted string.   "\fB-files <in_file_list>\fR" Specifies one or more Tcl files to be sourced at startup, after -execute commands are processed.  "\fB-ihdb <dir>\fR" Specifies that the Integrated Hierarchical Database (iHDB) directory is to be read, such as xxx/my_design/placed. This option calls restore_module_model internally. Example:  innovus -ihdb <iHDB_path>/<cell>/<tag>  The specified iHDB directory is read before -execute or -files is invoked.   The specified iHDB should already have been created with create_module_model. To learn more about the iHDB flow, refer to the "Integrated Hierarchical Database" section in the Hierarchical and Prototyping Flow chapter of the Innovus User Guide.  Note: If you want to restore a non-iHDB database, use the -db <dir> option instead. The -db and -ihdb options cannot be used together.        "\fB-lic_multi_cpu <lic_list>\fR" Controls which licenses are to be used for higher multi-CPU usage in priority order from left to right.  The allowed license names are:  invs_cpu: Innovus CPU Accelerator Option  invs - Innovus Implementation System  invsb - Innovus Implementation System Basic  fel: First EncounterL  fexl: First EncounterXL  For example, -lic_multi_cpu "fel fexl" will try to check out felfirst, and then fexl. The licenses will not be checked out until a Tcl command tries to use extra cpus that require more licenses.  "\fB-lic_options <lic_list>\fR" Specifies the order for dynamic checkout of extra option licenses when needed by a specific command. In some cases, more than one option license can be used to enable a given feature. You can control which options are allowed to be checked out, and in what priority (from left to right) when required during the run. For example, -lic_options "encan encng enccco" will only allow those three options to be checked-out dynamically, and in that priority order.  The allowed license option names are:  invs_hier - Innovus Hierarchical Design Option  invs_ms - Innovus Mixed Signal Option  invs_3d_ic - Innovus 3D-IC Option  invs_2nmGAA - Innovus 2nm GAA Option  invs_3nmGAA - Innovus 3nm GAA Option  invs_3nm - Innovus 3nm Option  invs_5nm - Innovus 5nm Option  invs_7nm - Innovus 7nm Option  invs_10nm - Innovus 10nm Option  invs_20nm - Innovus 20nm Option  invs_hfr - Innovus HFR Option  invs_gigaplace - Innovus GigaPlace XL Option  invs_gigaplace_gxl - Innovus GigaPlace GXL Option  qrcaa - Quantus Advanced Analysis GXL Option  enclp - Encounter Low Power GXL Option  encan - Encounter Advanced Node GXL Option  enccco - Encounter Clock Concurrent Opt GXL Option  encng - Encounter Next Generation (This license is used to enable beta features.)  vdixl_capacity - VDI-XL Block Capacity Option   invs_pi - Innovus Power Integrity Option  invs_ml - Innovus Machine Learning Implementation Option  invs_ehfs - Innovus Early Hierarchical Floorplan Synthesis Option  invs_dfm - Innovus DFM Option  invs_sc - Innovus Superconducting Option  invs_automotive - Innovus Automotive Option   tpsxl - Tempus Timing Signoff Solution XL  tpsl - Tempus Timing Signoff Solution L  vtsxl - Voltus IC Power Integrity Solution XL  vtsl - Voltus IC Power Integrity Solution L  vtsxm - Voltus IC Power Integrity Solution - XM  vtsesd - Voltus IC Power Integrity Solution - ESD  vtsaa - Voltus IC Power Integrity Solution Advanced Analysis GXL Option   Option licenses can be checked out dynamically when a specific Tcl command requires it. This may cause the Tcl script to stall and wait for a license, or to exit if the wait period expires.   "\fB-lic_startup <lic_list>\fR" Requests one of these licenses at startup in priority order from left to right. The supported licenses are:  invs - Innovus Implementation System  invsb - Innovus Implementation System Basic  fexl - First Encounter XL  vdixl - Virtuoso Digital Implementation XL.  vdi - Virtuoso Digital Implementation  fel: First Encounter L  For example, -lic_startup "fexl fel" will try to check out fexl first, and then fel. The checkouts will be attempted repeatedly until one succeeds or the -wait period expires.  "\fB-lic_startup_options <lic_list>\fR" Specifies additional option licenses needed at startup. If not provided, they will be checked out when needed during the run. The allowed license names are:  invs_hier - Innovus Hierarchical Design Option  invs_ms - Innovus Mixed Signal Option  invs_3d_ic - Innovus 3D-IC Option  invs_2nmGAA - Innovus 2nm GAA Option  invs_3nmGAA - Innovus 3nm GAA Option  invs_3nm - Innovus 3nm Option  invs_5nm - Innovus 5nm Option  invs_7nm - Innovus 7nm Option  invs_10nm - Innovus 10nm Option   invs_20nm - Innovus 20nm Option  invs_hfr - Innovus HFR Option  invs_gigaplace - Innovus GigaPlace XL Option  invs_gigaplace_gxl - Innovus GigaPlace GXL Option  qrcaa - Quantus Advanced Analysis GXL Option  enclp - Encounter Low Power GXL Option  encan - Encounter Advanced Node GXL Option  enccco - Encounter Clock Concurrent Opt GXL Option  encng - Encounter Next Generation (This license is used to enable beta features.)  vdixl_capacity - VDI-XL Block Capacity Option  invs_pi - Innovus Power Integrity Option  invs_ml - Innovus Machine Learning Implementation Option  invs_ehfs - Innovus Early Hierarchical Floorplan Synthesis Option  invs_dfm - Innovus DFM Option  invs_sc - Innovus Superconducting Option  invs_automotive - Innovus Automotive Option  tpsxl - Tempus Timing Signoff Solution XL  tpsl - Tempus Timing Signoff Solution L  vtsxl - Voltus IC Power Integrity Solution XL  vtsl - Voltus IC Power Integrity Solution L  vtsxm - Voltus IC Power Integrity Solution - XM  vtsesd - Voltus IC Power Integrity Solution - ESD  vtsaa - Voltus IC Power Integrity Solution Advanced Analysis GXL Option  For example, -lic_startup_options "enccco encan" will try to check out both enccco and encan when Innovus starts up. The checkouts will be attempted repeatedly until it succeeds or the -wait period expires.  "\fB-lic_stack {1 | 2}\fR" Specifies the number of licenses to stack for stackable licenses.  Some startup licenses that have limited instance counts can be stacked so that multiple licenses can be checked-out to increase the instance limit.  Innovus allows stacking of two vdi or vdixl licenses to increase the instance limit from 50,000 to 100,000.  For example, -lic_stack 2 combined with -lic_startup vdi would check out two vdi licenses to allow 100,000 instances.  Default: 1  "\fB-log <prefix>\fR" Specifies the prefix for the
.log,
.cmd, and
.logv files. If three arguments are given, such as -log "a b c", then the three names are used exactly without any extension added. So, -log "mylog mycmd mylogv" will result in mylog mycmd mylogv files.   The default for <prefix> is innovus. So if -log is not specified, innovus.log, innovus.cmd, and innovus.logv files will be created. If you specify -log test, the tool creates test.log, test.cmd and test.logv files.  The
.log file contains the normal logging output, the
.cmd file contains the Tcl commands that were executed, and the
.logv file contains a super-set of the
.log output plus "verbose" debugging output that is needed only for detailed debugging.  If the
.log file already exists, an integer is added to the end of all the files to make them unique. This means if -log test is specified, the tool will create test.log test.cmd test.logv for the first run, test.log1 test.cmd1 test.logv1 for the next run, and so on. Only the existence of
.log is checked, the existence of the
.cmd or
.logv files is not checked. The -overwrite option can be used to disable this behavior and overwrite an existing
.log file.  If the <prefix> value has a period in it, the last extension is stripped off for the
.cmd and
.logv usage. For example, -log out.log will result in out.log out.cmd out.logv files, and -log out.a.log will result in out.a.log out.a.cmd out.a.logv files. However, if the last extension in the <prefix> value is
.gz, it will be retained. For example, if you specify -log test.gz, the tool will create test.log.gz, test.cmd.gz, and test.logv.gz files. If you specify -log "test.log.gz test.cmd test.logv.gz", the tool will not gzip all files but will create files exactly as specified: test.log.gz, test.cmd, and test.logv.gz. If test.log or test.log.gz already exists, an integer is added to make the new files unique: test.log1.gz, test.cmd1, and test.logv1.gz. If there is an additional extension before
.gz , it is stripped off.   You can disable any given file by using /dev/null. For example, -log "my.log /dev/null /dev/null" will only create my.log.  Default: innovus.log   Note: If you provide the log file name under a directory path and the directory path does not exist, Innovus will create the directory path and save the log file under the directory.  "\fB-no_cmd\fR" Specifies that the
.cmd file should not be created.   "\fB-no_gui\fR" Disables GUI and Tk support. GUI will not be available later in the session.  "\fB-no_logv\fR" Specifies that the verbose log file should not be created.   "\fB-overwrite\fR" Overwrites an existing
.log file (and associated
.cmd and
.logv files) instead of adding an integer to make the files unique.  "\fB-stylus\fR" Launches the Innovus Stylus Common UI interface. This changes the Tcl commands to the Stylus Common UI interface described in the Innovus Stylus Common UI Text Reference Manual and the Stylus Common UI Database Object Information manuals. See the Innovus Stylus Common UI Migration Guide for a summary of the changes.  "\fB-version\fR" Returns the program version information.  "\fB-wait <minutes>\fR" Specifies the number of minutes the system waits for a license to become available before exiting.  Default: 0 (no wait time)  Value range: 0 to 10,000 
.SH Initialization Files
.P By default, various initialization files are loaded at startup, if they exist. They can be used to configure the GUI, load utility Tcl files, or configure Innovus settings. The initialization files are read in the following sequence:
.P 1. ~/.cadence/innovus/{gui.pref.tcl, gui.color.tcl, workspaces} in the home directory if the GUI is enabled. These files are intended to be created by View -> Set Preference and View -> All Colors -> Save options for a specific user.
.P 2.
.cadence/innovus/{gui.pref.tcl, gui.color.tcl, workspaces/} in the current directory if the GUI is enabled. These files are intended to be created by View -> Set Preference and View -> All Colors -> Save options for any user working in this directory.
.P 3.<<install_dir>>/etc/innovus/enc.tcl in the installation directory. This is intended for CAD teams that want to set Tcl parameters, customize the GUI, or add user-defined Tcl commands that affect all users of this release.
.P 4. ~/enc.tcl in the home directory. This is intended for user-specific setting that should affect only one user.
.P 5.
./enc.tcl in the current directory. This is intended for design-specific setting that should affect only designs in this directory.
.P Note: The GUI files are not loaded in the non-GUI mode.
.P If the -stylus parameter is specified, the initialization files are loaded in the following order instead:
.P 1. ~/.cadence/innovus/{gui.pref.tcl, gui.color.tcl, workspaces} in the home directory if the GUI is enabled.
.P 2.
.cadence/innovus/{gui.pref.tcl, gui.color.tcl, workspaces/} in the current directory if the GUI is enabled.
.P 3. <<install_dir>>/etc/innovus/innovus.tcl in the installation directory.
.P 4. ~/.cadence/innovus/innovus.tcl in the home directory.
.P 5.
./.cadence/innovus/innovus.tcl in the current directory.
.P 6.
./innovus_startup.tcl in the current directory. 
.P Note: The -stylus usage sets the source_verbose root attribute to true at startup. The GUI preference init files (1 and 2 above) ignore this setting, but the non-GUI preference initialization files above (3, 4, 5, and 6) will use verbose logging by default. If the shell envar CDS_STYLUS_SOURCE_VERBOSE exists and has a boolean value, then the source_verbose attribute will be set to the envar value at startup. So you can turn off verbose logging at startup by using the following command:
.P setenv CDS_STYLUS_SOURCE_VERBOSE 0 
.SH Setting Up the Run-Time Environment
.P If <install_dir> is the location of your Innovus installation, you should set up your run-time environment like this:
.RS  "*" 2 Add the <install_dir>/bin directory to your path. The bin directory has links to all the public executables in the install hierarchy.  "*" 2 If you want the legacy Innovus man pages to be available from the Unix man command, you can add <install_dir>/share/innovus/man to your MANPATH envar.   "*" 2 If you want the Tcl man pages to be available from the Unix man command, you can add <install_dir>/share/tcltools/man to your MANPATH envar.
.RE
.P For example, you might add this to your startup shell script:
.P set install_dir = /tools/innovus16.2/lnx86
.P set path = ($install_dir/bin $path)
.P setenv MANPATH $install_dir/share/innovus/man:$install_dir/share/tcltools/man:$MANPATH
.P Note: When Innovus launches, it automatically adds either the legacy or the Innovus Stylus Common UI man pages (depending on the -stylus option) and the Tcl man pages to the beginning of the current MANPATH inside Innovus. Therefore, from within Innovus, the man command will see both sets of man pages before any other man pages. 
.SH Temporary File Locations
.P Each Innovus session creates its own temporary directory to store temporary files at the beginning of the run.
.P If you have the write permission, the tool creates tmp_dir under the current directory (.). If not, tmp_dir is created in  /tmp. If the Unix envar TMPDIR is set, then the tmp_dir directory is created inside $TMPDIR.
.P The name of the tmp_dir directory will look like:
.P innovus_temp_[pid]_[hostname]_[user]_xxxxxx
.P Where _xxxxxx is a string added to make the directory unique. For example:
.P innovus_temp_10233_farm254_bob_nfp9ez
.P The temporary directory is automatically removed on exit or if the run terminated with a catchable signal (e.g. SIGSEGV). 
.SH Related Information
.RS  "*" 2 Getting Started chapter of the Innovus User Guide  "*" 2 Product and Licensing Information chapter of the Innovus User Guide  "*" 2 Hierarchical and Prototyping Flow chapter in the Innovus User Guide
.RS  "*" 2  Stylus Hierarchical Database Flow
.RE 
.RE
.P
