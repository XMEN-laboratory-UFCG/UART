.nf
.P Product Version     22.14    Cadence Design Systems, Inc. 
.fi
.TH partition  22.14 "Fri Oct 06 02:12:27 2023" 
.SH Name \fBpartition\fR \-  Converts the specified module fences to be partitions, pushes down the physical cells or power routing information to the partition level design(s), and duplicates strips in the partition that overlap with the partition boundary at their original widths. You can use this command after specifying the partition(s)
.SH Syntax \fBpartition\fR  [-help]   [<partitionName> {list}]  [-addPinForPGWireLayersInDistance {{<layer_name_list>} <distance>}]    [-inputNetsForWireDistribution <filename>]                     [-noTopPushDown]    [-noViaCutSpace]    [-pgPushDownHonorUPF]                     [-pushDownHonorInsidePinForSpecialNet]    [-pushDownNonPGSpecialNet]                     [-pushDownSelectedPGBump]    [-pushDownSelectedPGWiresAsRouteBlockage]                     [-pushDownSpecialNetAsObs {<SNet list>}]  [-skipRouteBlockagesOutsidePartition]  [-tcf]     [-pinCutSpace ]    [-noInheritPhysical]    [-pushRoute] 
.P Converts the specified module fences to be partitions, pushes down the physical cells or power routing information to the partition level design(s), and duplicates strips in the partition that overlap with the partition boundary at their original widths. You can use this command after specifying the partition(s).
.P Notes: 
.RS  "*" 2 While bringing back mis-aligned rows to top-level design, the partition command automatically detects mis-aligned rows and pushes down the row information as it is to the top-level design.  "*" 2 To assign signal pins for the partitions, use the assignPtnPin command.  "*" 2 This command should be used in combination with the assignPtnPin command. Cadence recommends not mixing these version 4.2 pin commands with previous (version 4.1 or earlier) pin commands in the design flow.   "*" 2 While handling metal fills, the partition command removes the metal-fill shapes that cross the partition boundary. It pushes down only those fill-shapes that are inside the partition boundary and are on the metal-layers owned by the partition.  "*" 2 In top-down flow, the partition command only promotes P/G pins from the list of pins promoted by the setPromotedMacroPin command.  "*" 2 The partition command supports partitions with flexmodels and structured data paths.  "*" 2  The partition command pushes down the route blockage layer even when the layer type is master-slice. It creates routing blockages for master-slice layers, in the "OBS" section of LEF (from macro/IP/PADs), that are overlapping partition fences. With this feature: 
.RS  "*" 2 The shape of the routing blockage is the same as the overlapping shape of the layer, in the "OBS" section.  "*" 2 The routing blockage is given a pushdown property, so that it is not brought back in assembleDesign.
.RE 
.RE
.RS  "*" 2
.RS  "*" 2  The union of overlapping shapes of layers in OBS section is taken for master and clones.
.RE  "*" 2 The partition command automatically saves all the bus guide constraints with associated net groups. This enables bus routing at block level as per chip level constraints.  "*" 2 The partition command automatically saves all the cell padding information to each partition block data. This information is saved in partitioned block
.fp file.  "*" 2 The partition command inherits all the attributes assigned to a net for block implementation flow. Preserving these attributes allows the Early Global Router and the NanoRoute Router to route the nets following specific requirements.   "*" 2 The partition command now preserves all the pin shapes of nets. 
.RE 
.SH Parameters    "\fB-addPinForPGWireLayersInDistance {{<layer_name_list>} <distance>}\fR" Specifies the layers and distance to consider for creating pins on PG stripes that lie in the specified distance range from the partition boundary.  Note: Some designs shorten the PG stripes to avoid stripes of different net/voltages in different abutted partition abutting together and creating a short. In such wire shapes, the partition command does not create any pins by default since the PG stripes do not touch the partition boundary. However, you can use the  -addPinForPGWireLayersInDistance parameter to create PG pins during block implementation for wire shapes that lie in the specified distance range from the partition boundary. The -addPinForPGWireLayersInDistance parameter identifies the PG wires for the specified layers in the given proximity (in preferred direction of route) of the partition boundary to create pin shapes on them.  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   For example, the following command creates pins on PG stripes on layers M10-M13 that are within a distance of 5 um from the partition boundary.  partition -addPinForPGLayersInDistance {{M10 M11 M12 M13} 5}  Data_type: string, optional  "\fB-help\fR" Outputs a brief description that includes type and default information for each partition parameter. For a detailed description of the command and all of its parameters, use the man command: man partition.  "\fB-inputNetsForWireDistribution <filename>\fR" Specifies the file containing the net names to use for wire distribution.  Data_type: string, optional  "\fB-noInheritPhysical\fR" Specifies that physical only (filler) cells are not pushed down into the partition; they remain at the top level.  Data_type: bool, optional  "\fB-noTopPushDown\fR" Specifies that top-level power routing is not pushed down from top-level design to partition blocks on layers not reserved for partition. Nothing is pushed down on layers reserved for top design.  Data_type: bool, optional  "\fB-noViaCutSpace\fR" Specifies that there are no cuts in the obstructions around vias. You can use this parameter when you want to ensure that the top-level routing can connect the vias without using the space between the vias and the corresponding cover blockages.  Data_type: bool, optional  "\fB<partitionName
...>\fR" Specifies the partition names to be committed.  Data_type: string, optional  "\fB-pgPushDownHonorUPF \fR" When enabled, the UPF information is pushed down to partitions.  Data_type: bool, optional  "\fB-pinCutSpace\fR" Specifies that there are cuts in the obstructions around pins.  Default: By default, there are no cuts in the obstructions around pins so that the top-level routing can connect the pins without using the space between the pins and the corresponding cover blockages.  Data_type: bool, optional  "\fB-pushRoute\fR" Pushes down signal routes when the design is partitioned.  Note: All the wires of a hierarchy-violating net are discarded, in case even a single wire of that net has a hierarchy violation.  Data_type: bool, optional  "\fB-pushDownHonorInsidePinForSpecialNet\fR" Preserves wire segments till partition pins at the top level while wire segments beyond partition pins are still pushdown as it is.  With this option enabled, Innovus automatically detects the list of nets with inside pin having a fixed status over the partition and all top- level nets crossing the partition boundary. The pure top level nets along with wire segments of nets connected to partition pins are replaced by route blockages in block data and the actual wire segments are retained at the top level.  At the top-level:
.RS  "*" 2 All wires till the partition pin (with fixed status) are kept. For pure top nets, all wires are kept.  "*" 2 LEF obstructions are cut out for preserved wires segments.  "*" 2 LEF shape against overlapping top instances are cut out. 
.RE   At the block level:
.RS  "*" 2 Routing blockages till the partition pin for wires that were retained at top level are created.  "*" 2 All wires segments after the partition pin are retained.  "*" 2 Placement blockages are created for top instances overlapping partition fence area.
.RE   Note: Before using this option, ensure that partition area pins - of the corresponding net - must be FIXED.  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   Data_type: bool, optional  "\fB-pushDownNonPGSpecialNet\fR" Specifies that the non PG special nets should also be pushed down into the partition.  Data_type: bool, optional  "\fB-pushDownSelectedPGBump\fR" Specifies that only the selected PG bumps should be pushed down into the partition. The bumps which are not selected come as route blockage.  Data_type: bool, optional  "\fB-pushDownSelectedPGWiresAsRouteBlockage\fR" Pushes down selected PG routes as route blockages into the partition. This parameter enables you to select the wire segments that you want to keep at the top-level  design. These non-pushed down wires must be special PG Routes.  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   Data_type: bool, optional  "\fB-pushDownSpecialNetAsObs {<SNet list>}\fR" Specifies a list of special nets, which will be pushed down as routing blockages. It supports all types of special nets including power/ground nets. You can use wildcards while specifying the net name.  Data_type: string, optional  "\fB-skipRouteBlockagesOutsidePartition\fR" Skips pushing of objects which are close to partition fence.  Data_type: bool, optional  "\fB-tcf\fR" Enables tcf writing for the block.  Note: A TCF file is used to store power related information of the nets in the design by keeping their toggle count related data. With the -tcf parameter enabled, the partition command generates tcf related data of partition blocks.  This data can be later saved using the savePartition command into their respective directories.  Data_type: bool, optional 
.SH Example
.RS  "*" 2 The following command converts fences to partition data and pushes down route crossing over fence EUG inside the partition boundary:  partition EUG -pushRoute   "*" 2 PG is Metal7, Metal8  Partition is defined with reserved layer Metal6  The following command copies PG from top to block for all the PG layers:  Partition <ptnName>  The following command cuts PG from top to block for PG layers reserved for partitions. For layers above the reserved layer, PG is not pushed down to ptn.  partition ptnName -noTopPushDown  If reserved layer is Metal7 then Metal7 PG is cut at top and pushed down and Metal8 PG will not be pushed down.
.RE 
.SH Related Information
.RS  "*" 2 assembleDesign  "*" 2 assignPtnPin  "*" 2 flattenPartition  "*" 2 setPromotedMacroPin  "*" 2 savePartition  "*" 2 Partitioning the Design chapter in the Innovus User Guide
.RS  "*" 2 Pushing Down Signal Routes
.RE 
.RE
.P
