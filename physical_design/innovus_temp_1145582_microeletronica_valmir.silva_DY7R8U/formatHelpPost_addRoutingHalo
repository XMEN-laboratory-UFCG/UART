.nf
.P Product Version     22.14    Cadence Design Systems, Inc. 
.fi
.TH addRoutingHalo  22.14 "Fri Oct 06 02:12:27 2023" 
.SH Name \fBaddRoutingHalo\fR \-  Adds a routing halo for blackboxes, hard macros, or block-level designs
.SH Syntax \fBaddRoutingHalo\fR   [-help]   { {-bottom <bottomLayer> -space <haloValue> -top <topLayer>} | -lithoHalo }   {-allBlocks | -block <blockNameList> | -cell <cellNameList> | -inst <instanceName> | -designHalo }
.P Adds a routing halo for blackboxes, hard macros, or block-level designs. A routing halo significantly reduces the possibility of long wire routing within the specified area, thus helping reduce signal integrity violations at the top- and/or block-level designs. A routing halo is honored only by the signal router. The signal router treats routing on the specific routing layers in the routing halo area as very high cost routing. However, perpendicular routing or straight connections to pins are acceptable. The special router does not honor routing halos. To block special routing, use routing blockages instead. You can specify a routing halo for:
.RS  "*" 2 hard macros or blackboxes  "*" 2 block-level designs  "*" 2 partitions
.RE
.P For the bottom-up hierarchical flow, use this command to specify routing halo for a block at the top-level design or at the block-level design. The routing halo can be stored as an instance and/or design property and can be viewed through the attribute editor for the instance block. The routing halo can be saved to or restored from a floorplan file. Use this command after importing a design.
.P Notes: 
.RS  "*" 2 For top-down hierarchical flow, specify routing halo for a partition through the definePartition command or through the Specify Partition form.  "*" 2 A halo is not allowed on std-cells (cells with CLASS CORE SITE) and is written out as ROUTEHALO in DEF. A design halo is written out as a DEF design FE_ROUTING_HALO property and a litho halo is written out as a DEF component LITHOHALO property.
.RE 
.SH Parameters   "\fB-allBlocks\fR" Specifies that the routing halo should be added to all blocks in the design.  Data_type: bool, required  "\fB-block <blockNameList>\fR" Specifies that the routing halo should be added to the specified blocks. A block name must be an instance name and not a cell master name. The specified blocks should be separated by a space.  Note: A halo is not allowed on std-cells (cells with CLASS CORE SITE) and is written out as ROUTEHALO in DEF. A design halo is written out as a DEF design FE_ROUTING_HALO property and a litho halo is written out as a DEF component LITHOHALO property.  Data_type: list, required  "\fB-bottom <bottomLayer>\fR" Specifies the bottom layer for the routing halo.  Note: Even though the -bottom, -space, and -top parameters are optional, it is important to specify all of them together.  Data_type: string, required  "\fB-cell <cellNameList>\fR" Specifies that the routing halo should be added to all insts of the specified cell names.  Data_type: list, required   "\fB-designHalo\fR" Specifies that the routing halo should be added inside design boundary.  Note: The -designHalo parameter cannot be specified with the -lithoHalo parameter. These parameters are mutually exclusive.  Data_type: bool, required   "\fB-help\fR" Outputs a brief description that includes the type and default information for each addRoutingHalo parameter. For a detailed description of the command and all of its parameters, use the man command:  man addRoutingHalo  "\fB-inst <instanceName>\fR" Specifies that the routing halo should be added to the specified instance. This parameter can be useful for adding halo for I/O cells.  Data_type: list, required  "\fB-lithoHalo\fR" Adds a litho halo to the instances on each routing layer with LEF LITHOMACROHALO defined.  Notes:
.RS  "*" 2 The -lithoHalo parameter cannot be specified with the -designHalo parameter. These parameters are mutually exclusive.  "*" 2 The -lithoHalo parameter requires some LEF LITHOMACROHALO values to be set.  "*" 2 A halo is not allowed on std-cells (cells with CLASS CORE SITE) and is written out as ROUTEHALO in DEF. A design halo is written out as a DEF design FE_ROUTING_HALO property and a litho halo is written out as a DEF component LITHOHALO property.  "*" 2 Data_type: bool, required
.RE   "\fB-space <haloValue>\fR" Specifies the routing halo value in microns.  Note: Even though the  -bottom,  -space, and -top parameters are optional, it is important to specify all of them together.  Minimum: 0  Maximum: 1.79769313486232e+308  Data_type: float, required  "\fB-top <topLayer>\fR" Specifies the top layer for the routing halo.  Note: Even though the  -bottom,  -space, and -top parameters are optional, it is important to specify all of them together.  Data_type: string, required 
.SH Examples
.RS  "*" 2 The following command adds a routing halo of 10 microns to all blocks and specifies that the top and the bottom layers for the routing halo are Metal7 and Metal1, respectively.   addRoutingHalo -space 10 -top Metal7 -bottom Metal1 -allBlocks
.RE
.RS  "*" 2 The following command adds a routing halo of 5 microns to the specified blocks and specifies that the top and the bottom layers for the routing halo are Metal2 and Metal1, respectively.   addRoutingHalo -block DTMF_INST/RAM_256x16_TEST_INST/RAM_256x16_INST DTMF_INST/RAM_128x16_TEST_INST/RAM_128x16_INST -space 5 -top Metal2 -bottom Metal1
.RE 
.SH Related Information
.RS  "*" 2 deleteRoutingHalo  "*" 2 Floorplanning the Design chapter in the Innovus User Guide  "*" 2 Floorplan Menu chapter in the Innovus Menu Reference
.RS  "*" 2 Edit Halo - Routing Halo
.RE 
.RE
.P
