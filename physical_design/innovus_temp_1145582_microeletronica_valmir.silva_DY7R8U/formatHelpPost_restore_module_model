.nf
.P Product Version     22.14    Cadence Design Systems, Inc. 
.fi
.TH restore_module_model  22.14 "Fri Oct 06 02:12:27 2023" 
.SH Name \fBrestore_module_model\fR \-  Restores a design from a default module model repository
.SH Syntax \fBrestore_module_model\fR  [-help]   [-dynamic_view <string>]  [-hold_views <string>]  [-leakage_view <string>]  [-lef_files <string>]   [-mmmcFile <string>]  [-noTiming]   [-noTimingGraph]    [-setup_views <string>]   [-tag <tag_name>]  {<cell_name> | -cell <cell_name>}  [<options>]   [-add_ons {1801 mmmc spef eco latency scan_info timing_context extraction_context pin_assign}] 
.P Restores a design from a default module model repository. You can use this command only after the default central directory name where the module model data will be saved/loaded has been specified using the set_module_model -default_dir command. 
.P The restore_module_model command provides you the following flexibilities:
.RS  "*" 2 Ability to provide your own ECO script. The ECO script must be located at <cell>/<tag>/eco/<cell>_eco.tcl.  "*" 2 Ability to read/restore a design of a specific tag but its ECO file can be loaded from a different tag.
.RE
.P This feature is useful when the ECO changes are done with an old netlist drop and a new netlist drop is saved with a different tag.  For example:  restore_module_model -cell tdsp_core -tag my_postcts -add_ons {anotherTag/eco}  Supported short-hand restore_module_model usage model:  restore_module_model <dir>/<cell>/<tag> [-add_ons {add_on_type}]  restore_module_model <cell>/<tag> [-add_ons {add_on_type}] ;# Local directory  restore_module_model <cell> -tag <tag> [-add_ons {add_on_type}] ;# Default root dir 
.SH Parameters    "\fB-add_ons {1801 mmmc spef eco latency scan_info timing_context extraction_context pin_assign}\fR" Specifies the supplement model that can be loaded additionally with an existing model or a design.  For example:
.RS  "*" 2 The following command restores the ptn_wrapper design that has my_extract_v1  tag and also bring in its extraction_context add_on model:  restore_module_model ptn_wrapper -tag my_extract_v1 -add_ons {extraction_context}  "*" 2  The following commands show the location from where mmmc data will be loaded during restore_module_model according to usage of  -add_ons {mmmc}
.RS  "*" 2 restore_module_model Ptn1 -tag  XYZ   Uses view definition located inside
.enc.dat in pnr directory of tag XYZ  "*" 2 restore_module_model Ptn1 -tag  XYZ -add_ons {ABCD/mmmc}  Uses view definition from mmmc directory of tag ABCD  "*" 2 restore_module_model Ptn1 -tag  XYZ -add_ons {mmmc}  Uses view definition from mmmc directory of tag XYZ
.RE  Note: For more information about saving data in separate tags  in the mmmc directory, see   saveTimingBudget -module_model_tag 
.RE   Data_type: string, optional  "\fB<cell_name |>-cell< cell_name>\fR" Specifies the module model name.  Note: This parameter must be specified.  Data_type: string, required  "\fB-dynamic_view <string>\fR" Specifies the dynamic view.  Data_type: string, optional  "\fB-help\fR" Outputs a brief description that includes the type and default information for each restore_module_model parameter. For a detailed description of the command and all of its parameters, use the man command:   man restore_module_model  "\fB-hold_views <string>\fR" Specifies the hold views.  Note: The -setup_views and -hold_views parameters specify the active analysis views for the loaded design.  Data_type: string, optional  "\fB-leakage_view <string>\fR" Specifies the leakage view.  Data_type: string, optional  "\fB-lef_files <string>\fR" Specifies the lef file(s).  Data_type: string, optional  "\fB-mmmcFile <string>\fR" Specifies the MMMC view file(s)  Data_type: string, optional  "\fB-noTiming\fR" Ignores timing libraries and MMMC configuration  Data_type: bool, optional  "\fB-noTimingGraph\fR" Specifies not to load timing graph.  Data_type: bool, optional  "\fB<options>\fR" Specifies the restoreDesign options.  Data_type: string, optional  "\fB-setup_views <string>\fR" Enables you to setup views.  Note: The -setup_views and -hold_views parameters specify the active analysis views for the loaded design.  Data_type: string, optional  "\fB-tag <tag_name>\fR" Specifies the tag name of the flow.  Note: If tag_name is not specified, 'latest' is used as the default tag value.  Data_type: string, optional 
.SH Example
.RS  "*" 2 The following command restores the dtmf_recvr_core module model that has the start tag.  restore_module_model -cell dtmf_recvr_core -tag start   "*" 2 The following commands restore the ptn_wrapper design along with its DEF extraction context to do hierarchical extraction:  restore_module_model ptn_wrapper -tag my_extract_v1 -add_ons {extraction_context}  #Load in the detailed LEF abstract of ram_128x16_test  set_module_model -cell ram_128x16_test -type lef -tag my_extract_v1  commit_module_model  earlyGlobalRoute  setExtractRCMode -engine postRoute  extractRC  rcOut -spef with_detailed_def.spef  "*" 2 
.RE 
.SH Related Information
.RS  "*" 2 check_module_model  "*" 2 commit_module_model  "*" 2 create_module_model  "*" 2 report_module_model  "*" 2 savePartition  "*" 2 set_module_model  "*" 2 update_module_model  "*" 2 write_module_model_context  "*" 2 Hierarchical and Prototyping Flow chapter in the Innovus User Guide
.RS  "*" 2  Integrated Hierarchical Database Flow
.RE 
.RE
.P
