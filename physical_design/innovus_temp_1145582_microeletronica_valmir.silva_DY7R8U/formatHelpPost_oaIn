.nf
.P Product Version     22.14    Cadence Design Systems, Inc. 
.fi
.TH oaIn  22.14 "Fri Oct 06 02:12:27 2023" 
.SH Name \fBoaIn\fR \-  Restores floorplan, placement, and routing data using the OpenAccess format
.SH Syntax \fBoaIn\fR  [-help]  <lib>  <cell>  <view>  [-filter {block_insts blockages boundary fixed_core_insts floorplan pad_insts pin_shapes regions regular_routing special_routing bump_insts}]  [-net {<netnames>}] 
.P Restores floorplan, placement, and routing data using the OpenAccess format. This command only reads physical information from the OpenAccess database. For information on restoring an OpenAccess database, see restoreDesign.
.P You can use the oaIn command after importing the design.
.P Notes 
.RS  "*" 2 Innovus supports only the following begin/end extension values for DEF NETS style wiring segments: 0, width/2 or LEF LAYER WIREEXTENSION. If any of the wire extensions has unsupported extension value, then Innovus converts it to a special wire (DEF SPECIALNETS). While writing back OpenAccess (oaOut or saveDesign -cellview), these special wires will again be converted back to DEF NETS style wiring.  "*" 2 oaIn issues an error if the DESIGNRULEWIDTH attribute is specified in blockage for 20nm and below design nodes. As a lot of spacing rules in advanced nodes no longer just rely on wire width, DESIGNRULEWIDTH is not allowed for 20nm and below nodes and a SPACING override should be used instead.
.RE 
.SH Parameters   "\fB-help\fR" Outputs a brief description that includes type and default information for each parameter of the oaIn command.  For a detailed description of the command and all of its parameters, use the man command: man oaIn.  "\fB<lib>\fR" Specifies the OpenAccess library name.  "\fB<cell>\fR" Specifies the name of the top cell to import.  "\fB<view>\fR" Specifies cell view name to import.  "\fB-filter {block_insts blockages boundary fixed_core_insts floorplan pad_insts pin_shapes regions regular_routing special_routing bump_insts}\fR" Lists the OpenAccess cellview information data to be read.  When not specified, all information is read from the OpenAccess cellview. When -filter is specified, only the object types that are chosen will be read. Additionally, when reading pin_shapes or instances, information in the cellview that refers to terminals or instances that do not exist in memory will be ignored.  The legal -filter options are:
.RS  "*" 2 block_insts - Indicates that any CLASS BLOCK instances should be updated. Physical-only block instances may be added to the database if the placement status is fixed or cover.  "*" 2 blockages - Indicates that blockages should be processed. If a blockage is attached to an instance that does not exist in the in-memory database, then it is ignored.  "*" 2 boundary - Indicates that the design boundary information, including rows and tracks, should be updated. When boundary is specified, the design boundary, rows and tracks are created from the new boundary.  "*" 2 fixed_core_insts - Indicates that any CLASS CORE instances that have placement status fixed or cover should be updated. Physical-only core instances may be added to the database if the placement status is fixed or cover.  "*" 2 floorplan - Is equivalent to specifying "block_insts blockages boundary fixed_core_insts pad_insts pin_shapes regions special_routing"  "*" 2 pad_insts - Indicates that any CLASS PAD instances should be updated. Physical-only pad instances may be added to the database if the placement status is fixed or cover.  "*" 2 pin_shapes - Indicates that pin shapes should be read. When pin_shapes is specified, the existing pins are replaced by the ones being read from the cellview.  "*" 2 regions - Indicates regions should be updated.  "*" 2 regular_routing - Indicates that nets should be processed and regular routing (and associated shield net wiring) and net constraints updated.  "*" 2 special_routing - Indicates that nets should be processed and special routing (except shield nets wiring) should be read.
.RE
.RS  "*" 2 bump_insts - Indicates that bump instances from the cell view need to be read. 
.RE   Use oaIn -filter to read floorplanning information from a cellview whose connectivity does not match the current Innovus in-memory connectivity. The-filter option allows you to load some data selectively, while not loading others. When -filter is used, error checking for database consistency (nets, instances, terminals, etc.) is disabled. While similar to Virtuoso Load Physical View (LPV), the -filter option is only a subset and not intended to be a complete replacement.  "\fB-net {<netnames>}\fR" Specifies the list of nets whose routing (routing and special) and constraints have to be read with the -filter option. Shielding wiring/vias are also read in if they are used to shield any of the specified nets. If this option is used, typically regular_routing is not specified as part of the -filter objects.  
.SH Example
.RS  "*" 2 The following command restores data using OpenAccess:   oaIn design amba_usb layout
.RE 
.SH Related Information
.RS  "*" 2 oaOut  "*" 2 restoreDesign  "*" 2 saveDesign  "*" 2 setOaxMode  "*" 2 Mixed Signal (MS) Interoperability Guide 
.RS  "*" 2 Design Data Preparation chapter   "*" 2 Schematic-Driven Mixed Signal Design Flow chapter  "*" 2 Virtuoso Digital Implementation chapter  "*" 2 Chip Finishing and ECO Flows chapter
.RE 
.RE
.P
