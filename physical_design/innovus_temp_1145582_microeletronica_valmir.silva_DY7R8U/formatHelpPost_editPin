.nf
.P Product Version     22.14    Cadence Design Systems, Inc. 
.fi
.TH editPin  22.14 "Fri Oct 06 02:12:27 2023" 
.SH Name \fBeditPin\fR \-  Modifies properties of pins, such as pin spreading, pin location, pin width and depth, spacing, snap-to location, and status
.SH Syntax \fBeditPin\fR    [-help]    [-cell <cellName> | {-hinst <hinstName>[-refMaster]}]     [-end {<x y>}]     [-fixedPin]   [-global_location]   [-include_rectilinear_edge]   [-masterCloneAware]   [-offsetEnd <value>]  [-offsetStart <value>]    -pin {<pinName> | <pinNameList>}   [-pinDepth <pinDepthValue>]     [-pinWidth <pinWidthValue>]  [-quiet]   [-skipWrappingPins]    [-snap {TRACK | USERGRID | MGRID}]   [-spreadDirection {clockwise | counterclockwise | both}]    [-start {<x y>}]   [-use { SIGNAL | CLOCK | ANALOG }]    [{-layer {<layerId> | <layerIdListName>} |    {[-layerH <layerId>] [-layerV <layerId>]}}     [-layer_priority]    [-assign {<x y>} |    -spreadType {START | CENTER | SIDE | EDGE | RANGE} |      -pattern {fill_track | fill_layer | fill_optimised | fill_diagonal | fill_sinusoidal | fill_checkerboard}]]    [-side <sideName> | -edge <edgeNumber>]    [-fixOverlap {0|1} [-honorConstraint {0|1}]]    [-pattern {fill_track | fill_layer | fill_optimised | fill_diagonal | fill_sinusoidal | fill_checkerboard} [-reverse_alternate]]     [-spacing <spacingValue> [-unit {MICRON | TRACK}]]
.P Modifies properties of pins, such as pin spreading, pin location, pin width and depth, spacing, snap-to location, and status. The editPin command provides the equivalent capabilities of the Pin Editor form.
.P Note: The editPin command does not support wildcards.
.P The editPin command honors the minimum area rule as follows:
.RS  "*" 2 If neither the -pinWidth nor the -pinDepth parameters have been specified, the editPin command takes the minimum pin width and the minimum area from the LEF file and calculates the pin depth accordingly.  "*" 2 If only the -pinWidth parameter has been specified, the editPin command takes the minimum area from the LEF file and calculates the pin depth accordingly.  "*" 2 If only the -pinDepth parameter has been specified, the editPin command takes the minimum area from the LEF file and calculates the pin width accordingly.
.RE
.P If both the -pinWidth and the -pinDepth parameters are specified, the editPin command takes these specified values, without enforcing the minimum area rule.
.P The editPin command is clone context aware. The command:
.RS  "*" 2 Looks at routing blockages on clone and honors them while keeping pins of master with -cell <>.  "*" 2 Looks at abutted macro blockages and honors them while keeping pins of master with -cell <>.  "*" 2 Honors route blockage on master.
.RE
.P Note: The value of the parameters of the editPin command is not stored across multiple runs of the command - you need to specify the required value with every run of the command.   For example, if you do not specify the -pinWidth parameter, the default pin width of the specified layer is used.
.P Note: The editPin command checks and corrects DRC violations and overlapping while placing internal pins. It supports pin placement on Metal 1 and accepts all layers for pin placement by default.
.P Note: The editPin command is used for manual pin assignment in nested partitions. It places pins of nested partitions similar to single level partitions.   For more information, see "WorkingwithNestedPartitions" section in the "Partitioning the Design" chapter of the Innovus  User Guide. 
.SH Parameters   "\fB-assign {<x y>}\fR" Preassigns a pin at the specified location. You can use this parameter with other parameters such as -snap, -fixOverlap, -side, and so on.  Note: -assign {x y} considers the local coordinates from the bounding box of the fence.  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   Data_type: point, optional  "\fB-cell <cellName>\fR" Specifies the name of the module. If you do not specify a cell name, the command runs on the top-level cell.  Data_type: string, optional  "\fB-edge <edgeNumber>\fR" For rectilinear partitions, specifies the edge along which the pins will be placed. The edge number is an integer. The edge numbering starts from the lower-left corner of a partition clock-wise.   Edge 0 is the edge that has the smallest y value.   (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   To spread pins on multiple rectilinear edges that are on the same side, use the -side parameter.   For rectangular partitions, you can specify a side with the -side parameter.  Data_type: int, optional  "\fB-end {<x y>}\fR" For pin spreading along a range, specifies the coordinates where pins should end. This parameter is used with the -spreadType RANGE parameter.  Data_type: point, optional  "\fB-fixedPin\fR" A value of 1 sets the pin status to Fixed.  Default: The pin status is placed.  Data_type: bool, optional  "\fB-fixOverlap {0 | 1}\fR" With this parameter on, the editPin command tries to resolve pin-overlap with other/nearby objects. The pins are moved to the closest acceptable position such that pins do not overlap.  Default: 1. Resolve pin-overlap is on.  Note: This parameter applies only when pins are snapped to layer track.  Data_type: bool, optional  "\fB-global_location\fR" Specifies that the global location should be considered by the command.  Note: By default all locations that the editPin command considers are coordinates with respect to lower-left corner of partition. If you specify the -global_location option, the -start, -end, and -assign parameters accept coordinates with respect to the lower-left corner of the design.  For example, in the following command, the pin will be placed 3u from the lower-left corner of the partition.  editPin -cell c -pin cIn -assign 0 3 -layer 2 -side left  When you use the -global_location parameter, the pin will be placed 3u from the lower-left corner of the design.  editPin -cell c -pin cIn -assign 0 3 -layer 2 -side left -global_location  Data_type: bool, optional  "\fB-help\fR" Outputs a brief description that includes type and default information for each editPin parameter.  For a detailed description of the command and all of its parameters, use the man command:   man editPin  "\fB-hinst <hinstName>  \fR" Specifies the hinst name, including black box or committed partition and top.  Data_type: string, optional  "\fB-honorConstraint {0|1}\fR" Specifies whether user-defined pin constraints should be honored.  The following constraints are honored when this parameter is set to on:
.RS  "*" 2 pin spacing  "*" 2 pin size  "*" 2 pin-to-corner distance  "*" 2 partition-allowed pin layers.
.RE   Default: 0 (user-defined pin constraints are not honored)  Data_type: bool, optional  "\fB-include_rectilinear_edge\fR" Specifies that all the edges coming in the solution space should be included.  Data_type: bool, optional  "\fB-layer {<layerId> | <layerName>}\fR" Specifies the layer on which the pins will be assigned. Layers can be specified using the LEF layer names or layer ID numbers.  Note: This parameter is optional but only when -spreadType is not specified.  Note: For designs that have backside metal layers, both the backside and frontside layers are accepted.  Data_type: bool, optional  "\fB-layerH <layerId>  \fR" Specifies the preferred horizontal layer on which the pins will be assigned.  Note: For designs that have backside metal layers, both the backside and frontside layers are accepted.  Data_type: string, optional  "\fB-layerV <layerId>  \fR" Specifies the preferred vertical layer on which the pins will be assigned.  Note: For designs that have backside metal layers, both the backside and frontside layers are accepted.  Data_type: string, optional  "\fB-layer_priority        \fR" Specifies that the input layer is given based on its priority.  Data_type: bool, optional  "\fB-masterCloneAware\fR" Enables master-clone context awareness for feasibility checking.  Data_type: bool, optional  "\fB-offsetEnd <value>\fR" Sets the offset from the end of the edge (in microns) to be considered as the endpoint for placing the pin.  Note: The -offsetStart and -offsetEnd options can only be used with the -edge option.  Data_type: float, optional  "\fB-offsetStart <value>\fR" Sets the offset from the start of the edge (in microns) to be considered as the start point for placing the pin.  Note: The -offsetStart and -offsetEnd parameters can only be used with the -edge parameter.  Data_type: float, optional  "\fB-pattern {fill_track | fill_layer | fill_optimised | fill_diagonal | fill_sinusoidal | fill_checkerboard}\fR" Specifies the multi-layer-spread-pattern must be followed by the set of selected pins.  fill_track  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   fill_layer  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)    fill_optimised  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   fill_diagonal  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   fill_sinusoidal  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   fill_checkerboard  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   Data_type: enum, optional  "\fB-pin {<pinName> | <pinNameList>}\fR" Specifies the pins, or the list of pins of the specified module on which the command will run.  Note: The naming convention to identify individual ports is based on the order in which the ports are stored inside the database. The first, second, and third ports will be named as <pinName> with the suffix as port0, port1, port2, respectively. For example: VDD.port0, VDD.port1, VDD.port2  Data_type: string, required  "\fB-pinDepth <pinDepthValue>\fR" Sets the depth of the pin in microns.  Default: If you do not specify this parameter, the default depth of the specified layer is used.  Data_type: float, optional  "\fB-pinWidth <pinWidthValue>\fR" Sets the width of the pin in microns.  Default: If you do not specify this parameter, the default width of the specified layer is used.  Data_type: float, optional  "\fB-quiet\fR" Specifies that the messages should be suppressed.   Data_type: bool, optional  "\fB-refMaster\fR" Specifies that the clone's edge, spreadDirection, and offset are with respect to the master.  Data_type: bool, optional  "\fB-reverse_alternate\fR" Specifies that the reverse of the multi-layer-spread-pattern must be followed by the set of selected pins.  For example, fill_track -reverse_alternate  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   Data_type: bool, optional  "\fB-side <sideName>\fR" For rectangular partitions, specifies the side on which the pins will be placed. The values for sideName can be: TOP, BOTTOM, LEFT, RIGHT, or INSIDE.  Note: The value INSIDE can only be specified with the -assign parameter.  For rectilinear partitions, you can also specify an edge with the -edge parameter.  Note: The setPinAssignMode -pinEditInBatch parameter does not support the internal pins (where the side is INSIDE).  Data_type: string, optional  "\fB-skipWrappingPins\fR" Skips pin wrapping on the adjacent edge or the same edge from the other side.  Data_type: bool, optional  "\fB-snap {TRACK | USERGRID | MGRID}\fR" Specifies how the pins will be snapped.
.RS  "*" 2 TRACK: Snaps pins to layer tracks.  "*" 2 USERGRID: Snaps pins to the user-defined grid.  "*" 2 MGRID: Snaps pins to the manufacturing grid.
.RE   Default: TRACK  Data_type: enum, optional  "\fB-spacing <spacingValue>\fR" Displays the edge-track-to-edge-track  spacing between pins for multi-pin editing. The spacing is either in micrometers or by layer track, as specified by the -unit parameter. A spacing of 1 track means pins should be placed on every track with no empty tracks between them.  Default: The spacing is set automatically.  Data_type: string, optional  "\fB-spreadDirection {clockwise | counterclockwise | both}\fR" Specifies the direction in which the pins are spread. You can specify:
.RS  "*" 2 clockwise: Sets the pins in the clockwise direction.  "*" 2 counterclockwise: Sets the pins in the counter clockwise direction.  "*" 2 both: Sets the pins by looking for the closest legal location to the desired location in both directions.
.RE   Default: clockwise  Data_type: enum, optional  "\fB-spreadType {START | CENTER | SIDE | EDGE | RANGE}\fR" Specifies how to spread pins along a block's edge.
.RS  "*" 2 START: Uses the coordinates of the first pin specified with the -pin parameter as the starting point (anchor) for spreading a group of pins. This value can be used even if you specify a single pin with the -pin parameter.  "*" 2 CENTER: If a single pin is specified with the -pin parameter, the pin will be placed at the center of the specified edge/side. If multiple pins are specified, the pin editor automatically calculates the starting and end points such that the center pin(s) of the group are placed at the center of the specified edge or side.  "*" 2 SIDE: If you specify a side with the -side parameter and specify the -spreadType SIDE parameter, the pins are spread evenly along all the edges belonging to the specified side. The pins are spread from left to right and from bottom to top.  "*" 2 EDGE: If you specify an edge with the -edge parameter and specify the -spreadType EDGE parameter, the pins are spread evenly along the entire specified edge, using the limits of the edge as the starting and ending points.  "*" 2 RANGE: Spreads pins evenly along the block edge between points you specify with -start {x y} and -end {x y} parameters. The ending coordinates become the coordinates of the last pin in the pin group. The Pin Editor determines the appropriate spacing.
.RE   Note: For rectilinear partitions, if the start and/or end points are not on the specified side, the start and/or end points are snapped to the nearest correct location on the specified side.  Data_type: enum, optional  "\fB-start {x y}\fR" For pin spreading along a range, specifies the coordinates where pins should start. This parameter is used with the -spreadType RANGE and the -spreadType START parameters.  Data_type: point, optional  "\fB-unit {MICRON | TRACK}\fR" Specifies the unit in microns or in tracks. This parameter applies only to the unit of the -spacing parameter.  Default: Micron  Data_type: enum, optional  "\fB-use {SIGNAL | CLOCK | ANALOG}\fR" Specifies the +USE property of the partition pin.  Data_type: stringl, optional 
.SH Example
.P The following command modifies the pins as specified here:
.RS  "*" 2 the command runs on the module DTMF_CORE_INST1  "*" 2 the command runs on all pins whose name starts with DTMF_CORE_INST1_OUTPIN  "*" 2 the pins are spread on the edge number 2  "*" 2 the USE property is set to CLOCK  "*" 2 the pins are spread between the coordinates (17 23) and (117 123)  "*" 2 the pins are assigned on the layer Metal3  "*" 2 the pin status is set to Fixed  "*" 2 the pins are snapped to layer tracks  "*" 2 the unit is in tracks  "*" 2 the spacing between pins for multi-editing is set to 2 tracks  "*" 2 the pin depth is set to 10 microns.  Note: The -unit parameter is set to TRACK but that does not affect the unit of pin depth.
.RE
.RS  "*" 2 the pins are moved to the nearest acceptable location as the -fixOverlap parameter is set to 1. However, the -overlapConstraints parameter is not specified.   editPin   -cell DTMF_CORE_INST1   -pin {DTMF_CORE_INST1_OUTPIN}   -spreadType RANGE   -edge 2   -layer Metal3   -use CLOCK   -fixOverlap 1   -snap TRACK   -pinDepth 10   -start {17 23}   -end {117 23}   -spacing 2   -unit TRACK   -fixedPin 1  "*" 2 The editPin command looks at routing blockages on clone and honors them. In the figure below, the following command would not start pins on master from Y=0 as there is a route blockage on clone at desired location.  editPin -hinst p(m) -spreadType start -start 0 0 -edge 0 -layer 2 -pin A*  Also, the following command would not start pins on master from Y=10 as there is a macro with obstruction on clone at desired location.  editPin -hinst p(m) -assign 10 5 -edge 2 -layer 2 -pin B -spreadDirection {both}
.RE
.P (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.) 
.RS  "*" 2 The following commands are used to edit pins in the batch mode:  setPinAssignMode -pinEditInBatch true  editPin -hinst p(m) -spreadType start -start 0 0 -edge 0 -layer 2 -pin A* 
... 
...  editPin -hinst p(m) -assign 10 5 -edge 2 -layer 2 -pin B -spreadDirection {both}  setPinAssignMode -pinEditInBatch false
.RE 
.SH Related Information
.RS  "*" 2 setPinAssignMode  "*" 2 legalizePin   "*" 2 assignPtnPin  "*" 2 assignIoPins   "*" 2 Partitioning the Design chapter in the Innovus User Guide 
.RS  "*" 2 Assigning Pins
.RE  "*" 2 Floorplanning the Design chapter in the Innovus User Guide
.RS  "*" 2 Using the Pin Editor
.RE  "*" 2 Edit Menu chapter in the Innovus Menu Reference
.RE 
.SH
