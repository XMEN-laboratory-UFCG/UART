.nf
.P Product Version     22.14    Cadence Design Systems, Inc. 
.fi
.TH createTBOptFile  22.14 "Fri Oct 06 02:12:27 2023" 
.SH Name \fBcreateTBOptFile\fR \-  This command creates a target-based optimization (TBOpt) file for use with postRoute targeted optimization
.SH Syntax \fBcreateTBOptFile\fR  [-help]   -bottleneckInstanceNumber <integer>[-early]  [-gtdFile <filename>]   [-max_paths <integer>]   [-max_slack <float>]   [-min_slack <float>]   -outFile <filename>  [-path_group <groupname_list>]
.P This command creates a target-based optimization (TBOpt) file for use with postRoute targeted optimization. Once created, this file is passed to the setOptMode -opt_target_based_opt_file command. You can either provide the command a timing report in a machine-readable format by using the -gtdFile parameter or let the command generate the timing report internally by using the values specified for the -min_slack, -max_slack, and -max_paths parameters or the internal default values for these parameters.
.P Based on this timing report, a bottleneck analysis is performed and the critical instances are stored in a file that is specified using the -outFile filenameparameter. This file uses the TBOpt format with the INSTS token. The bottleneck analysis computes the number of times an instance appears (on only the failing paths by default) and creates "n" number of path categories for the instances with the highest number of occurrences. Note that "n" is the number you specify using the -bottleneckInstanceNumber parameter of this command.
.P Also note that by default, multiple instances per path are allowed. This means that if there are multiple critical instances on a path, all of them will be returned, therefore, leading to the generation of the most accurate list of critical instances.
.P For more information on using the TBOpt  file, see the "Performing Target-Based PostRoute Optimization" section of the Optimizing Timing chapter in the Innovus User Guide
.  
.SH Parameters   "\fB-help\fR" Outputs a brief description that includes type and default information for each createTBOptFile parameter. For a detailed description of the command and all of its parameters, use the man command: man createTBOptFile  "\fB-bottleneckInstanceNumber <integer>\fR" Specifies the number of critical bottleneck instances to be generated. This is a required parameter.    "\fB-early\fR" Specifies that the TBOpt file will be created based on hold timing's critical nodes. This parameter can be specified along with the following commands to generate and use a hold target file for hold TBOpt. For example:  createTBOptFile -early -bottleneckInstanceNumber 5 -outFile TBOpt_bottleneck_5_hold.txt  setOptMode -opt_target_based_opt_hold_file TBOpt_bottleneck_5_hold.txt  optDesign -postRoute -targeted -hold  "\fB-gtdFile <filename>\fR" Specifies the name of the machine-readable timing report on which you want to base the critical instance analysis. If this parameter is not specified, the command generates its own file with the -max_slack value of 0.0 and -max_paths value of 100,000.    "\fB-max_paths <integer>\fR" Specifies the number of worst paths to be considered, regardless of the endpoint.  By default, the value is 100,000.  "\fB-max_slack <float>\fR" Specifies that only those paths should be considered that have a slack equal to or less than the specified float value in ns.  By default, the value is 0.0 to ensure that only paths with negative slacks are considered.  "\fB-min_slack <float>\fR" Specifies that only those paths should be considered that have a slack greater than the specified float value in ns.    "\fB-outFile <filename>\fR" Specifies the name of the TBOpt file that will be generated. This is a required parameter.   "\fB-path_group <groupname_list>\fR" Specifies that only those paths should be considered that are from the specified path groups on which you want to base the critical instance analysis. 
.SH Example
.RS  "*" 2 The following command generates a TBOpt file with five critical instances using the default values for -min_slack, -max_slack, and -max_paths that will be written to the file, TBOpt_bottleneck_5.txt:  createTBOptFile -bottleneckInstanceNumber 5 -outFile TBOpt_bottleneck_5.txt  The TBOpt_bottleneck_5.txt file will contain five critical instances with the appropriate syntax for target-based postRoute optimization.   For example,  INSTS : {mod_i/i_mod_glm_cluster_0/U586} {mod_i/i_mod_glm_cluster_2/U535} {mod_i/i_mod_glm_cluster_1/U596} {mod_i/ser_en/U92} {mod_i/ser_en/U101}  "*" 2 The following command generates a TBOpt file, usergenerated.mtarpt with three critical instances based on a machine-readable timing report generated using the -machine_readable parameter of the report_timing command:   createTBOptFile -bottleneckInstanceNumber 3 -outFile TBOpt_bottleneck_3.txt -gtdFile usergenerated.mtarpt  "*" 2 The following command generates a TBOpt file with six critical instances based on only the reg2reg path group with the maximum number of worst paths as 3000:   createTBOptFile      -bottleneckInstanceNumber 6 -outFile TBOpt_bottleneck_6.txt      -path_group reg2reg -max_paths 3000  "*" 2 The following command generates a TBOpt file with nine critical instances based on a timing analysis of the worst 10,000 paths between +0.025ns and -1.0ns:  createTBOptFile -bottleneckInstanceNumber 9 -outFile TBOpt_bottleneck_9.txt -min_slack -1.0 -max_slack +0.025 -max_paths 10000
.RE 
.SH Related Information
.RS  "*" 2 optDesign  "*" 2 setOptMode  "*" 2 report_timing  "*" 2 The following section in Optimizing Timing chapter of the Innovus User Guide:
.RS  "*" 2 Performing Target-Based PostRoute Optimization
.RE 
.RE
.P
