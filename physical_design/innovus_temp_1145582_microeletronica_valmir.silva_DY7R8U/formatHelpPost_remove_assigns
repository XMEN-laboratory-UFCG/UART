.nf
.P Product Version     22.14    Cadence Design Systems, Inc. 
.fi
.TH remove_assigns  22.14 "Fri Oct 06 02:12:27 2023" 
.SH Name \fBremove_assigns\fR \-  Removes assign statements from the Verilog as much as possible while keeping the same DEF netlist. This means that the placement and routing remain the same and timing is not disturbed
.SH Syntax \fBremove_assigns\fR   [-help]  [-buffer <bufName>]   [-buffering [-buffer_tie_assigns ]]  [-honorPreserve]  [-ignorePortConstraints]   [-net <netName>[-netBuffer <netBufName>]]   [-prefix <bufNamePreFix>]  [-report]
.P Removes assign statements from the Verilog as much as possible while keeping the same DEF netlist. This means that the placement and routing remain the same and timing is not disturbed.
.P The remove_assigns command removes all non-top module assign nets without adding buffers.There are cases where you do not want assign nets in your design. However, there are some assign nets in the original net list imported into Innovus, or you have a design with some unwanted assign nets. In such cases, you can use remove_assigns to remove all assigns or replace assigns with proper buffers that are automatically selected by the tool. 
.SH Parameters   "\fB-help\fR" Outputs a brief description that includes the type and default information for each remove_assigns.  For a detailed description of the command and all of its parameters, use the man command:   man remove_assigns  "\fB-buffer <bufName>\fR" Specifies the name of the buffer for all assign nets, disables automatic buffer selection.   "\fB-buffer_tie_assigns\fR" Allows to buffer tie assigns.   "\fB-buffering\fR" Specifies whether the assign net buffering feature is needed.  If only -buffering is specified, all assigns, including top and non-top module assigns, will be replaced by buffers. The buffers for each module will be automatically selected to meet all power domain requirements with the minimum area cost.  "\fB-honorPreserve\fR" Honors the preserve setting while doing the assignment removal.   "\fB-ignorePortConstraints\fR" Allows to ignore all port constraints during assign removal.   "\fB-net <netName>\fR" Specifies the name of net (s). Supports removing or buffering assigns of a list of assign nets,  For example, the following command removes all assigns of assign nets n1, n2 and n3.  remove_assings -net {n1 n2 n3}   The following command replaces all assigns of assign nets n1, n2 and n3 with buffers.  remove_assings -buffering -net {n1 n2 n3}   If -net is used, -buffering must also be used for buffering those assign nets specified in <netName>. Otherwise, remove_assigns will work same as no options are specified (as default).  Whenever option -net is used, <netName> must be provided. Otherwise, a warning message is issued.   You can specify any of the following as the <netName>:
.RS  "*" 2 Single net name
.RE
.RS  "*" 2 Multiple net names separated with space
.RE
.RS  "*" 2 Single wildcard name (all matched assign nets will be collected for buffering)
.RE
.RS  "*" 2 Multiple wildcard names separated with space (all match assign nets will be collected for buffering)
.RE
.RS  "*" 2 Single bus name
.RE
.RS  "*" 2 Multiple bus names
.RE   Note: For each bus, all or portion of bus bits can be assign nets and the others can be non-assign nets. The buffering code replaces only those assign bus bits while leave those non-assign bus bits unchanged.  "\fB-netBuffer <netBufName>\fR" Specifies the name of the buffer for the specific net given in the -net option. This option, if specified, should come after the  -net option.   "\fB-prefix <bufNamePreFix>\fR" Specifies the user-specified prefix for buffer names.  If -prefix is used, you need to specify a prefix bufNamePreFix for buffer names that may be used in this command. The default prefix for added buffers is buf_dummy_ if you do not specify it.  "\fB-report\fR" Reports list of all buffers and assign nets that were replaced by the buffers.  If -report is used, a list of all buffers and assign nets that were replaced by the buffers will be reported in log file. If buffers are inserted to the netlist you may need to use Innovus to place and route them.
.P The remove_assigns command:
.RS  "*" 2 Removes assigns that involve only internal "wires".  For example, in the code below, assign n2 = n1 is removed.  module top();    wire n1, n2;    assign n2 = n1;    BUFX2 u1(.Y(n1));    BUFX2 u2(.A(n2));    endmodule  becomes  module top();    wire n1;    BUFX2 u1(.Y(n1));    BUFX2 u2(.A(n1));    endmodule   "*" 2  Removes assigns that involve only one port.  For example, in the code below, assign p1 = n1 is removed.    module hier(p1);    output p1;    wire n1;    assign p1 = n1;     BUFX2 u1(.Y(n1));    endmodule  becomes    module hier(p1);    output p1;     BUFX2 u1(.Y(p1));    endmodule   "*" 2  Rewires nets with feedthrough assigns that involve at least two ports, at some higher level:  module hier2 (            i,            o);       input i;       output o;       assign o = i ;       BUFX2 u1 (.A(i));    endmodule    module hier (            i,            o);       input i;       output o;       hier2 u1 (.i(i),           
.o(o));    endmodule    module top ();       // Internal wires       wire i;       wire o;       BUFX2 u1 (.Y(i));       hier u2 (.i(i),           
.o(o));       BUFX2 u3 (.A(o));    endmodule  becomes  module hier2 (            i,            o);       input i;       output o;       BUFX2 u1 (.A(i));    endmodule    module hier (            i,            o);       input i;       output o;       hier2 u1 (.i(i));    endmodule    module top ();       // Internal wires       wire i;       BUFX2 u1 (.Y(i));       hier u2 (.i(i));       BUFX2 u3 (.A(i));    endmodule
.RE
.P
