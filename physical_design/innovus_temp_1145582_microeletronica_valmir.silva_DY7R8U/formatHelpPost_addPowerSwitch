.nf
.P Product Version     22.14    Cadence Design Systems, Inc. 
.fi
.TH addPowerSwitch  22.14 "Fri Oct 06 02:12:27 2023" 
.SH Name \fBaddPowerSwitch\fR \-  The addPowerSwitch command supports five type of cells: switch cells, filler cells, corner cells (for the ring style only), and buffer cells
.SH Syntax \fBaddPowerSwitch\fR  [-help]  [-1801PowerSwitchRuleName <string>]  {-column   -powerDomain   -enablePinIn {<listOfPins>}   -enableNetIn {<listOfNets>}   -enablePinOut {<listOfPins>}   -enableNetOut {<netBaseName>}   -globalSwitchCellName <cell_syntax>  -globalBufferCellName <cell_syntax>  -horizontalPitch <float>  [-area {<x1 y1 x2 y2>}]  [-switchModuleInstance]   [-bottomOffset <float>]   [-leftOffset <float>]  [-rightOffset <value>]  [-topOffset <value>]   [-power {(<VDD:VDD1 VDD2>...)...}]   [-ground {(<GND:GND1 GND2>...)...}]   [-incremental]   [-width <length_in_um>]   [-height <length_in_um>]   [-orientation <orientation_syntax>]   [-connectBottomSwitchEnablePins {LtoR | RtoL}   [-parallelEnable]  [-globalPattern <pattern_syntax>]   [-acknowledgeTreeCell <cell_name>]  [-acknowledgeTreeHierInstance <hier_instance>]  [-backToBackChain {LtoR | RtoL}]  [-logical]   [-loopbackAtEnd]  [-maxChainDepth <integer>]  [-maxDistance <distance_in_microns>]  [-maxFanout <integer>]  [-snapToNearest]   [-skipRows]  [-topDown]   [-placeByNetWireIntersect {<h_net h_layer v_net v_layer>}]  [-placementAdjustX {<delta_in_x>}]  [-placementAdjustXY {<delta_in_x delta_in_y>}]  [-placementAdjustY {<delta_in_y>}]  [-reportFile <filename>]   [-chainByRow]  [-checkerBoard]  [-noDoubleHeightCheck]  [-tapFromNearestEnableNet]  [-allowPartialStripeRowOverlap]  [-skipX]  [-skipY]  [-honorNonRegularPitchStripe]  [-noFixedStdCellOverlap]  [-placeUnderVerticalNet {<v_net v_layer>}]  [-noRowVerify]  |-ring   -powerDomain <powerDomainName>   -enablePinIn {<listOfPins>}   -enableNetIn {<listOfNets>}  -globalSwitchCellName <cell_sytax>  -switchModuleInstance <instanceName>  -vertex <{x1 y1 x2 y1 x2 y2 x3 y2 x3 y3 x1 y3... xn yn}>   [-enableNetOut {<listOfNets>}]   [-enablePinOut {<listOfPins>}]  [-power {(<VDD:VDD1 VDD2>...)...}]   [-ground {(<GND:GND1 GND2>...)...}]   [-startEnableChainAtCorner <integer> or <corner_syntax>  [-firstInstanceName <instanceName>]   [-distribute]   [-noFiller]  [-incremental]   [-counterclockwise]  [-centerTapPins <pinname_list>]   [-reportFile <filename>]   [-specifySideList [0|1
...]  [-bottomSide [0|1]]   [-leftSide [0|1]]   [-horizontalSide [0|1]]   [-rightSide [0|1]]   [-topSide [0|1]]   [-verticalSide [0|1]   [-bufferCellSideList {<cell_syntax>
...}]   [-bufferCellNameBottom <cell_syntax>]}   [-bufferCellNameHorizontal <cell_syntax>]   [-bufferCellNameLeft <cell_syntax>]   [-bufferCellNameRight <cell_syntax>]   [-bufferCellNameTop <cell_syntax>]   [-bufferCellNameVertical <cell_syntax>]   [-globalBufferCellName <cell_syntax>]   [-fillerCellSideList {<cell_syntax>
...}]   [-fillerCellNameBottom <cell_syntax>]   [-fillerCellNameHorizontal <cell_syntax>]   [-fillerCellNameLeft <cell_syntax>]   [-fillerCellNameRight <cell_syntax>]   [-fillerCellNameTop <cell_syntax>]   [-fillerCellNameVertical <cell_syntax>]   [-globalFillerCellName <cell_syntax>]   [-switchCellSideList {<cell_syntax>
...}]   [-switchCellNameBottom <cell_syntax>]   [-switchCellNameHorizontal <cell_syntax>]   [-switchCellNameLeft <cell_syntax>]   [-switchCellNameRight <cell_syntax>]   [-switchCellNameTop <cell_syntax>]  [-topSwitchCell <float>]   [-switchCellNameVertical <cell_syntax>]   [-switchCellSideList {<cell_syntax>
...}  [-cornerCellList {<listOfCornerCells>}]   [-cornerOrientationList {<orientation_syntax
...>]   [-insideCornerCellList {<cellName
...>]   [-r0Corner <corner_syntax>]   [-r0InsideCorner {LT | TR | RB | BL}   [-r0Side {L | T | R | B}]   [-r0SideOrientation <orientation_syntax>]   [-switchPitch <value>]  [-switchPitchBottom <value>]   [-switchPitchHorizontal <value>]   [-switchPitchLeft <value>]   [-switchPitchRight <value>]   [-switchPitchTop <value>]   [-switchPitchVertical <value>]   [-switchPitchSideList {<value>
...}  [-sideOffsetList {<value>
...}]   [-bottomOffset <float>]   [-horizontalOffset <float>]   [-leftOffset <float>]   [-rightOffset <float>]   [-topOffset <float>]   [-verticalOffset <value>]  [-sideOffsetList {<value>
...}]   [-startOffset <value>]  [-startOffsetBottom <value>}  [-startOffsetHorizontal <value>]   [-startOffsetLeft <value>]   [-startOffsetRight <value>]   [-startOffsetTop <value>]   [-startOffsetVertical <value>]   [-sideStartOffsetList [<value>...]  [-forceOffset]   [-globalOffset <float>]   [-endOffset <value>]  [-endOffsetBottom <value>]   [-endOffsetHorizontal <value>]   [-endOffsetLeft <value>]   [-endOffsetRight <value>]   [-endOffsetTop <value>]   [-endOffsetVertical <value>]   [-sideEndOffsetList {<value>
...}]   [-sidePatternList {<pattern_syntax>
...}]   [-bottomPattern <pattern_syntax>]   [-leftPattern <pattern_syntax>]   [-horizontalPattern <pattern_syntax>]   [-rightPattern <pattern_syntax>]   [-topPattern <pattern_syntax>]   [-verticalPattern <pattern_syntax>]   [-continuePattern]   [-sideNumSwitchList {<integer>
...}  [-bottomNumSwitch <integer>]   [-horizontalNumSwitch <value>]   [-leftNumSwitch <integer>   [-rightNumSwitch <integer>]   [-topNumSwitch <integer>]   [-verticalNumSwitch <value>]   [-sideOrientationList {<orientation_syntax>
...}]   [-bottomOrientation <orientation_syntax>]   [-horizontalOrientation <orientation_syntax>]  [-leftOrientation <orientation_syntax>]   [-rightOrientation <orientation_syntax>]   [-topOrientation <orientation_syntax>]   [-verticalOrientation <orientation_syntax>]}   [-totalNumberPatterns <number_of_patterns>]  [-cornerCellListByCorner<corner_cells_name_per_corner>]  [-numSwitches]  [-noMinGapAdjust]  [-strictNegativeOffset]  [-getSwitchInstances <string>]  [-powerDomain <powerDomainName>]  [{-column | ring}]  [-area {<x1 y1 x2 y2>}]  [-reportFile <filename>]   [{-column | -ring}  [-bufferDelay {<value_in_seconds> | <value_in_seconds value_in_seconds>}]   [-bufferSwitchSameDirection <string>] [-cellEM <string>]  [-cellEM <value_in_amps>]   [-commitPrototype {0|1)]   [-deviceThresholdVolt <value_in_volts>]   [-idSat <value_in_amps>]   [-iLeak <value_in_amps>]   [-loadCapacitance <value_in_farads>]   [-maxIRPercent <float>]   [-maxLeakageCurrent <value_in_amps>]   [-maxLeakagePercent <float>]   [-maxRampUpCurrent value_in_amps]  [-maxSwitchIR <value_in_volts>]   [-noPgDecapEstimate {0|1)]   [-noPgCapacitanceEstimate {0|1)]   [-numberSimultaneousRampUpChain <integer>]   [-offsetX <string>] [-orientation <string>]  [-pgCapacitance <value_in_farads>]   [-pgCapacitanceFactor <value_in_farads>]   [-pgInductance <value_in_henrys>]   [-protoReportFile <fileName>]   [-prototypeChainDepth {0|1)]   [-prototypeChainDepthGivenRampUpCurrent {0|1)]   [-prototypeDelayGivenRampUpCurrent {0|1)]   [-prototypeIgnoreLeakage {0|1)]   [-prototypeMaxChainDepth {0|1)]   [-prototypeMinChainDepth {0|1)]   [-prototypeNumberSwitches {0|1)]   [-prototypeRampUpTime {0|1)]   [-prototypeSweepChainDepth {<min_integer max_integer increment_integer>}]   [-prototypeSweepSwitchNumber {<min_integer max_integer increment_integer>}]   [-rampUpChainDepth <integer>]   [-rampUpRailVoltagePercent <float>]   [-rampUpTime <min_value_in_seconds max_value_in_seconds>]   [-readPowerSwitchCell <fileName>]  [-rOn {<value_in_ohms> | <value_in_ohms value_in_ohms>}]   [-totalLeakagePower <value_in_watts>]   [-totalPower <value_in_watts>]   [-voltage <value_in_volts>] ]  [-noEnableChain]  [-ignoreShifterRule]  [-ignoreSoftBlockage]  [-cpfPowerSwitchRuleName <rule_name>]  [-cellEnablePin]  [-instancePrefix]  [-simplePrefix]  [-netPrefix] 
.P The addPowerSwitch command supports five type of cells: switch cells, filler cells, corner cells (for the ring style only), and buffer cells. You can define a cell pattern when you create power switch rings.
.P The parameters of this command are categorized as below in the Parameters table depending upon their functionality based on how they are to be used:
.RS  "*" 2 Column Type Insertion Parameters  "*" 2 Power Switch Prototyping Parameters  "*" 2 Ring Type Insertion Parameters
.RE 
.SH Column Type Insertion Parameters
.P Before you insert power switches in a column style, you must assign power switch cells to CLASS CORE and the correct SITE in the
.lef file and connect power/ground nets and pins of the power switch cells. The distance between columns of switches (the horizontal pitch value) must be in m.
.P The column style is favorable for channelless designs. In this case, all blocks are abutted and there is no space for rings. In ring style, you must have a space greater than the max ring cell height between the power domain and the adjacent power domain. This space is primarily occupied by ring switch cells and power routing.
.P If you create power switch columns within a specified power domain the distance between the columns of switches is determined by the -horizontalPitch. The first (left-most) column of switches is located -leftOffset from the power domain's left boundary. The -enableNetIn, which might consist of one or more enable nets, drives the -enablePinIn of the first switch cell of each column.
.P In column style, nets are assigned to pins sequentially if more nets than number of pins are specified. For example, if the list consists of three nets, and there are five columns of switches, net 1 drives the pin of the first switch in column 1 and 4, net 2 connects to column 2 and 5, and net 3 only drive the -enablePinIn of the first switch in column 3. 
.SH Power Switch Prototyping Parameters
.P These are the parameters, which are used for power switch prototyping.  
.SH Ring Type Insertion Parameters
.P If you insert power switches in ring style, the power switches are added around the selected power domain in the minimum gap available. Unless specified, the power switches are added to the top level hierarchy but the user has a choice to specify to which level in the hierachy should the power switches be added. The command creates a switch ring on the top, bottom, left, and right sides of the specified power domain unless you assign a specific side.
.P Before you insert power switches in a ring style, you must assign power switch cells to CLASS RING in the
.lef file (SYMMETRY X Y R90, recommended, but not required for switch cells) and connect power/ground nets and pins of the power switch cells. You must have existing enable nets to drive the buffer inside the power switch cells and acknowledge nets exiting the power switch cell. You need these net names when you specify -enableNetIn and -enableNetOut.
.P Rectilinear power domains are supported in both ring-style and column-style switch insertion.
.P Regardless of whether you insert columns or a ring, the software ties the -enablePinOut of the first switch cell to the -enablePinIn of the next switch cell in the same column or on the same side of a ring. All the enable pin of the switch cells in the same column/side are daisy-chained together. For the last switch of the column, the -enablePinOut is tied to -enableNetOut.
.P Note: The parameters which are applicable to both Column Type Insertions and Ring Type Insertions are listed in both sections.
.P The Syntax Conventions and Examples are listed out before apart from the description the the parameters. For conventions and examples, see:
.RS  "*" 2 Syntax Conventions  "*" 2 Syntax Examples
.RE
.P For Power Switch Chaining Unchaining Instances, see the description of the rechainPowerSwitch command. 
.SH Parameters   "\fB-help\fR" Outputs a brief description that includes the type and default information for each addPowerSwitch parameter.  For a detailed description of the command and all its parameters, use the man command:   man addPowerSwitch.  "\fB-getSwitchInstances <string>\fR" Returns the existing power switch instances previously added by  addPowerSwitch.  Returns the existing power switch instances previously added by addPowerSwitch. It returns all the power switches in the current design without any other option, and can be used with -powerDomain, -column, -ring and -area options to return specific power switches.  By default, the command returns a Tcl list. Use the -reportFile option if you want to list the power switch information into a file.  Refer to the following example:  addPowerSwitch -getSwitchInstances -powerDomain TDSPCore -area {189.0 31.36 318.0 190.36}  "\fBColumn Type Insertion Parameters\fR"  "\fB-1801PowerSwitchRuleName <string>\fR" Specifies the power switch rule name defined in the 1801 power intent file.  By default, addPowerSwitch uses the first defined rule.  "\fB-acknowledgeTreeCell <cell_name>\fR" Specifies the name of cell to use in acknowledge tree synthesis. If you specify this parameter but do not specify -acknowledgeTreeHierInstance, the tool builds the acknowledge tree at the top level of the design. This parameter provides control over the time it takes to switch a power domain off and on.   "\fB-acknowledgeTreeHierInstance <hier_instance>\fR" Inserts an enable net out signal tree of specified cell instances in the specified hierarchical instance in the design. This parameter provides a power domain off and on; and works with option -acknowledgeTreeCell.   "\fB-allowPartialStripeRowOverlap\fR" Allows placement of power switch cells on nearest row location even if crossing stripes do not completely ovelap the power switch cells.  Use the option with the option -placeByNetWireIntersect.  "\fB-area {<x1 y1 x2 y2>}\fR" Defines an area within a power domain where the tool can insert power switches. The option applies to rectangular area.  <x1 y1> is the lower left coordinate of the rectangular area.  <x2 y2> is the upper right coordinate corner of the rectangular area.  You can specify -leftOffset, -rightOffset, -topOffset, or -bottomOffset to offset the switches from the boundaries of the area.  Note: The power switch instances snap to placement grid so the actual location is slightly different from the specified coordinate.  "\fB-backToBackChain {LtoR | RtoL}\fR" Specifies the distance between the bottom-most switch in the switch column and the bottom fence boundary of the power domain. You can use this parameter along with -width, -height, and other offsets to define a unique, specific area within the power domain for placing switches. By default, the switch column can abut the bottom fence boundary.  For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  Default: 0  "\fB-bufferSwitchSameDirection <string>\fR" Used for chaining daisy chain with power switch cell having two enabled pins. The option usage is as follows:
.RS  "*" 2 bufferSwitchSameDirection 0 (Default)  Input Enable net EnIn_1 and EnIn_2 connect first switches at opposite ends; output EnOut_1 and EnOut_2 come out as last switch cells in daisy chain.
.RE
.RS  "*" 2 bufferSwitchSameDirection 1  Input Enable net EnIn_1 and EnIn_2 connect first switches at the same end; output EnOut_1 and EnOut_2 come out as last switch cells in daisy chain.
.RE   "\fB-cellEnablePin\fR" Specify this option to define/provide the pin names of PSO cells used in addPowerSwitch when the PSO cells pin names are different than given in the parameters -enablePinIn and -enablePinOut. This option can be used with ring as well as column insertion.  The option usage is as follows for defining different cell pin signature:  -cellEnablePin {{cellname {enableInputPinList}\\ {enableOutputPinList}}}  In the following example the I/O pin names of switch cells Cell65_SW_type1 and Cell65_SW_type2 are different. You can use the -cellEnablePin option to mention the pin name for switch cell Cell65_SW_type2.  addPowerSwitch -column -powerDomain PDoff \\  -enablePinIn { SLEEPIN } \\  -enablePinOut { SLEEPOUT } \\  -globalSwitchCellName { {Cell65_SW_type1 T1}\\  {Cell65_SW_type2 T2} } \\  -enableNetIn {Ctrl1_In } \\  -enableNetOut { Ctrl1_Out } -globalPattern { T1 T2 }  -cellEnablePin { {Cell65_SW_type2 { SLEEPIN_1 }   {SLEEPOUT_1 } }}  In the above example the two pins specified in -cellEnablePin are different from those specified in -enablePinIn { SLEEPIN } and  -enablePinOut { SLEEPOUT }  "\fB-chainByRow <LtoR RtoL>\fR" Gives additional control if you need to enable horizontal signal chaining. For example, in rows. By default, signal chaining is enabled from bottom to top.  The signal chaining by this option can be:
.RS  "*" 2 LtoR: Signal chaining is enabled from Left to Right direction  "*" 2 RtoL: Signal chaining is enabled from Right to Left direction
.RE   "\fB-checkerboard <string>\fR" Places the power switches in a checkerboard pattern within a power domain.   "\fB-connectBottomSwitchEnablePins {<LtoR> | <RtoL>}\fR" Connects the first switch of the first column to the enable net specified. The software connects the first switch in the remaining columns to the output enable net of the first switch in the previous column.  The following figure illustrates the LtoR option (default) for a rectilinear power domain.  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   Note: This parameter applies to power switch column creation only.  Default: The enable pin of the first switch of each column is connected directly to the enable net signal specified.  "\fB-cpfPowerSwitchRuleName <rule_name>\fR" Specify this option when there are multiple power switch rules specified for a power domain in CPF. By default, addPowerSwitch uses the first defined rule.   "\fB-enableNetIn {listOfnets}\fR" Specifies the list of input nets that the software attaches to the enable input pins. The order in which you specify these nets determines the sequence in which nets are assigned to pins. Enable nets and pins are connected automatically if they reside at the same level in the hierarchy.  If you have already specified update_power_switch_rule  -enable_condition or create_power_domain -shutoff_condition in your CPF file, you do not need to specify this parameter. update_power_switch_rule   -enable_condition takes precedence over create_power_domain -shutoff_condition for enable net In connection. For automatic enable connection to work, you should also specify update_power_switch_rule -acknowledge_receiver info in CPF for enableNetOut connection. Otherwise you should provide enable net connections using -enableNetIn and   -enableNetOut options.  If you specify -enableNetIn, it will override create_power_domain -shutoff_condition.  "\fB-enableNetOut {<netBaseName> | {listOfNets}}\fR" Specifies the enable output nets that the software attaches to the enable output pins. The order in which you specify these nets determines the sequence in which nets are assigned to pins. If enable nets and pins reside at the same level in the hierarchy they are connected automatically. The -enablePinOut of the last switch of the last column is tied to -enableNetOut.  If you have already specified update_power_switch_rule   -acknowledge_receiver in your CPF file, you do not need to specify this parameter. For automatic enable connection to work, you should also specify update_power_switch_rule   -enable_condition or create_power_domain   -shutoff_condition in the CPF file. For enableNetIn connection you should provide enable net connections using -enableNetIn and -enableNetOut options. You must specify <netBaseName> for columns or a list of nets for rings. Automatic enableNetOut connection works if there is only one enable net out after insertion.  "\fB-enablePinIn {listOfPins}\fR" Specifies the list of enable input pins of the buffers inside the switch cell. The order in which you specify these nets determines the sequence in which nets are assigned to pins. If enable nets and pins reside at the same level in the hierarchy they are connected automatically.The software ties the   -enablePinOut of the first switch cell to the  -enablePinIn of the next switch cell in the same ring: All the enable pin of the switch cells in the same column are daisy-chained together. The  -enablePinIn of the first switch of the first column, is tied to  -enableNetIn.   "\fB-enablePinOut {listOfPins}\fR" Specifies the list of enable output pin(s) of the buffer(s) inside the switch cell. The order in which you specify these pins is important because nets are assigned to pins sequentially. The software ties the -enablePinOut of the first switch cell to the  -enablePinIn of the next switch cell in the same column: All the enable pin of the switch cells in the same column are daisy-chained together. For the last switch of the column, the  -enablePinOut is tied to  -enableNetOut.   "\fB-firstInstanceName <instanceName>\fR" Specifies the instance name of an existing switch cell in the netlist to use as the first cell in the column or ring. Usually, there is at least one switch instantiated in a module (specified by -switchModuleInstance) in the netlist. The software creates a unique instance name for each switch inserted. This parameter is optional. If the netlist does not contain switches, then this parameter is invalid.   "\fB-globalBufferCellName <cell_syntax>\fR" Specifies the cell name of the buffer cell to insert in the power switch ring surrounding the specified power domain, or in the columns inside the power domain, if there are spaces available.   "\fB-globalFillerCellName <cell_syntax>\fR" Specifies the cell name of the filler cell to insert in the power switch ring surrounding the specified power domain, or in the columns inside the power domain, if there are spaces available.   "\fB-globalPattern <pattern_syntax>\fR" Specifies a pattern of cells to repeat either in the switch rings or switch columns. The pattern consists of a group of different types of cells in a specified order.   "\fB-globalSwitchCellName <cellName>\fR" Specifies the cell name of the switch cell to insert in the power switch ring surrounding the specified power domain, or in the column inside the power domain. This parameter is required.   "\fB-ground {(<GND:GND1 GND2>...)...} \fR" Specifies a list of ground nets and pin connections. If -ground has multiple ground nets, the software uses the last one in the list for tie-hi/lo connections. For example, specify  -ground (VSS:gnd vss!) to indicate that the  gnd and  vss! pins of all the instances in a given power domain are connected to the  VSS net.   "\fB-height <length_in_um>\fR" Specifies the height of an area inside the power domain where switches can be placed. You can use this parameter along with -width,  -bottomOffset, and  -leftOffset to define a unique, specific area in the power domain for placing switches.   "\fB-honorNonRegularPitchStripe\fR" Honors the option-skipRows when the pitch/distance between the power stripe specified in  -placeunderverticalnet option is not regular. This option is related to column insertion.   "\fB-horizontalPitch <float>\fR" Specifies the distance between switch columns in m. This parameter is required.  For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  "\fB-ignoreShifterRule\fR" Ignores the level shifter rules, which are applied to the power switches in both CPF and UPF.   "\fB-ignoreSoftBlockage\fR" With this option addPowerSwitch can insert power switch cells in areas with soft or partial blockages. By default,  addPowerSwitch does not add power switch cells in areas with any type of placement blockage: hard, soft, or partial.   "\fB-incremental\fR" Inserts switches to the power domain without removing the existing switches.  Default: Running the addPowerSwitch command removes the existing placed switches and inserts new switches.  "\fB-instancePrefix<prefix>\fR" Adds prefix to power switch instances.  Note: -instancePrefix overwrites the prefix specified in CPF by update_power_switch_rule.  "\fB-leftOffset <float>\fR" Specifies the distance between the left-most switch in the switch column and the right fence boundary of the power domain. You can use this parameter along with -width, -height, and -bottomOffset to define a unique, specific area within the power domain for placing switches. By default, the switch column can abut the right fence boundary.  Note: When you create a power domain, a minGap exists for this power domain, and the switches are inserted within this minGap. However, if the specified minGap is less than the switch dimension, then the tool automatically extends the minGap for this power domain.  For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide, and see commands -bottomOffset, -rightOffset, -topOffset, -verticalOffset, and -horizontalOffset.  Default: 0   The switches abut the power domain fence if possible.  "\fB-logical\fR" Inserts a logical power switch to the partition block so that the software writes out correct PG direction in dumped PG netlist.   "\fB-loopbackAtEnd\fR" Connects the enablePinOut of the last cell in the chain to the  enablePinIn of the same cell. This option useful or can be used when a power switch has two  enablePin In and  Out pins.   "\fB-maxChainDepth <integer>\fR" Specifies the maximum number of instances in the enable chain. After the specified maximum, addPowerSwitch starts a new enable chain from the next power switch cell. This feature provides fine control over the time it takes to switch a power domain off and on.   "\fB-maxDistance<distance_in_microns>\fR" During power switch insertion, maxDistance is the maximum distance within which the  addPowerSwitch looks for the next switch to enable net connections to form an enable signal chain connection.   "\fB-maxFanout<integer>\fR" During power switch insertion, maxFanout is the maximum number of PSO cell enable input pins that a PSO cell enable output pin may connect to. This option is to be used with  maxDistance.   "\fB-noEnableChain\fR" Inserts and places power switches without adding enable signal chaining.   "\fB-noFixedStdCellOverlap\fR" Avoids placing PSO instances over fixed physical instances already placed on rows.   "\fB-noDoubleHeightCheck\fR" Allows double height power switch insertion even if when SITE name is same for double height as well as single height cells. The recommended flow is to use different SITE names for single and double height cells.   "\fB-noRowVerify\fR" Allows you to not verify row coverage at end of a column insertion. By default, the command verifies row coverage.   "\fB-offsetX\fR" Specifies the offset number of intersections in X direction. With this, power switch instances can be inserted in checker board style with specified offset value.  Note: This must used with -placeByNetWireIntersect and -skipX, options. The value should not be more than the value of -skipX.  "\fB-orientation <orientation_syntax>\fR" Specifies the orientation of the switch to be placed in the row. The software checks the specified orientation of the switch against the legal orientation of the row in which the switch is to be placed. The software uses the row site information and the row orientation to determine whether the specified orientation is legal.  Default: Follows the row orientation.  "\fB-parallelEnable\fR" Connects a power switch's input pin in parallel style rather than daisy-chaining. You do not have to specify -enablePinOut or  -enableNetOut.   "\fB-placeByNetWireIntersect {<h_net h_layer v_net v_layer>}\fR" Places switches at the intersection of specified horizontal net and vertical net on the respective LEF layers of a pre-existing power grid. You must specify the horizontal net and layer first, then the vertical net and layer.  By default, the switches are placed at the bottom-left intersection of the grid. You can offset the switches from the grid intersection by specifying -placementAdjustX, -placementAdjustXY, or -placementAdjustY in addition to this parameter.  "\fB-placementAdjustX {<delta_in_x>}\fR" Specifies the horizontal offset (in micrometers) from the grid intersection specified by -placeByNetWireIntersect. The value can be positive or negative.   "\fB-placementAdjustXY {<delta_in_x delta_in_y>}\fR" Specifies the x-y offset (in micrometers) from the grid intersection specified by -placeByNetWireIntersect. The values can be positive or negative.   "\fB-placementAdjustY {<delta_in_y>}\fR" Specifies the vertical offset (in micrometers) from the grid intersection specified by -placeByNetWireIntersect. The values can be positive or negative.   "\fB-placeUnderVerticalNet {<vert_net vert_layer>} \fR" Places switches under the vertical net of the specified LEF layer of a pre-existing power grid. By default, the switches are placed at the bottom-left intersection of the grid and row but in addition to this option, you can offset the switches from the row by specifying options like -placementAdjustX.   "\fB-power {(<VDD:VDD1 VDD2>...)...} \fR" Specifies a list of power nets and pin connections.  For example, specify -power (Vdd1:Vdd Pwr) (Vdd2:VDD vdd!) to indicate that the Vdd and Pwr pins of all the instances in a given power domain are connected to the Vdd1 net, and the VDD and vdd! pins are connected to the Vdd2 net.  If -power has multiple power nets, the software uses the last one in the list for tie-hi/lo connections. For example, if -power {(vdd1:VDD1)(vdd2:VDD2)} is specified, then the software uses net vdd2 for tie-hi connection.  Note: You must specify both -ground and -power to ensure that the instance being moved contains the correct (net:pin) connections in the new power domain.  "\fB-powerDomain <powerDomainName>\fR" Specifies the power domain that shuts off through the inserted power switches. Alternatively, you can use IDs and multipliers, as shown below:  addPowerSwitch -column -powerDomain PD0 \\ -globalSwitchCellName {{switchCell_1 A} {switchCell_2 B}} \\ -globalPattern {A {B*3}}
..."  "\fB-reportFile <filename>\fR" Writes switch instances and their corresponding input/output enable signal pin/net connections to the specified file name.   "\fB -rightOffset \fR" Specifies the distance between the right-most switch in the switch column and the right fence boundary of the power domain. You can use this parameter along with -width, -height, and -leftOffset to define a unique, specific area within the power domain for placing switches. By default, the switch column can abut the right fence boundary.  Note: When you create a power domain, a minGap exists for this power domain, and the switches are inserted within this minGap. However, if the specified minGap is less than the switch dimension, then the tool automatically extends the minGap for this power domain.  For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  Default: 0  "\fB -skipX \fR" Specifies the number of intersections to skip in X direction.  Note: This option is to be used with -placeByNetWireIntersect.  "\fB -skipY \fR" Specifies the number of intersections to skip in Y direction.  Note: This option is to be used with -placeByNetWireIntersect  "\fB-skipRows <integer>\fR" Specifies the number of rows to skip when placing a switch in a column. For example, -skipRows 2 skips two rows before placing the next switch in a column. You can use this parameter with or without the  -checkerboard parameter.   "\fB -simplePrefix \fR" Allows user to create a power switch instance name with simple numbers. By default power switch instance names are created in the format:  pso_<PDname>_<SwitchCellName>_<X_andY_location>_<Sequen><ceNumber>  This option can be used with -instancePrefix <prefix>  Example :  addPowerSwitch -column
... \\  -instancePrefix strongPsw_ -simplePrefix 1  With this command run, the created instance name will be: strongPsw_1, strongPsw_2
..  Note: -simplePrefix overwrites the prefix specified in CPF by <update_power_switch_rule>.  "\fB -snapToNearest \fR" Snaps the cell placement to the nearest legal location. This parameter can be used when a hard macro blocks part of a column. The switches that would overlap the hard macro blockage are placed at legal locations nearest to the expected original location.  You must specify either -skipRows or -checkerboard in order to create enough space for the cells to snap. If you specify -skipRows, you must set the value greater than zero.  "\fB-spacerCellName <cell_syntax>\fR" Specifies the spacer cells to place on either side of power switch cells within a power domain to prevent the tool from placing standard cells next to the switch cells.   "\fB-switchModuleInstance <instanceName>\fR" When this parameter is specified, all the switches are instantiated in the module instance specified. When not specified, the switch instances are inserted at the top level. This parameter is optional.   "\fB-tapFromNearestEnableNet\fR" Enables addPowerSwitch to use the enable net from the nearest, already inserted/placed power switch instance. This option can be used during incremental power switch insertions.  Example :  addPowerSwitch -column \\  -powerDomain PD1 -enablePinIn {PinIn} \\  -enablePinOut {PinOut} \\  -globalSwitchCellName PSO_SWITCH\\  -enableNetIn {pwr_on} -enableNetOut {pwr_ack}\\   -horizontalPitch 100 \\  -leftOffset 5 \\  -area { x1 y1 x2 y2 } -incremental \\  -tapfromnearesEnableNet  "\fB-topDown\fR" Adds switches from the top down rather than from the bottom up.  The following figure shows how the software places switches from top to bottom.  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   "\fB-topOffset <value>\fR" Specifies the distance between the top-most switch in the switch column and the top fence boundary of the power domain that shuts off.  For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  Default: 0  "\fB-width <length_in_um>\fR" Specifies the width of an area inside the power domain where switches can be placed. Specifies the distance between the bottom-most switch in the switch column and the bottom fence boundary of the power domain that shuts off. You can use this parameter along with -bottomOffset,  -height, and  -leftOffset to define a unique, specific area in the power domain for placing switches.   "\fBPower Switch Prototyping Parameters\fR"  "\fB-bufferDelay {<value_in_seconds> | {<value_in_seconds value_in_seconds>}}\fR" Specifies the delay of the enable buffer in switch. If the switch is a mother-daughter type (with two enables), you can specify two values corresponding to the stage-1 and stage-2 enable buffers respectively.   "\fB-cellEM value_in_amps\fR" Specifies the maximum current that can pass through the switch due to the electromigration limit of the cell.   "\fB-commitPrototype {1|0}\fR" Adds the number of switches determined by -prototypeNumberSwitches. This parameter does not work with any other prototyping commands.  Default: If you specify -commitPrototype but do not specify a value, the default is 1.   If you do not specify -commitPrototype, the default is 0.  "\fB-deviceThresholdVolt <value_in_volts>\fR" Specifies the device threshold voltage for ramp up prototyping. If you do not specify this parameter, the tool computes a default value based on the switch characterization parameters.   "\fB-idsat {<value_in_amps> | <value_in_amps> <value_in_amps>}\fR" Specifies the switch current when the switch is operated in saturation mode. If the switch is a mother-daughter type (with two enables), then you can specify two values corresponding to the stage-1 and stage-2 enables respectively.   "\fB-ileak <value_in_amps>\fR" Specifies the switch cell leakage current when the switch is off.   "\fB-loadCapacitance <value_in_farads>\fR" Specifies the total capacitive load of the domain for ramp-up analysis.   "\fB-maxIRPercent <float>\fR" Specifies the maximum IR drop allowed inside power domain.  Default: 2 percent  "\fB-maxLeakageCurrent <value_in_amps>\fR" Specifies the maximum leakage current constraint of the power domain.   "\fB-maxLeakagePercent <float>\fR" Specifies the maximum domain leakage constraint as a percentage of the total domain leakage current.  Default: 50 percent  "\fB-maxRampUpCurrent<value_in_amps>\fR" Specifies the maximum ramp up current value used in chain depth and switch delay prototyping. Use this parameter with -prototypeChainDepthGivenRampUpCurrent or  -prototypeDelayGivenRampUpCurrent.  "\fB -maxSwitchIrvalue_in_volts\fR" Specifies the maximum voltage drop allowed across the switch.   "\fB -netPrefix prefix\fR" Adds a prefix to power switch enable nets.  For example:  addPowerSwitch -instancePrefix myInst_ -netPrefix myNet_ \\  -column -powerDomain MPY -enableNetIn swcontrol_2 \\   -enableNetOut swack_2 -globalSwitchCellName CDN_COLUMN_SW \\  -enablePinIn A0 -enablePinOut Z0 -leftOffset 10 \\  -horizontalPitch 50 -skipRows 2 -reportFile PSWmpy.rpt \\  -switchModuleInstance DTMF_INST_4/TDSP_CORE_INST/MPY_32_INST  ## From PSWmpy.rpt file  DTMF_INST_4/TDSP_CORE_INST/MPY_32_INST/myInst_psoI_MPY_1_CDN_COLUMN_SW_1415_330  _1 (1415.32 330.87 MX)     # Domain MPY, Column 0, Sequence 1  (A0) :  DTMF_INST_4/TDSP_CORE_INST/MPY_32_INST/myNet_psoPSI_MPY_EnNet__1_1_1415_313_0  (Z0) :  DTMF_INST_4/TDSP_CORE_INST/MPY_32_INST/myNet_psoPSI_MPY_EnNet__1_2_1415_330_0  "\fB-noPgCapacitanceEstimate {0|1}\fR" Omits power grid capacitance estimation during ramp up analysis.  Default: 0  "\fB-noPgDecapEstimate {0|1}\fR" Omits decoupling capacitance estimation during ramp up analysis.  Default: 0  "\fB-numberSimultaneousRampUpChain integer\fR" Specifies the number of simultaneous ramp up chains for ramp up analysis.   "\fB-protoReportFile<fileName>\fR" Specifies the file containing prototyping results.   "\fB-pgCapacitance<value_in_farads>\fR" Specifies the total power grid capacitance for ramp up analysis.   "\fB-pgCapacitanceFactor<float>\fR" Specifies the ratio of the power grid capacitance as a factor of the total load capacitance.   "\fB-pgInductance<value_in_henrys>\fR" Specifies the effective power grid inductance associated with the power grid and package.   "\fB-prototypeChainDepth {0|1}\fR" Performs prototyping on chain depth given maximum ramp up current. You must specify -rampUpTime when you specify this parameter.   "\fB-prototypeChainDepthGivenRampUpCurrent {0|1}\fR" Performs prototyping on chain depth given maximum ramp up current. You must specify -maxRampUpCurrent when you specify this parameter.   "\fB-prototypeDelayGivenRampUpCurrent {0|1}\fR" Analyzes optimum ramp up time given maximum ramp up current. You must specify -maxRampUpCurrent when you use this command.   "\fB-prototypeIgnoreLeakage {0|1}\fR" Ignores leakage constraints during prototyping.   "\fB-prototypeMaxChainDepth {0|1}\fR" Performs maximum chain depth prototyping based on ramp up time. You must specify -rampUpTime when you specify this parameter.   "\fB-prototypeMinChainDepth {0|1}\fR" Performs minimum chain depth prototyping based on ramp up time. You must specify -rampUpTime when you specify this parameter.   "\fB-prototypeNumberSwitches {0|1}\fR" Determines the optimum number of switches based on switch characteristics and domain constraints.   "\fB-prototypeRampUpTime {0|1}\fR" Performs prototyping on ramp up time based on chain depth.   You must specify -rampUpChainDepth when you specify this parameter.   "\fB-prototypeSweepChainDepth {<min_integer> <max_integer> <increment_integer>}\fR" Explores various chain depths from minimum to maximum in specified increments, and reports ramp up metrics for each setting.   "\fB-prototypeSweepSwitchNumber {<min_integer max_integer increment_integer>}\fR" Explores the number of switches from minimum to maximum in specified increments, and reports corresponding power domain operation metrics.   "\fB-rampUpChainDepth integer\fR" Specifies the chain depth used in ramp up time prototyping. Specify this parameter when you specify -prototypeRampUpTime.   "\fB-rampUpRailVoltagePercent float\fR" Specifies the percentage of the full domain voltage upon which the power domain is considered operable when ramping up.  Default: 90 percent  "\fB-rampUpTime {<min_value_in_seconds max_value_in_seconds>}\fR" Specifies the minimum and maximum ramp up time settings for chain depth prototyping. This parameter is required for -prototypeChainDepth, -prototypeMinChainDepth, and  -prototypeMaxChainDepth.  "\fB-readPowerSwitchCell<fileName>\fR" Specifies the file containing the switch characterization data. The file contains a list of characterization data per cell, on one line. If you do not put all of the information for a cell on one line, the tool issues an error message. The format is as follows:  CELL cell_name SUPPLY pin_name SWITCHED pin_name RON value_in_ohms IDSAT value_in_mA ILEAK value_in_mA  CELL2...For power switch prototyping, the tool only reads and uses the first line of the file and uses only one cell type.   "\fB-rOn <value_in_ohms>\fR" Specifies the resistance when the switch is operated in linear mode. If the switch is a mother-daughter type (with two enables), you can specify two values corresponding to the stage-1 and stage2 enables respectively.   "\fB-totalLeakagePower<value_in_watts>\fR" Specifies the total leakage power of the power domain before switches are added.   "\fB-totalPower<value_in_watts>\fR" Specifies the total power consumed by the domain. If you do not specify this parameter, report_power computes power consumption.   "\fB-voltage <value_in_volts>\fR" Specifies the primary rail voltage of the power domain.   "\fBRing Type Insertion Parameters\fR"  "\fB-1801PowerSwitchRuleName <string>\fR" Specifies the power switch rule name defined in the 1801 power intent file.  By default, addPowerSwitch uses the first defined rule.  "\fB-bottomNumSwitch <integer>\fR" Specifies the number of switches to insert on the bottom side(s) of the power domain.  Note: This parameter applies to power switch ring creation only.  Three scenarios can occur:
.RS  "*" 2 If the spaces available match the number specified, the software fills these spaces with switches.  "*" 2 If the number exceeds the spaces available, the software issues a warning message.  "*" 2 If the number is less than the spaces available, the tool inserts the switches, then inserts filler cells to fill the space.
.RE   Also, if you specify f instead of an integer, the tool automatically fills the bottom side with switches and filler cells.  This parameter is optional.  See -horizontalNumSwitch, -verticalNumSwitch, -leftNumSwitch, -rightNumSwitch, and -topNumSwitch.  Default: f  "\fB-bottomOffset <float>\fR" Specifies distance from the bottom edge outside of the power domain fence and the bottom side(s) of the power switch ring. See-horizontalOffset, -verticalOffset, -leftOffset, -rightOffset, and -topOffset.  Note: When you create a power domain, a minGap exists for this power domain, and the switches are inserted within this minGap. However, if the specified minGap is less than the switch dimension, then the tool automatically extends the minGap for this power domain.  For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  Default: 0  "\fB-bottomOrientation <orientation_syntax>\fR" Specifies the cell orientation for all bottom side(s) of the power switch ring.   "\fB-bottomPattern <pattern_syntax>\fR" Defines a pattern for the bottom side(s) of the ring only.   "\fB-bottomSide [0 | 1]\fR" Inserts switches on the bottom side(s) of the power domain. If you do not specify a side, the software creates a full power switch ring around the specified power domain. If you specify a side, the software inserts switches on that side. In this case, the tool sets -bottomSide to 1 and sets the other sides to 0.  You can specify multiple sides and the software inserts switches only on the sides you specify. The tool sets the specified sides to 1 and sets the unspecified sides to 0.  Default: 1  "\fB-bufferCellNameBottom <cell_syntax>\fR" Specifies the buffer cells to use on the bottom side(s) of the switch ring.   "\fB-bufferCellNameHorizontal <cell_syntax>\fR" Specifies the buffer cells to use on the horizontal side(s) of the switch ring.   "\fB-bufferCellNameLeft <cell_syntax>\fR" Specifies the buffer cells to use on the left side(s) of the switch ring.   "\fB-bufferCellNameRight <cell_syntax>\fR" Specifies the buffer cells to use on the right side(s) of the switch ring.   "\fB-bufferCellNameTop <cell_syntax>\fR" Specifies the buffer cells to use on the top side(s) of the switch ring.   "\fB-bufferCellNameVertical <cell_syntax>\fR" Specifies the buffer cells to use on the vertical side(s) of the switch ring.  This parameter applies to power switch ring creation only.  "\fB-bufferCellSideList {<cell_syntax>
...}\fR" Specifies that the buffer cells are inserted on each side of a power domain. The first value of the list indicates the first side related to Corner 0, which is the lower left corner of the ring. If the -counterclockwise parameter is specified, the first side is considered from from Corner 0 in the counterclockwise direction. The following example shows the buffer cells specified for an eight-sided power switch ring:  -specifySideList {1 0 1 0 1 0 1 0}  -switchCellSideList {cell1 cell1 cell2 cell2 cell3 cell3 cell4 cell4}  The cell1 value is used for the first side. Specify cell1 again to provide a valid cell type, even when there are no cells on the second side.  Note: A space must be inserted between the list values. Additionally, only a valid cell name must be specified for each side, even if no cells can be specified for a side. The tools checks whether the number of specified cells is the same as the number specified with -specifySideList. In case of any discrepancy, an error message is displayed.  "\fB-cellEnablePin <string>\fR" Specify this option to define/provide the pin names of PSO cells used in addPowerSwitch when the PSO cells pin names are different than given in the parameters -enablePinIn and -enablePinOut. This option can be used with ring as well as column insertion.  The option usage is as follows for defining different cell pin signature:  -cellEnablePin {{cellname {enableInputPinList}\\ {enableOutputPinList}}}  In the following example the I/O pin names of switch cells Cell65_SW_type1 and Cell65_SW_type2 are different. You can use the -cellEnablePin option to mention the pin name for switch cell Cell65_SW_type2.  addPowerSwitch -ring -powerDomain PDoff \\  -enablePinIn { SLEEPIN } \\  -enablePinOut { SLEEPOUT } \\  -globalSwitchCellName { {Cell65_SW_type1 T1}\\{  Cell65_SW_type2 T2} } \\  -enableNetIn {Ctrl1_In } \\  -enableNetOut { Ctrl1_Out } -globalPattern { T1 T2 }-cellEnablePin { {Cell65_SW_type2 { SLEEPIN_1 } { SLEEPOUT_1 } }}  In the above example the two pins specified in -cellEnablePin are different from those specified in -enablePinIn { SLEEPIN } and  -enablePinOut { SLEEPOUT }  "\fB-centerTapPins <pinname_list>\fR" Enables the center tap capability, and specifies the pins to use as center taps. You must use breaker cells to terminate the buffer signal propagation on both sides of the center tap buffer.  The following figure shows that, depending on the specified pin name list, the software assigns a pin name to the enable net. This feature can be useful for debugging the enable signal.  Note: This parameter applies to power switch ring creation only.  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   "\fB-continuePattern\fR" Continues a specified pattern from one side of the ring to the next side. You must also specify -globalPattern when you use this parameter.  Default: If you do not use this parameter, the software stops the pattern at the end of a side and restarts the pattern from the beginning on the next side.  "\fB-counterclockwise\fR" Places the cell pattern in a counterclockwise direction in a switch ring. Switch placement begins at the lower left corner of the ring.  Default: If you do not specify this parameter, the software places the pattern in a clockwise direction.  "\fB-cornerCellList {<listOfCornerCells>}\fR" Specifies the list of available corner cells that can be used by the tool to fill the corners of the ring. This parameter is optional.  If user specifies only one corner cell, that same cell is used on all four corners with the appropriate orientation for a rectangular power domain.  "\fB-cornerCellListByCorner <corner_cells_name_per_corner>\fR" Specifies the corner cells to be used at different corners. This is applicable for ring only. This option is optional.  In an example of a rectangular power domain with four corners and two different corner cells, we name the cells: CORNER_cell1 and CORNER_cell2 using the option -cornerCelllist and then we map them to each corner as shown below:  addPowerSwitch -powerDomain PSO -ring \\  -globalSwitchCellName {{VDDISWITCH } \\  -globalFillerCellName {{FILLERCELL } \\  -specifySides {1 1 1 1 } \\  -globalOffset 4 \\  -cornercelllist { CORNER_cell1 CORNER_cell2 } \\  -cornerCellListByCorner { CORNER_cell1\\ CORNER_cell2 CORNER_cell1 CORNER_cell2 }\\ 
.... \\  "\fB-cornerOrientationList {<orientation_syntax>
...}\fR" Specifies cell orientations for the tool to use for each corner of switch ring, starting with Corner 0 (the lower left corner). List the orientations in a list, with the first orientation corresponding to the first side, the second orientation to the second side, and so on. If you do not specify this parameter, the software determines the corner cell orientations.   "\fB-cpfPowerSwitchRuleName <rule_name>\fR" Specify this option when there are multiple power switch rules specified for a power domain in CPF. By default, addPowerSwitch uses the first defined rule.   "\fB-deviceThresholdVolt <value_in_volts>\fR" Specifies the device threshold voltage for ramp up prototyping.   "\fB-distribute\fR" Distributes switches of different types as evenly as possible on a ring side. For example, if there are 40 available slots, and there are 20 switches and 20 fillers, the software will alternate switches and fillers in the available slots. Use this option together with -horizontalNumSwitch,  -verticalNumSwitch,  -leftNumSwitch,  -rightNumSwitch,  -topNumSwitch, or  -bottomNumSwitch.   "\fB-enableNetIn {listOfnets}\fR" Specifies the list of input nets that the software attaches to the enable input pins. The order in which you specify these nets determines the sequence in which nets are assigned to pins. Enable nets and pins are connected automatically if they reside at the same level in the hierarchy.  If you have already specified update_power_switch_rule  -enable_condition or create_power_domain -shutoff_condition in your CPF file, you do not need to specify this parameter. update_power_switch_rule   -enable_condition takes precedence over create_power_domain -shutoff_condition for enable net In connection. For automatic enable connection to work, you should also specify update_power_switch_rule -acknowledge_receiver info in CPF for enableNetOut connection. Otherwise you should provide enable net connections using -enableNetIn and   -enableNetOut options.  If you specify -enableNetIn, it will override create_power_domain -shutoff_condition.  "\fB-enableNetOut {<netBaseName> | {listOfNets}}\fR" Specifies the enable output nets that the software attaches to the enable output pins. The order in which you specify these nets determines the sequence in which nets are assigned to pins. If enable nets and pins reside at the same level in the hierarchy they are connected automatically. For the last switch of the ring, the -enablePinOut is tied to -enableNetOut.  If you have already specified update_power_switch_rule   -acknowledge_receiver in your CPF file, you do not need to specify this parameter. For automatic enable connection to work, you should also specify update_power_switch_rule   -enable_condition or create_power_domain   -shutoff_condition in the CPF file. For enableNetIn connection you should provide enable net connections using -enableNetIn and -enableNetOut options. You must specify <netBaseName> for columns or a list of nets for rings. Automatic enableNetOut connection works if there is only one enable net out after insertion.  "\fB -enablePinIn {listOfPins} \fR" Specifies the list of enable input pins of the buffers inside the switch cell. The order in which you specify these nets determines the sequence in which nets are assigned to pins. If enable nets and pins reside at the same level in the hierarchy they are connected automatically.The software ties the   -enablePinOut of the first switch cell to the  -enablePinIn of the next switch cell in the same ring: All the enable pin of the switch cells in the same column are daisy-chained together. For the first switch of the ring, the  -enablePinIn is tied to  -enableNetIn.   "\fB -enablePinOut {listOfPins} \fR" Specifies the list of enable output pin(s) of the buffer(s) inside the switch cell. The order in which you specify these pins is important because nets are assigned to pins sequentially. The software ties the -enablePinOut of the first switch cell to the  -enablePinIn of the next switch cell in the same column: All the enable pin of the switch cells in the same column are daisy-chained together. For the last switch of the column, the  -enablePinOut is tied to  -enableNetOut.   "\fB-endOffset <value>\fR" Places the last switch on every side of the power domain at the specified distance from the end of each side.  The side end is not necessarily determined by the power domain boundary. You can use -leftOffset, -rightOffset, -topOffset, -bottomOffset, -horizontalOffset, and/or -verticalOffset to determine the side end relative to the power domain boundary.  For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  Default: 0  "\fB-endOffsetBottom <value>\fR" Places the last switch on bottom side of the power domain at the specified distance from end of the side.  The side end is not necessarily determined by the power domain boundary. You can use -leftOffset, -rightOffset, and/or -verticalOffset to determine the side end relative to the power domain boundary.
.RS  "*" 2 If the value is positive, the software places the switch to the right of the end location, or to the left of the end location if -counterclockwise is specified.  "*" 2 If the value is negative, the software places the switch to the left of the end location, or to the right of the end location if -counterclockwise is specified.
.RE   For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  Default: 0  "\fB-endOffsetHoriztonal <value>\fR" Places the last switch on the horizontal side of the power domain at the specified distance from end of the side.  The side end is not necessarily determined by the power domain boundary. You can use -leftOffset,-rightOffset, and/or -verticalOffset to determine the side end relative to the power domain boundary.  For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  Default: 0  "\fB-endOffsetLeft <value>\fR" Places the last switch on the left side of the power domain at the specified distance from end of the side.  The side end is not necessarily determined by the power domain boundary. You can use -topOffset -bottomOffset and/or -horizontalOffset to determine the side end location relative to the power domain boundary.
.RS  "*" 2 If the value is positive, the software places the switch below the end location, or above the end location if -counterclockwise is specified.
.RE
.RS  "*" 2 If the value is negative, the software places the switch above the end location, or above the end location if -counterclockwise is specified.
.RE   For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  Default: 0  "\fB-endOffsetRight <value>\fR" Places the last switch on the right side of the power domain at the specified distance from end of the side.  The side end is not necessarily determined by the power domain boundary. You can use the -topOffset, -bottomOffset, or -horizontalOffset to determine the side end relative to the power domain boundary.
.RS  "*" 2 If the value is positive, the software places the switch above the end location, or below the end location if -counterclockwise is specified.
.RE
.RS  "*" 2 If the value is negative, the software places the switch below the end location, or below the end location if -counterclockwise is specified.
.RE   For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  Default: 0  "\fB-endOffsetTop <value>\fR" Places the last switch on the top side of the power switch ring at the specified distance from end of the side.  The side end is not necessarily determined by the power domain boundary. You can use -leftOffset, -rightOffset or -verticalOffset to determine the side end relative to the power domain boundary.
.RS  "*" 2 If the value is positive, the software places the switch to the left of the end location, or to the right of the end location if -counterclockwise is specified.
.RE
.RS  "*" 2 If the value is negative, the software places the switch to the right of the end location, or to the left of the end location if -counterclockwise is specified.
.RE   For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  Default: 0  "\fB-endOffsetVertical <value>\fR" Places the last switch on the vertical sides of the power switch ring at the specified distance from end of the side.  The side end is not necessarily determined by the power domain boundary. You can use -topOffset, -bottomOffset, and/or -horizontalOffset to determine to the side end relative to the power domain boundary.  For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  Default: 0  "\fB-fillerCellNameBottom <cell_syntax>\fR" Specifies the filler cell used for the bottom side(s) of the ring. You can specify a different filler cell for each side of the ring. This parameter is optional.  Default: The filler cell specified by -globalFillerCellName.  "\fB-fillerCellNameHorizontal <cell_syntax>\fR" Specifies the filler cell used for the horizontal side(s) of the ring. You can specify a different filler cell for each side of the ring. This parameter is optional.  Default: The filler cell specified by -globalFillerCellName.  "\fB-fillerCellNameLeft <cell_syntax>\fR" Specifies the filler cell used for the left side(s) of the ring. You can specify a different filler cell for each side of the ring. This parameter is optional.  Default: The filler cell specified by -globalFillerCellName.  "\fB-fillerCellNameRight <cell_syntax>\fR" Specifies the filler cell used for the right side(s) of the ring. You can specify a different filler cell for each side of the ring. This parameter is optional.  Default: The filler cell specified by -globalFillerCellName.  "\fB-fillerCellNameTop <cell_syntax>\fR" Specifies the filler cell used for the top side(s) of the ring. You can specify a different filler cell for each side of the ring. This parameter is optional.  Default: The filler cell specified by -globalFillerCellName.  "\fB-fillerCellNameVertical <cell_syntax>\fR" Specifies the filler cell used for the vertical side(s) of the ring. You can specify a different filler cell for each side of the ring. This parameter is optional.  Default: The filler cell specified by -globalFillerCellName.  "\fB-fillerCellSideList {<cell_syntax>
...}\fR" Specifies the filler cells to insert on each side of a power domain. The first member of the list indicates the first side relative to Corner 0, which is the lower left corner of the ring. If -counterclockwise is specified, the first side is counterclockwise from Corner 0.  The following example shows the filler cells specified for an eight-sided power switch ring:  -specifySideList {1 0 1 0 1 0 1 0}  -fillerCellSideList {cell1 cell1 cell2 cell2 cell3 cell3 cell4\\ cell4}  cell1 is used for the first side. You can then specify cell1 again to provide a valid cell type, even though there can be no cells on the second side.   Info: You must include a space between each item in the list.   You must specify a valid cell name for each side, even if no cells can be specified for a side.   The tools checks that the number of cells you specify is the same number you specified with -specifySideList, and issues an error message if it finds a discrepancy.   "\fB-fillGapWithFiller\fR" Forces filling of gap between ring-type power switches using the specified filler cell.   "\fB-firstInstanceName <instanceName>\fR" Specifies the instance name of an existing switch cell in the netlist to use as the first cell in the column or ring. Usually, there is at least one switch instantiated in a module (specified by -switchModuleInstance) in the netlist. The software creates a unique instance name for each switch inserted. This parameter is optional. If the netlist does not contain switches, then this parameter is invalid.   "\fB-forceOffset\fR" Forces the software to place ring switches at the exact offset you specify for all sides. Sides with unspecified offsets are forced to 0.0
.  When you specify any other offset without specifying -forceOffset, the tool places switches at the smallest distance that is greater than or equal to the specified offset for each side, in order to maintain a contiguous ring.  For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  Note: Using this parameter might result in gaps in the ring.  "\fB-globalBufferCellName <cell_syntax>\fR" Specifies the cell name of the buffer cell to insert in the power switch ring surrounding the specified power domain, or in the columns inside the power domain, if there are spaces available.   "\fB-globalFillerCellName <cell_syntax>\fR" Specifies the cell name of the filler cell to insert in the power switch ring surrounding the specified power domain, or in the columns inside the power domain, if there are spaces available.   "\fB-globalOffset <value>\fR" Offsets all sides of the power switch ring the specified distance from the power domain boundary. Specify the offset in m.  For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  Default: 0  "\fB-globalPattern <pattern_syntax>\fR" Specifies a pattern of cells to repeat either in the switch rings or switch columns. The pattern consists of a group of different types of cells in a specified order. In the ring style, you can use the -continuePattern parameter to continue the pattern around the corner, from one side of the ring to another.   "\fB-globalSwitchCellName <cellName>\fR" Specifies the cell name of the switch cell to insert in the power switch ring surrounding the specified power domain, or in the column inside the power domain. This parameter is required.   "\fB-ground {(<GND:GND1 GND2>...)...}\fR" Specifies a list of ground nets and pin connections. If -ground has multiple ground nets, the software uses the last one in the list for tie-hi/lo connections. For example, specify  -ground (VSS:gnd vss!) to indicate that the  gnd and  vss! pins of all the instances in a given power domain are connected to the  VSS net.   "\fB-horizontalNumSwitch <value>\fR" Specifies the number of switches to insert on the horizontal side(s) of the power domain.  Note: This parameter applies to power switch ring creation only.  Three scenarios can occur:
.RS  "*" 2 If the spaces available match the number specified, the software fills these spaces with switches.
.RE
.RS  "*" 2 If the number exceeds the spaces available, the software issues the following error message.
.RE
.RS  "*" 2 If the number is less than the spaces available, the tool inserts the switches, then inserts filler cells to fill the space.
.RE   This parameter is optional. See -leftNumSwitch, -rightNumSwitch, and -topNumSwitch.  "\fB-horizontalPattern <pattern_syntax>\fR" Specifies a pattern of cells to repeat on the horizontal side(s) of the power domain when switches are inserted. The pattern consists of a group of different types of cells in a specified order.   "\fB-horizontalOffset <value>\fR" Offsets the switch ring from the horizontal edge of the power domain. Specify the offset in m.  For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  Default: 0  "\fB-horizontalOrientation <orientation_syntax>\fR" Specifies the cell orientation for all horizontal side(s) of the power switch ring.   "\fB-horizontalSide [0|1]\fR" Inserts switches on all horizontal side(s) of a power domain. You cannot specify this parameter in conjunction with -verticalSide, -bottomSide, -topSide, -leftSide, or -rightSide.  Default: 1  "\fB-ignoreSoftBlockage\fR" With this option addPowerSwitch can insert power switch cells in areas with soft or partial blockages. By default,  addPowerSwitch does not add power switch cells in areas with any type of placement blockage: hard, soft, or partial.   "\fB-incremental\fR" Inserts switches to the power domain without removing the existing switches.  Default: Running the addPowerSwitch command removes the existing placed switches and inserts new switches.  "\fB-insideCornerCellList {<cellName>
...}\fR" Specifies a list of cells for the tool to choose for the inside corners of the power domain.  The following example specifies the corner cells any power switch ring:  -insideCornerCellList {cell1 cell2}  Note: You do not need to list a specific cell for a specific corner. The tool selects from the list you provide.  "\fB-instancePrefix <prefix>\fR" Adds prefix to power switch instances. The option applies to column and ring insertion.   "\fB-leftOffset <float>\fR" Specifies distance from the right edge outside of the power domain fence and the right side of the power switch ring. See-horizontalOffset, -verticalOffset, -rightOffset, -bottomOffset, and -topOffset.  Note: When you create a power domain, a minGap exists for this power domain, and the switches are inserted within this minGap. However, if the specified minGap is less than the switch dimension, then the tool automatically extends the minGap for this power domain.  For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide and see -bottomOffset, -rightOffset, -topOffset, -verticalOffset, and -horizontalOffset..  Default: 0   The switches abut the power domain fence if possible.  "\fB-leftNumSwitch <integer>\fR" Specifies the number of switches to insert on left side(s) of the power domain.  Three scenarios can occur:
.RS  "*" 2 If the spaces available match the number specified, then the software fills these spaces with switches.
.RE
.RS  "*" 2 If the number exceeds the spaces available, the software issues a warning message.
.RE
.RS  "*" 2 If the number is less than the spaces available, the tool inserts the switches, then inserts filler cells to fill the space.
.RE   This parameter is optional. See -bottomNumSwitch,-rightNumSwitch, and -topNumSwitch.  Default: f  "\fB-leftOrientation <orienation_syntax>\fR" Specifies the cell orientation for all left side(s) of the power switch ring.   "\fB-leftPattern <pattern_syntax>\fR" Defines a pattern for the left side(s) of the ring only. You can use this parameter with -bottomPattern,  -topPattern, and  -rightPattern.   "\fB-leftSide [0 | 1]\fR" Inserts switches on the left side(s) of the power domain. If you do not specify a side, the software creates a full power switch ring around the specified power domain. If you specify a side, the software inserts switches on that side. In this case, the tool sets -leftSide to 1 and sets the other sides to 0.  You can specify multiple sides and the software inserts switches only on the sides you specify. The tool sets the specified sides to 1 and sets the unspecified sides to 0.  Default: 1  "\fB-noFiller\fR" Suppresses the addition of filler cells in power switch rings.   "\fB-noMinGapAdjust\fR" Can be used when the user does not want to extend the minimum power domain gaps to form the power switch ring.   "\fB-noEnableChain\fR" Inserts and places power switches without adding enable signal chaining.   "\fB-numSwitches\fR" Defines total number switches to be added around a power domain. This is applicable to ring type insertion only.   "\fB-parallelEnable\fR" Connects a power switch's input pin in parallel style rather than daisy-chaining. You do not have to specify -enablePinOut or  -enableNetOut.   "\fB-power {(<VDD:VDD1 VDD2>...)...}\fR" Specifies a list of power nets and pin connections.  For example, specify -power (Vdd1:Vdd Pwr) (Vdd2:VDD vdd!) to indicate that the Vdd and Pwr pins of all the instances in a given power domain are connected to the Vdd1 net, and the VDD and vdd! pins are connected to the Vdd2 net.  If -power has multiple power nets, the software uses the last one in the list for tie-hi/lo connections. For example, if -power {(vdd1:VDD1)(vdd2:VDD2)} is specified, then the software uses net vdd2 for tie-hi connection.  Note: You must specify both -ground and -power to ensure that the instance being moved contains the correct (net:pin) connections in the new power domain.  "\fB-powerDomain <powerDomainName>\fR" Specifies the power domain that shuts off through the inserted power switches. Alternatively, you can use IDs and multipliers, as shown below:  addPowerSwitch -ring -powerDomain PD0 \\ -globalSwitchCellName {{switchCell_1 A} {switchCell_2 B}} \\ -globalPattern {A {B*3}}
..."  "\fB-perSideNumSwitches <value>\fR" Specifies the number of switches to use on all sides of a power switch ring.   "\fB-reportFile <filename>\fR" Writes switch instances and their corresponding input/output enable signal pin/net connections to the specified file name.   "\fB-rightOffset\fR" Specifies distance from the right edge outside of the power domain fence and the right side of the power switch ring. See-horizontalOffset, -verticalOffset, -leftOffset, -bottomOffset, and -topOffset.  Note: When you create a power domain, a minGap exists for this power domain, and the switches are inserted within this minGap. However, if the specified minGap is less than the switch dimension, then the tool automatically extends the minGap for this power domain.  For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  Default: 0  "\fB-r0Corner <corner_syntax>\fR" Specifies the side where the corner cell instance can be placed in the R0 orientation without rotation.
.RS  "*" 2 UL = Upper left  "*" 2 LL = Lower left  "*" 2 LR = Lower right  "*" 2 UR = Upper right
.RE   The orientation rotates the corner cell 90 degrees for each corner, proceeding counterclockwise.  Default: UL  The corner cell in the upper left position in the ring is placed with orientation R0.  Default orientations:  
.RS  "*" 2 UL = R0  "*" 2 LL = MX  "*" 2 LR = R180  "*" 2 UR = MY
.RE    "\fB-r0InsideCorner {LT | TR | RB | BL}\fR" Specifies the inside corner where to place the corner cell instance in the R0 orientation. Use this parameter for rectilinear switch rings containing inside corners.
.RS  "*" 2 LT = Corner of the left and top sides  "*" 2 TR = Corner of the top and right sides  "*" 2 RB = Corner of the right and bottom sides  "*" 2 BL = Corner of the bottom and left sides
.RE   Default: LT  The corner cell in the left top position in the ring is placed with the orientation R0.  
.RS  "*" 2 LT = R0  "*" 2 BL = MX  "*" 2 RB = R180  "*" 2 TR = MY
.RE    "\fB-r0Side {L | T | R | B}\fR" Specifies the side where the switch or filler instance can be placed in the R0 orientation without rotation. The command adjusts the orientation of the remaining sides so that the switches form a continuous ring. The orientation rotates 90 degrees for each side, proceeding counterclockwise.
.RS  "*" 2 L = Left side  "*" 2 T = Top side  "*" 2 R = Right side  "*" 2 B = Bottom side
.RE   The orientation rotates 90 degrees for each side, proceeding counterclockwise, unless -counterClockwise is specified.  Default: T  The switch and filler cells in the top row are placed with orientation R0.  Default orientations:  
.RS  "*" 2 T = R0  "*" 2 L = R90  "*" 2 B = R180  "*" 2 R = R270
.RE    "\fB-r0SideOrientation <orientation_syntax>\fR" Enables the software to rotate or mirror the switch instances on the R0 side. The software automatically adjusts the orientation of the other sides of the domain to form a continuous ring.   "\fB-ring\fR" Specifies ring style power switch insertion. Power switches are placed outside the power domain.   "\fB-rightNumSwitch <integer>\fR" Specifies the number of switches to insert on right side(s) of the power domain.  Three scenarios can occur:
.RS  "*" 2 If the spaces available match the number specified, then the software fills these spaces with switches.  "*" 2 If the number exceeds the spaces available, the software issues a warning message.  "*" 2 If the number is less than the spaces available, the tool inserts the switches, then inserts filler cells to fill the space.
.RE   Also, if you specify f instead of an integer, the tool automatically fills the right side with switches and filler cells.  This parameter is optional. See -bottomNumSwitch, -leftNumSwitch, and -topNumSwitch.  Default: f  "\fB-rightOrientation <orientation_syntax>\fR" Specifies the cell orientation for all right side(s) of the power switch ring.   "\fB-rightPattern <pattern_syntax>\fR" Defines a pattern for the right side(s) of the ring only. You must use this parameter with -bottomPattern,  -topPattern, and  -leftPattern.   "\fB-rightSide [0 | 1]\fR" Inserts switches on the right side(s) of the power domain. If you do not specify a side, the software creates a full power switch ring around the specified power domain. If you specify a side, the software inserts switches on that side. In this case, the tool sets -rightSide to 1 and sets other sides to 0.  You can specify multiple sides and the software inserts switches only on the sides you specify. The tool sets the specified sides to 1 and sets the unspecified sides to 0.  Default: 1  "\fB-sideEndOffsetList {<value>
...}\fR" Places the last switch at the specified distance from the end of the sides. Use this parameter with rectilinear power domains to specify a value for each side.  For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  Default: 0  "\fB-sideOffsetList {<value>
...}\fR" Lists the offset values representing the distance between the power domain fence boundary and each side of the power switch ring. Each value in the list corresponds to a side specified with -specifySideList.  The following example show that all sides of an eight-sided power domain can have switches:  -specifySideList {1 1 1 1 1 1 1 1}  The following example shows an offset of 8 m from side1, 8 m from side2, 8 m from side 3, 6 m from side 4, 3 m from side 5, 3 m from side 6, 3 m from side 7, and 6 m from side 8.  -sideOffsetList {8 8 8 6 3 3 3 6}  Note: When you create a power domain, a minGap exists for this power domain, and the switches are inserted within this minGap. However, if the specified minGap is less than the switch dimension, then the tool automatically extends the minGap for this power domain.  Info: You must include a space between each item in the list.  You must specify a valid cell name for each side, even if no cells can be specified for a side.  The tools checks that the number of cells you specify is the same number you specified with -specifySideList, and issues an error message if it finds a discrepancy.  For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  Default: 0   The switches abut the power domain fence if possible.  "\fB-sideOrientationList {<orientation_syntax>
...}\fR" Lists the orientations for cells in each side of the power switch ring. Each orientation in the list corresponds to a side specified  The following example shows which sides of an eight-sided power domain can have switches:  -specifySideList {1 1 1 1 1 1 1 1 1 }  Ring switches can be placed on any side.  The following example shows that cells in side 1 have orientation R90, R180 in side 3, R270 in side5, and R0 in side 7:  -sideOrientationList {R90 R90 R180 R180 R270 R270 R0 R0}  Info: You must include a space between each item in the list.You must specify a valid cell name for each side, even if no cells can be specified for a side.  The tools checks that the number of cells you specify is the same number you specified with -specifySideList, and issues an error message if it finds a discrepancy.   "\fB-sidePatternList {<pattern_syntax>
...}\fR" Specifies the cell pattern per side of a power switch ring. Each pattern in the list corresponds to a side specified with -specifySideList.  The following example shows which sides of an eight-sided power domain can have switches:  -specifySideList {1 0 1 0 1 0 1 0}  Ring switches can be placed at sides 1, 3, 5, and 7.  The following example shows that cells in side 1 have orientation R90, R180 in side 3, R270 in side5, and R0 in side 7:  -sidePatternList {{cell1 cell2 {cell3 * 6}} {cell1 cell2 {cell3 * 6}} {cell2 cell3 {cell4 * 6}} {cell2 cell3 {cell4 * 6}} {cell1 cell2 {cell3 * 6}} {cell1 cell2 {cell3 * 6}} {cell2 cell3 {cell4 * 6}}{cell2 cell3 {cell4 * 6}}  Info: You must include a space between each item in the list.  You must include a valid pattern for each side, regardless of whether the side has any switches.   The tools checks that the number of cells you specify is the same number you specified with -specifySideList, and issues an error message if it finds a discrepancy.  "\fB-startOffset <value>\fR" Places the first cell on every side of the power domain at the specified distance from the beginning of each side.  The beginning of each side is not necessarily determined by the power domain boundary. You can use -leftOffset, -rightOffset, -topOffset, -bottomOffset, -horizontalOffset, and/or -verticalOffset to determine the beginning of each side relative to the power domain boundary.  For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  Default: 0  "\fB-strictNegativeOffset\fR" Defines the offset from the domain boundary to the power switch edge facing the corresponding power domain boundary. See diagram for more details.  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   "\fB-sideStartOffsetList {<value>
...}\fR" Places the first cell at the specified distance from the starting location of the sides. Use this parameter with rectilinear power domains to specify a value for each side.  For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  Default: 0  "\fB-simplePrefix\fR" Allows user to create a power switch instance name with simple numbers. By default power switch instance names are created in the format:  pso_<PDname>_<SwitchCellName>_<X_andY_location>_<Sequen><ceNumber>  This option can be used with -instancePrefix <prefix>  Example :  addPowerSwitch -column
...\\  -instancePrefix strongPsw_ -simplePrefix 1  With this command run, the created instance name will be: strongPsw_1, strongPsw_2
..  "\fB-specifySideList {0|1
...}\fR" Specifies the sides of a power switch ring that can and cannot contain ring switches. In the list, 1 indicates that the side can contain ring switches, and 0 indicates that the side cannot contain ring switches. The list must contain either 0 or 1 for each side of the shape. The first member of the list indicates the first side relative to Corner 0, which is the lower left corner of the ring. If counterclockwise is specified, the first side is counterclockwise from Corner 0.  The following example shows which sides of an eight-sided power domain can have sw itches:  -specifySideList {1 0 1 0 1 0 1 0}  Ring switches can be inserted at sides 1, 3, 5, and 7.  Note: You must include a space between each item in the list.  "\fB-startEnableChainAtCorner <integer> or <corner_syntax>\fR" Specifies the corner where the switch ring insertion begins. This parameter can accept corner syntax or an integer, which accommodates more than four corners in a rectilinear power domain. The corner numbering starts with corner 0 at the lower left corner, and proceeds clockwise around the switch ring (unless -counterclockwise is specified). For example,  -startEnableChainAtCorner 1 starts the enable chain at the first corner found in a clockwise direction from corner 0.   "\fB-startOffsetBottom <value>\fR" Places the first cell on the bottom side of the power domain at the specified distance from the beginning location of the side.The beginning location of the side is not necessarily determined by the power domain boundary. You can use -leftOffset, -rightOffset or -verticalOffset to determine the beginning location of the side relative to the power domain boundary.
.RS  "*" 2 If the value is positive, the software places the cell to the left of the starting location, or to the right of the starting location if -counterclockwise is specified.
.RE
.RS  "*" 2 If the value is negative, the software places the cell to the right of the starting location, or to the left of the starting location if -counterclockwise is specified.
.RE   For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  Default: 0  "\fB-startOffsetHorizontal <value>\fR" Places the first cell on the horizontal side of the power domain at the specified distance from the beginning location of the sides.  The beginning location of the side is not necessarily determined by the power domain boundary. You can use -leftOffset, -rightOffset or -verticalOffset to determine the beginning location of the side relative to the power domain boundary.
.RS  "*" 2 If the value is positive, the software places the cell to the left of the starting location, or to the right of the starting location if -counterclockwise is specified.
.RE
.RS  "*" 2 If the value is negative, the software places the cell to the right of the starting location, or to the left of the starting location if -counterclockwise is specified.
.RE   For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the Innovus User Guide.  Default: 0  "\fB-startOffsetLeft <value>\fR" Places the first cell on the left side of the power domain at the specified distance from the beginning location of the side.  The beginning location of the side is not necessarily determined by the power domain boundary. You can use -bottomOffset, -topOffset, or-horizontalOffset to determine the beginning location of the side relative to the power domain boundary.
.RS  "*" 2 If the value is positive, the software places the cell above the starting location, or below the starting location if -counterclockwise is specified.
.RE
.RS  "*" 2 If the value is negative, the software places the cell below the starting location, or above the starting location if -counterclockwise is specified.
.RE   For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  Default: 0  "\fB-startOffsetRight <value>\fR" Places the first cell on the right side of the power domain at the specified distance from the beginning location of the side.  The beginning location of the side is not necessarily determined by the power domain boundary. You can use -topOffset, -bottomOffset, or -horizontalOffset to determine the beginning location of the side relative to the power domain boundary.
.RS  "*" 2 If the value is positive, the software places the first cell below the beginning location of the side, or above the beginning location of the side if -counterclockwise is specified.
.RE
.RS  "*" 2 If the value is negative, the software places the first cell above the beginning location of the side, or below the beginning location of the side if -counterclockwise is specified.
.RE   For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  Default: 0  "\fB-startOffsetTop <value>\fR" Places the first cell at the specified distance from the starting location of the top offset.  Use this parameter with -leftOffset, -rightOffset, or -verticalOffset to determine the beginning location of the side.
.RS  "*" 2 If the value is positive, the software places the first cell to the right of the beginning location of the side, or to the left of the beginning location of the side if -counterclockwise is specified.
.RE
.RS  "*" 2 If the value is negative, the software places the first cell to the left of the beginning location of the side, or to the right of the beginning location of the side if -counterclockwise is specified.
.RE   For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  Default: 0  "\fB-startOffsetVertical <value>\fR" Places the first cell on the vertical sides of the power switch ring at the specified distance from beginning location of the vertical sides.  The beginning location of the side is not necessarily determined by the power domain boundary. You can use -topOffset, -bottomOffset, or -horizontalOffset to determine the beginning location of the side relative to the power domain boundary.  For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  Default: 0  "\fB-switchCellNameBottom <cell_syntax>\fR" Specifies a different switch cell for the bottom side(s) of the power switch ring.Default: The switch cell specified by -globalSwitchCellName.  "\fB-switchCellNameHorizontal <cell_syntax>\fR" Specifies a different switch cell for the horizontal side(s) of a power switch ring.  Default: The switch cell specified by -globalSwitchCellName.  "\fB-switchCellNameLeft <cell_syntax>\fR" Specifies a different switch cell for the left side(s) of the power switch ring.  Default: The switch cell specified by -globalSwitchCellName.  "\fB-switchCellNameRight <cell_syntax>\fR" Specifies a different switch cell for the right side(s) of the power switch ring.  Default: The switch cell specified by -globalSwitchCellName.  "\fB-switchCellNameTop <cell_syntax>\fR" Specifies a different switch cell for the top side(s) of the power switch ring.  Default: The switch cell specified by -globalSwitchCellName.  "\fB-topSwitchCell <float>\fR" Specifies a different switch cell for the top side(s) of the power switch ring.  Default: The switch cell specified by -globalSwitchCellName.  "\fB-switchCellNameVertical <cell_syntax>\fR" Specifies a different switch cell for the vertical side(s) of a power switch ring.  Default: The switch cell specified by -globalSwitchCellName.  "\fB-switchCellSidesList {<cell_syntax>
...}\fR" Specifies the switch cells to insert on each side of a power domain. The first member of the list indicates the first side relative to Corner 0, which is the lower left corner of the ring. If -counterclockwise is specified, the first side is counterclockwise from Corner 0.  The following example shows the switch cells specified for an eight-sided power switch ring:  -specifySideList {1 0 1 0 1 0 1 0}  -switchCellSideList {cell1 cell1 cell2 cell2 cell3 \\ cell3 cell4 cell4}  cell1 is used for the first side. You can then specify cell1 again to provide a valid cell type, even though there can be no cells on the second side.  Info: You must include a space between each item in the list.  You must specify a valid cell name for each side, even if no cells can be specified for a side.  The tools checks that the number of cells you specify is the same number you specified with -specifySideList, and issues an error message if it finds a discrepancy.  "\fB-switchModuleInstance <instanceName>\fR" When this parameter is specified, all the switches are instantiated in the module instance specified. When not specified, the switch instances are inserted at the top level. This parameter is optional.   "\fB-switchPitch\fR" Specifies the global switch pitch value. You cannot use this parameter with the -switchPitch parameters (left, right, top, bottom, horizontal, and vertical).  For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  Default: 0  "\fB-switchPitchBottom <value>\fR" Places the a switch the specified distance from the right edge of the previous cell on the bottom side of the power domain. If -counterclockwise is specified, the distance is measured from the left edge of the previous cell.  For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  Default: 0  "\fB-switchPitchHorizontal <value>\fR" Places the a switch the specified distance from the left edge of the previous cell on the horizontal side of the power domain. If -counterclockwise is specified, the distance is measured from the right edge of the previous cell.  For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  Default: 0  "\fB-switchPitchLeft <value>\fR" Places the a switch the specified distance from the bottom edge of the previous cell on the left side of the power domain. If -counterclockwise is specified, the distance is measured from the top edge of the previous cell.  For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  Default: 0  "\fB-switchPitchRight <value>\fR" Places the a switch the specified distance from the top edge of the previous cell on the right side of the power domain. If -counterclockwise is specified, the distance is measured from the bottom edge of the previous cell.  For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  Default: 0  "\fB-switchPitchTop <value>\fR" Places the a switch the specified distance from the left edge of the previous cell on the top side of the power domain. If -counterclockwise is specified, the distance is measured from the right edge of the previous cell. You can use this parameter with -switchPitch*, -endOffset*, and -*Offset parameters.  For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  Default: 0  "\fB-switchPitchSideList {<value>
...}\fR" Places the a switch the specified distance from the edge of the previous cell on the sides specified in the list. Use this parameter for rectilinear power domains. You can use this parameter with -switchPitch*, -endOffset*, and -*Offset parameters.  For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  Default: 0  "\fB-switchPitchVertical <value>\fR" Places the a switch the specified distance from the bottom edge of the previous cell on the vertical sides. If -counterclockwise is specified, the distance is measured from the top edge of the previous cell. You can use this parameter with -switchPitch*, -endOffset*, and -*Offset parameters.  For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  Default: 0  "\fB-topOffset <float>\fR" Specifies the minimum offset from the top edge outside of the power domain fence boundary where the software can insert switches. See -bottomOffset, -rightOffset, and -leftOffset.  Note: When you create a power domain, a minGap exists for this power domain, and the switches are inserted within this minGap. However, if the specified minGap is less than the switch dimension, then the tool automatically extends the minGap for this power domain.  For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  Default: 0   The switches abut the power domain fence if possible. Otherwise, the switches are placed as close as possible to the power domain.  "\fB-topNumSwitch <integer>\fR" Specifies the number of switches to insert on the top side(s) of the power domain.  Note: This parameter applies to power switch ring creation only.  Three scenarios can occur:
.RS  "*" 2 If the spaces available match the number specified, then the software fills these spaces with switches.
.RE
.RS  "*" 2 If the number exceeds the spaces available, the software issues a warning message.
.RE
.RS  "*" 2 If the number is less than the spaces available, the tool inserts the switches, then inserts filler cells to fill the space.
.RE   Also, if you specify f instead of an integer, the tool automatically fills the top side with switches and filler cells.  This parameter is optional. See -horizontalNumSwitch, -verticalNumSwitch, -bottomNumSwitch,-leftNumSwitch, and -rightNumSwitch.  Default: f  "\fB-topOrientation <orientation_syntax>\fR" Specifies the cell orientation for all top side(s) of the power switch ring.   "\fB-topPattern <pattern_syntax>\fR" Defines a pattern for the top side(s) of the ring only. You must use this parameter with -horizontalPattern,  -verticalPattern,  -bottomPattern,  -leftPattern, and  -rightPattern.  "\fB-topSide [0 | 1]\fR" Inserts switches on the top side(s) of the power domain. If you do not specify a side, the software creates a full power switch ring around the specified power domain. If you specify a side, the software inserts switches on that side. In this case, the tool sets -topSide to 1 and sets the other sides to 0.  You can specify multiple sides and the software inserts switches only on the sides you specify. The tool sets the specified sides to 1 and sets the unspecified sides to 0.  Default: 1  "\fB-totalLeakagePower <value_in_watts>\fR" Specifies the total leakage power of the power domain before switches are added.   "\fB-totalNumberPatterns <number_of_patterns>\fR" Adds the defined number of patterns around a power domain in a ring-type insertion. The pattern type for the insertion can be defined by the option -globalPattern.  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   Example:  addPowerSwitch -ring -powerDomain MPY -specifySideList {1 1 1\\ 1 1 1 } \\  -enableNetIn swcontrol_1 -enableNetIn swack_1 \\  -globalSwitchCellName {{CDN_RING_SW1 s} {CDN_RING_SW2 b}} \\  -globalFillerCellName {{CDN_RING_FILLER f}} \\  -cornerCellList CDN_RING_CORNER_UL \\  -insideCornerCellList CDN_RING_CORNER_InCell \\  -switchModuleInstance DTMF_INST_3 \\  -enablePinIn A0 -enablePinOut Z0 -sideOffsetList { 3 3 3 3 3 \\ 3 } \\  -globalPattern { {s}*5 {b} } \\  -distributePattern 1 \\   -continuePattern 1 \\  -totalNumberPatterns 19 \\  -reportFile MPY.rpt  "\fB-vertex <{x1 y1 x2 y1 x2 y2 x3 y2 x3 y3 x1 y3
... xn yn}>\fR" Allows you to insert power switches in ring style around the power domain by specifying vertex locations around the power domain. In the ring the cells are towards the outer side of the edge.  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.) addPowerSwitch \\  -ring -vertex \\   <{478.90 461.50 478.90 511.70 444.50 511.70 \\> <444.50 578.70 535.40 578.70 535.40 461.50 \\> <478.90 461.50}>  -powerDomain  <TDSPCore>
...  "\fB-verticalNumSwitch <value>\fR" Specifies the number of switches to insert on all vertical side(s) of the power domain.  Three scenarios can occur:
.RS  "*" 2 If the spaces available match the number specified, the software fills these spaces with switches.
.RE
.RS  "*" 2 If the number exceeds the spaces available, the software issues the following error message.
.RE
.RS  "*" 2 If the number is less than the spaces available, the tool inserts the switches, then inserts filler cells to fill the space.
.RE   Also, if you specify f instead of an integer, the tool automatically fills the bottom side with switches and filler cells.  This parameter is optional. See -leftNumSwitch, -rightNumSwitch, and -topNumSwitch.  Default: f  "\fB-verticalOffset <value>\fR" Offsets the switch ring from the vertical edge of the power domain. Specify the offset in m.  For more information, see "Using Pitch Control and Offsets" in the Low Power Design chapter of the User Guide.  Default: 0  "\fB-verticalOrientation <orientation_syntax>\fR" Specifies the cell orientation for all vertical side(s) of the power switch ring.   "\fB-verticalPattern <pattern_syntax>\fR" Specifies a pattern of cells to repeat on all vertical side(s) of the power domain. The pattern consists of a group of different types of cells in a specified order.   "\fB-verticalSide [0|1]\fR" Inserts ring switches on all vertical side(s) of a power domain.  Default: 1 
.SH Related Information
.RS  "*" 2 deletePowerSwitch  "*" 2 exportPowerSwitch  "*" 2 importPowerSwitch  "*" 2 movePowerSwitch  "*" 2 rechainPowerSwitch  "*" 2 replacePowerSwitch  "*" 2 verifyPowerSwitch  "*" 2 Low Power Design chapter in the Innovus User Guide
.RE
.P
