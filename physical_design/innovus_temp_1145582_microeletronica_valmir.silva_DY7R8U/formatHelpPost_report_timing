.nf
.P Product Version     22.14    Cadence Design Systems, Inc. 
.fi
.TH report_timing  22.14 "Fri Oct 06 02:12:27 2023" 
.SH Name \fBreport_timing\fR
.SH Syntax \fBreport_timing\fR  [-help]  [-analysis_summary_csv_extended_file <<string>>]   [-analysis_summary_csv_file <<string>>]  [-analysis_summary_file <<string>>]  [-check_clocks]  [-check_type {setup hold clock_gating_setup clock_gating_hold clock_gating_pulse_width data_setup data_hold recovery removal pulse_width clock_period clock_separation skew no_change_setup no_change_hold}]  [-debug {unconstrained | time_borrow | cppr_point}]  [-delay_limit <float>]   [-derate_summary]  [-gui]  [-format <column_list>]   [-hpin]   [-max_slack <float>]   [-min_slack <float>]  [-net]   [-path_exceptions {applied ignored all}]   [-path_group <groupname_list>]  [-path_type {end summary full full_clock end_slack_only summary_slack_only}]  [-retime {aocv path_slew_propagation aocv_path_slew_propagation}]  [-retime_format {manual | retime_compare | retime_replace}]  [-retime_mode {path exhaustive}]  [-skip_io_paths]   [-unique_pins]   [-view <viewName>]  [-worst_rc_corner]   [> <filename[.gz]>]   [>> <filename[.gz]>]   [-late | -early]   [-rise | -fall]   [-begin_end_pair | [[ -max_paths <integer>]   [-nworst <integer>]]]   [-unconstrained | -point_to_point]   [-collection | -machine_readable | -tcl_list]   [-not_through <object_list> | -not_rise_through <object_list> | -not_fall_through <object_list>]   [[-from <pin_list> | -from_rise <pin_list> | -from_fall <pin_list>]   [-clock_from <clk_signame_list> [-edge_from {lead trail}]]   [-through <pin_list> | -through_rise <pin_list> | -through_fall <pin_list>]   [-to <pin_list> | -to_rise <pin_list> | -to_fall <pin_list>]   [-clock_to <clk_signame_list> [-edge_to {lead trail}]]] 
.P Generates a timing report that provides information about the various paths in the design.
.P The reports typically contain data on the delay through the entire path. The start node and the end node of each path is identified.
.P The timing report contains the following information:
.RS  "*" 2 The slack times of the arriving signal at the end node
.RE
.RS  "*" 2 The start node
.RE
.RS  "*" 2 The associated transitions
.RE
.RS  "*" 2 The signal required times and the actual signal arrival times
.RE
.RS  "*" 2 Summary of propagated vs ideal status of launching and capturing clocks
.RE
.RS  "*" 2 Any phase shifts applied when evaluating timing checks
.RE
.RS  "*" 2 Any CPPR values applied to timing check evaluation
.RE
.P The report_timing command output accomadates both the instance pin names and net names in the same column. Since both instance pin names and net names can be long, to save screen space alternating instance pin and net names (depending on whether the row displays gate delay or net delay) are reported in a single column.
.P When the timing_report_timing_header_detail_info timing global variable is set to extended, the software generates timing reports with additional header information, that includes the following details:
.RS  "*" 2 The analysis mode - best case worst case or on chip variation
.RE
.RS  "*" 2 The active views (displayed only in MMMC mode)
.RE
.RS  "*" 2 The clock reconvergence pessimism (CPPR)
.RE
.RS  "*" 2 The latch slack mode
.RE
.RS  "*" 2 The specified clock propagation value
.RE
.RS  "*" 2 The delay calculation
.RE
.RS  "*" 2 The specified delay calculation engine
.RE
.P When timing_report_group_based_mode global variable is set to true, paths are grouped by clock domain. In this mode, the report_timing command will have the following four types of groups:
.RS  "*" 2 Clock gating group: This is an internal group. This group reports the clock gating check type paths.
.RE
.RS  "*" 2 Asynchronous group: This is also an internal group and reports the asynchronous check type paths.  "*" 2 Groups for all the clocks in the design: These are also internal groups, classified on the basis of each reference clock. Paths belonging to each reference clock are reported separately under each clock name's group. These groups do not honor the clock gating/asynchronous check types. Suppose there are three clocks C1, C2, and C3 in the design, then three groups will be reported for each of these clocks. The endpoint sharing the same reference clock will be part of the same group. In case the endpoint belongs to multiple groups then it will be reported separately in each group.
.RE
.RS  "*" 2 Default group: This is an internal group - for combinational max delay or min delay paths.
.RE
.RS  "*" 2 User-Defined Groups: These are user-defined path groups. These are created by users with single or multiple constraints. These groups honor all the check types. These groups are now reported by default.
.RE
.P By default, the timing_report_group_based_mode global variable is set to false.
.P Note: The global does not honor user-defined path groups so the paths will still be grouped by different clocks.
.P In this mode, the following commands will have the same behavior and can be used interchangeably:
.P report_timing -path_group <Clock_Name>
.P report_timing -clock_to <Clock_Name>
.P The report_timing command supports multi-threaded reporting. You can make the following settings to enable multi-threaded reporting:
.P setMultiCpuUsage -localCpu <number_of_CPU>
.P set_table_style -no_frame_fix_width
.P Note: When timing_allow_input_delay_on_clock_source global variable is enabled and the set_input_delay command is applied to a clock input, the specified delay value will be considered as the source clock latency for clock paths and as regular data path arrival time for clock source paths.
.P This page provides the following report_timing details:
.P 
.SH Parameters   "\fB{> | >>} <filename>\fR" When specified with >, writes the report to the specified file name. If the file already exists, the software overwrites it.  When specified with >>, writes the report to the specified file name. If the file already exists, the software concatenates the report to the end of the file.  The filename parameter must be the last argument in the list. The filename and -tcl_list parameters are mutually exclusive; you cannot specify them together.  Note: To write a compressed report, add the
.gz extension to the file name.  Default: Report is displayed on standard output without being saved.  Note: The last argument specified in the report_timing command is not considered a filename.  "\fB-analysis_summary_csv_extended_file <<string>>  \fR" Generates the CSV file to be used for merging.   "\fB-analysis_summary_csv_file <<string>>\fR" Generates the analysis summary CSV file.   "\fB-analysis_summary_file <<string>>\fR" Generates the analysis summary file.   "\fB-begin_end_pair\fR" Reports all violating paths between unique source and target register pairs. To report other paths, specify this parameter with the -max_slack parameter.  Paths are not sorted by slack; instead, paths with the same source pins are reported adjacent to each other.  When specified with the -from, -through, or -to parameters, the software only reports the unique register pair paths that match the path description.  Note: You cannot specify this parameter with the -max_paths, -nworst, -unique_pins, or -min_slack parameters.  The report_timing -begin_end_pair parameter will always report the paths grouped by path_groups irrespective of timing_report_group_based_mode global variable setting.  "\fB-check_clocks\fR" Generates reports based on timing paths on the clock network instead of the standard timing to data endpoints. This report includes clock paths that end at the reference end of a check or a clock gating end point.  Default: Data paths and all the other clock paths (for example, a clock path ending at a D pin of a register) are reported.  "\fB-check_type  <check_type>\fR" Reports only the paths that end at the specified timing check.  The following check types can be reported when the software is in setup analysis mode: setup, skew, pulse_width, clock_period, clock_gating_setup, clock_gating_pulse_width, data_setup, recovery, clock_separation, and no_change_setup.  The following check types can be reported when the software is in hold analysis mode: hold, clock_gating_hold, data_hold, removal, and no_change_hold.  If the software is in simultaneous setup and hold analysis mode, all of the check types listed above can be reported.  By default, the following checks are reported:
.RS  "*" 2 setup  "*" 2 hold  "*" 2 clock_gating_setup  "*" 2 clock_gating_hold  "*" 2 data_setup  "*" 2 data_hold  "*" 2 recovery  "*" 2 removal  "*" 2 no_change_setup
.RE
.RS  "*" 2 no_change_hold
.RE   You can use the -check_type parameter to specify the following clock style checks:
.RS  "*" 2 pulse_width  "*" 2 clock_gating_pulse_width  "*" 2 clock_period  "*" 2 Skew  "*" 2 clock_separation
.RE   Do not use this parameter with the -unconstrained, -early, or -late parameters.  Note: The report_timing command does not perform skew checks by default.  "\fB-clock_from  <clk_signame_list>\fR" Generates reports based on source clock waveform(s). Reports only those paths whose source clocks are the clock signals in clk_signame_list.  "\fB-clock_to  <clk_signame_list>\fR" Generates reports based on target clock waveform(s). Reports only those paths whose target clocks are the clock signals in clk_signame_list.  "\fB-collection\fR" Returns a collection of timing paths. This is useful for performing Tcl queries on selected timing reports.  To generate a collection of paths analyzed by Path Based Analysis (PBA), you can use the -retime parameter.  Note : This parameter is not supported in DMMMC mode.  "\fB-debug {unconstrained | time_borrow | cppr_point}\fR" You can specify the following option for debugging:
.RS  "*" 2 unconstrained: Determines the reasons for a path to be unconstrained. The report output will list all the applicable arcs/constraints that could not constrain the paths, along with the reasons.  "*" 2 time_borrow: Reports time borrowing calculations. Time borrowing is the amount of time borrowed by a previous logic.  "*" 2 cppr_point: Reports the CPPR point information for the reported paths.
.RE   "\fB-delay_limit <float>\fR" Specifies the path delay limit for unconstrained paths (-unconstrained option).  For early paths (-early option), reports only those paths with path delay less than the delay limit. For late paths (-late option) reports only those paths with path delay more than the delay limit.  Note: The -delay_limit option only can be used in conjunction with the -unconstrained option.  "\fB-derate_summary\fR" Generates an AOCV derating summary table for the launch and capture paths, in addition to the timing report.  "\fB-early | -late\fR" Generates the timing report for early paths (hold checks) or late paths (setup checks).  Default: -late  Note: If you specify a check, setup or hold, using the set_analysis_mode command, the report_timing command reports that check by default.  "\fB-edge_from {lead | trail}\fR" Generates reports based on source clock edge, either leading or trailing.  Note: The -edge_from parameter only can be used in conjunction with the -clock_from parameter.  Default: Generates reports based on both source clock edges  "\fB-edge_to {lead | trail}\fR" Generates reports based on the target clock edge, either leading or trailing.  Note: The -edge_to parameter only can be used in conjunction with the -clock_to parameter.  Default: Generates reports based on both target clock edges  "\fB-format <column_list>\fR" Formats the report according to the column_list. The column_list specifies which columns to display in the timing report and the order in which they appear.  You can use the -format parameter to customize the reports to your needs by requesting the exact fields in which you have an interest. The valid format columns are:  adjustment, abs_delay_err, abs_slew_err, annotation, aocv_adj_stages, aocv_derate, aocv_weight, arc, arrival, arrival_mean, arrival_sigma, cell, delay, delay_mean, delay_sigma, direction, edge, fanin, fanout, flags, hpin, incr_delay, instance, instance_location, latch_window, load, module, net, pct_delay_err, pct_slew_err, phase, phys_info, pin, pin_load, pin_location, power_domain, required, retime_delay, retime_delay_mean, retime_delay_sigma, retime_slew, retime_slew_mean, retime_slew_sigma, stage_count, slew, slew_mean, slew_sigma, socv_derate, spice_arrival, spice_delay, spice_slew, stolen, timing_point, total_derate, user_derate, voltage, when_cond, wire_load, wlmodel  For more details on the 'flags' column, refer to the section on flagsUse of Informational Flags.  For example:  -format {hpin cell delay required arrival required edge}  See TableOptionsTable for a list of valid options.  The default net format (with -net option) for the full path is:   {hpin edge net cell delay arrival required}.  If the -unconstrained option is specified, the required column is not displayed.  The adjustment column is automatically added to the timing report. To disable this feature you can set the report_timing_default_adjustment_column global variable to false.  You can also use a combination of the -format and -tcl_list parameters to integrate the timing reports into your Tcl scripts. You can use the -from parameter to limit the number of paths reported, and to find specific paths in the design.  The -format option cannot be used with the -path_type end or -path_type summary options.  You can change the re-timing columns by using the timing_report_retime_formatting_modeglobal variable.  "\fB-gui\fR" Displays the timing report in a GUI window.   "\fB{-from | -from_rise | -from_fall} <pin_list>\fR" Reports paths starting from the object(s) specified in the <pin_list>. The supported objects are pins and ports.  Using -from_rise (or -from_fall) specifies that the rising (or falling) edge of the signals on the pins/ports in the <pin_list>are the start of the paths.  You can use this option with the -through and -to parameters for specifying particular paths in the design.  Note : These parameters do not allow clock objects. You can use the  -clock_from  and  -clock_to  parameters to reference clock waveforms.  "\fB-hpin  \fR" Prints all hierarchical crossings of an arc under hpin column in report_timing table.  "\fB-machine_readable\fR" Generates detailed timing report in machine-readable format. This report is used for debugging timing results using the timing debug feature.  "\fB-max_paths <integer>\fR" Reports the specified number of worst paths in the design, with maximum of nworst (-nworst) paths to any single endpoint (default 1).  In case of group based mode (when timing_report_group_based_mode is set to true), the -max_paths parameter specifies the number of worst paths reported per clock group.  Default: 1  "\fB-max_slack <float>\fR" Reports only those paths with slack less than the value of the float.  The -max_slack option limits the report to paths that fall into the specified range. A positive slack value indicates that timing was met. A negative value for slack indicates a timing violation.  The -max_slack option cannot be used with the -unconstrained option.  "\fB-min_slack <float>\fR" Reports only those paths whose slack is greater than the value of float.  The -min_slack option cannot be used with the -unconstrained option.  You can generate a timing report showing paths with slack greater than the specified slack by using the -max_paths option. For example, to report all paths with slack greater than 2ns, you can issue the following command:  min_slack 2.0 -max_paths 1000  In this case the maximum number of paths reported will be 1000.  When the -min_slack parameter is specified, the total numbers of paths processed will be as determined by the max_paths/nworst settings and only those paths satisfying the -min_slack criteria will be reported. The software will not process paths beyond the max_paths/nworst limit to find other paths satisfying the -min_slack limit.  In the below diagram, if -min_slack is 0 and -max_paths 4 -nworst 2 is specified, then only 3 paths will be reported; path with slack value of -1 will be ignored. Here, even if there is another path with slack that is greater than or equal to 2, then it will not be reported because worst max_paths have been processed.  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   "\fB-net\fR" Adds a row for the net arc. This parameter also separates the cell delay from the wire delay.  Default: The net arc is not shown, and the net delay is added to the following delay.  Note: The report_timing -net command displays the net delays separate from the cell delays. However, the net delay is sometimes shown as 0.0.To get the net delays to show up, increase the report precision using the following global:  set_global report_precision 5  "\fB{-not_through | -not_rise_through | -not_fall_through} <object_list>\fR" -not_through: Reports paths that do not traverse through the specified nets, ports, or pins of a cell.  By default the parameter will be ignored when an object has already been specified. In this case the parameter shows the following behavior:
.RS  "*" 2 If a collection of all the input ports has been specified (using the all_inputs command), then the report will show paths to the inout part, and paths starting from the internal part of inout will be excluded.
.RE
.RS  "*" 2 If a collection of all output ports has been specified (using the all_outputs command), then the report will show paths starting from the internal part of inout, and paths ending at inout part will be excluded.
.RE
.RS  "*" 2 If any other collection (not specified using the all_inputs and all_outputs commands) is specified, then paths to both the parts will not be reported.
.RE  -not_rise_through: Excludes paths with rise transition. -not_fall_through: Excludes paths with fall transition.  "\fB-nworst <integer>\fR" Specifies the maximum number of paths which can be reported for a particular endpoint (the total number of paths reported is specified by the -max_paths parameter).  In case of group based mode (when timing_report_group_based_modeglobal variableis set to true), the -nworst parameter specifies the maximum number of paths for a particular endpoint per clock group.  You can use the -nworst option to report all the checks at an endpoint or use the -check_type option to report a specific check.  Default: 1  "\fB-path_exceptions {applied | ignored | all}\fR" Includes information of path exceptions applied and considered for the reported path.  If multiple from, through, or to pins are specfied, the exception report for that path will show only those pins that are part of the current path.  Note: You cannot use this parameter with the following report_timing parameters:
.RS  "*" 2 -point_to_point
.RE
.RS  "*" 2 -collection
.RE
.RS  "*" 2 -path_type end | end_slack_only | summary | summary_slack_only
.RE
.RS  "*" 2 -tcl_list
.RE   In addition, you cannot use this parameter with block-based SSTA.  Note: If a path is already unconstrained, then all further path exceptions applied on that particular path will be reported as ignored exceptions.  The -path_exception parameter also reports -start/-end options with multi-cycle paths. Without start or end specification, by default, the setup check is relative to the end clock and the hold check is relative to the start clock. The report_timing -path_exception all command will report all the non-default -start/-end specifications. applied: Reports the honored exception on the reported path. ignored: Reports the ignored exceptions on the reported path. all: Reports both applied and ignored set of exceptions on the reported.  Note: Analyzing all the exceptions for a path will cause increase in runtime.  "\fB-path_group  <groupname_list>\fR" Reports only paths contained in the groups specified in groupname_list.  Report paths belonging to the default path group by using -path_group default. The paths that do not belong to any user-specified path group belong to the default path group named default.  In group-based mode, the internal groups - clock gating, clock names, asynchronous - and user defined path groups can be selected using the -path_group parameter.  "\fB-path_type {end | summary | full | full_clock | end_slack_only | summary_slack_only}\fR" The path_type option lets you choose the format of the report by path type. The default format, if the -path_type option is not specified is full.  You can choose one of the following options:
.RS  "*" 2 end: Generates an end point report for each path consisting of an endpoint, cause, slack, arrival time, required time, and phase. This option generates a very fast report. The -format option does not have any impact on this report format.  "*" 2 summary: Generates a summary report for each path consisting of a start point, endpoint, cause, slack, arrival time, required time, and phase. The -format option does not have any impact on this report format.  "*" 2 full: Generates a report that displays the full path with accompanying required time and slack calculation. This is the default path type. Control the report format using the -format option.  "*" 2 full_clock: If the path reported ends at a timing check, this option also reports the full clock path (Other End Path) in addition to the full data path (Timing Path).  "*" 2 end_slack_only: Generates an end point report, similar to -path_type end report, for each path consisting of an endpoint, slack and cause (as Violated/Met). This option generates a very fast report. The -format option does not have any impact on this report format.  Note: When the -path_typeend_slack_only option is used, the path collections will not be reported.  "*" 2 summary_slack_only: Generates a summary report, similar to -path_typesummary, for each path consisting of a start point, endpoint, slack and cause (as Violated/Met). The -format parameter does not have any impact on this report format.
.RE   In MMMC mode, when you specify the report_timing -path_type parameter (with end, end_slack_only, summary, or summary_slack_only options), the output report displays a view column for all the reported paths.  Note: The paths contained in a collection are not reported with upgraded path type.  "\fB-point_to_point\fR" Traces the worst delay path between a pair of from-to pins. Paths reported with this parameter only include the cumulative delay of the path.  You must specify either the -from or -to parameter, to define the begin and end points of the path.  If you do not specify a -from pin, the standard definition of the begin point of a path applies. If you specify a -from pin, it is treated as the begin point of the path. If you specify a -from pin that is not a valid begin point, the arrival time of the first pin starts from 0.  If you do not specify a -to pin, the standard definition of the end point applies. If you specify a -to pin, it is treated as the end point, and only those paths ending in -to pins are reported. If you specify more than one -to pin, the worst path to each pin-to-pin is reported.  When from-to pins are specified, the software will trace across the trigger arcs and report a path, if there is a clock reaching the CK pin of the trigger arc. However, if there is a begin or end point present between the -from and -to pins, the software will not trace beyond it.  If there is no clock reaching the CK pin of the trigger arc, the software cannot trace across the trigger arc, and no path is reported. Additionally, clock path delay is included only when the clock is in propagated mode.  The -point_to_point parameter can be used with the -max_paths and -nworst parameters.  Note: The -point_to_point and -through parameters are mutually exclusive; you cannot specify them together.  Note: The -point_to_point parameter supports a single -from and-to pin; a list of pins is not supported.  See TableOptionsSample Reports.  "\fB-retime_format {manual | retime_compare | retime_replace}\fR" Allows you to set the format of timing reports for retime related fields. You can specify one of the following options:
.RS  "*" 2 manual: Does not change the report_timing format.  "*" 2 retime_compare: If GBA columns are present in the report format, then the corresponding retime options are added. If PBA columns are already present, then there is no change in the format.  "*" 2 retime_replace: If GBA columns are present in the report format, then the GBA columns are replaced by the corresponding PBA columns. If PBA columns are already in the report, then there is no change in the format.
.RE   Note: The timing report format is also controlled using the timing_report_retime_formatting_mode global variable. The report_timing command setting has precedence over this global variable.  "\fB-retime_mode {path | exhaustive}\fR" Reanalyzes the specified set of paths using the specified method. You can use one of the following options:
.RS  "*" 2 path: Reanalyzes the specified set of paths. By default, the software uses -retime_modepath setting, when the -retimepath_slew_propagation option is specified.  "*" 2 exhaustive: Enables exhaustive path-based analysis mode. In this mode, the software will exhaustively examine nworst paths of the selected endpoints and then select the true worst path to be reported - based on retimed slacks of all the examined paths.   When you use this option, reporting can be run time intensive as the software needs to do an exhaustive search for true worst paths. Therefore, it is recommended to use this option in the later phases of the sign-off stage when there are very few violations left for analysis.
.RE   Default: path  "\fB-retime {aocv | |path_slew_propagation | aocv_path_slew_propagation}\fR" Reanalyzes the specified set of paths using path based analysis (1 path per endpoint).  Note: This feature is not meant to be run on all the paths of a design. aocv: Computes AOCV stage count based on specific paths and applies the AOCV derate values to GBA ( graph-based analysis)  delays.  The -retime aocv option can be used with the following parameters only:
.RS  "*" 2 -clock_from
.RE
.RS  "*" 2 -edge_from
.RE
.RS  "*" 2 -clock_to
.RE
.RS  "*" 2 -edge_to
.RE
.RS  "*" 2 -rise/-fall
.RE
.RS  "*" 2 -early/-late
.RE
.RS  "*" 2 -check_type
.RE
.RS  "*" 2 -max_paths
.RE
.RS  "*" 2 -begin_end_pair
.RE
.RS  "*" 2 -from/-from_rise/-from_fall
.RE
.RS  "*" 2 -through/-through_rise/-through_fall
.RE
.RS  "*" 2 -to/-to_rise/-to_fall
.RE   "*" 2 -path_group
.RS  "*" 2 -path_exceptions
.RE
.RS  "*" 2 -net
.RE
.RS  "*" 2 -path_type
.RE
.RS  "*" 2 -max_slack
.RE
.RS  "*" 2 -min_slack
.RE
.RS  "*" 2 -view
.RE
.RS  "*" 2 -format <column_list>
.RE
.RS  "*" 2 -derate_summary
.RE
.RS  "*" 2 -machine_readable  "*" 2 -nworst
.RE  path_slew_propagation: Re-evaluates the given set of graph-based analysis (GBA) paths by recalculating the delay values based upon actual propagated slew across the path. In this case the AOCV derates are the ones that are reported during graph-based analysis.  The default timing analysis uses worst-case slew propagation to calculate the delays at each stage. As a result, timing analysis results can be pessimistic.  Note: This feature should be run only on paths that are not meeting the slack margin criteria, to help identify actual failing paths from those that are simply failing due to the conservative delay calculation.  Signal integrity incremental delays can be recomputed for the entire path. You can use the following command to perform path based signal integrity analysis:  report_timing -retime path_slew_propagation  In the report_timing command output, the Retime Incr Delay column reports recomputed signal integrity delays. To view this column, specify the report_timing -format retime_incr_delay option or use set_global report_timing_format timing global variable.  The -retime option also supports retiming a collection of paths. This option does not retiming an already retimed path collection. This feature works in graph-based analysis (GBA) mode for path collections. You can use the following use model to retime collections:  report_timing $collection -retime path_slew_propagation  A path collection stores context dependent data, that is, a delay property in GBA will reflect delay data of the timing path report generated in GBA mode. The same property in PBA will reflect the re-time delay data of the timing path report in PBA mode.  The delay column in timing reports is also context dependent - under the timing_report_retime_formatting_mode retime_replace global variable.  Note: For memory optimization purposes, both the delays will not be stored in the same path collection. You can use this setting for comparison purposes. aocv_path_slew_propagation: Re-evaluates the given set of graph-based analysis (GBA) paths by using path-based AOCV derates and delays using actual path- based propagated slew. This option is a combination of -aocv and -path_slew_propagation.  For retime report header details, see retimeheaderRetime Analysis Report Header Description.  "\fB-skip_io_paths\fR" Specifies whether the input/output paths are to be ignored.  "\fB-rise | -fall\fR" Reports the path with the specified edge on the endpoint.  If an endpoint is specified using -to_rise (or -to_fall) option, the -rise (or -fall) option is ignored and paths with edge specified by -to_rise (or -to_fall) are reported. The  -rise option applies to end point only.  "\fB-tcl_list\fR" Produces the report in Tcl list format instead of a tabular format. This is useful for integrating timing with custom Tcl functions, and also for customizing report generation.  The -tcl_list and filename parameters are mutually exclusive; you cannot specify them together.  "\fB{-through | -through_rise | -through_fall} <pin_list>\fR" Reports paths that pass through pin(s) or net(s) specified by the pin_list. Any number of -through pins or nets can be specified. Using -through_rise (or -through_fall) specifies that the paths go through the rising (or falling) edge of the signals on the pins/nets in pin_list.  The pin_list is a logical OR function. The resulting path may pass through any of the pins or nets in the -through pin_list. To force the report to pass through multiple pins or nets, separate -through statements are needed.  You can use these parameters with the  -net  option.  "\fB-to | -to_rise | -to_fall <pin_list>\fR" Reports paths leading to the pin(s) specified by the pin_list. Pins in the pin_list can be either pins on the design boundary (ports) or pins on an instance. Only one list of -to pins can be specified per report. Using -to_rise (or -to_fall) specifies that the rising (or falling) edge of the signals on the pins in pin_list are at the end of the paths.  The -to_rise option applies to end point as well as intermediate pins.  "\fB-unconstrained\fR" Reports only the unconstrained paths (paths with no slack). Each signal arriving at the path end node which does not have a matching required time, results in an unconstrained path.  The report_timing command without the -unconstrained parameter reports only constrained paths. If no constrained path is found, there may be unconstrained paths or the path may not exist.  Note: The -min_slack and -max_slack cannot be specified with the -unconstrained parameter.  See SampleReportsSample Reports for the conditions under which a path is reported as constrained or unconstrained.  "\fB-unique_pins\fR" Reports paths through unique set of pins.  When this parameter is specified, in group-based mode for a given begin-end point pair, the software will consider all different launch clock paths for reporting unique paths. If for a given begin-end pair and a given capture clock, there is a possibility of different launch clock paths, then each such path will be reported.  Note: Using this option may significantly affect runtime and memory usage if the number of paths to be reported is high.  "\fB-view {<viewName>}\fR" Generates report for the specified analysis view.  You must be in multi-mode multi-corner analysis mode in order to use this parameter. To create a view, you use the create_analysis_view command. To set an active view for analysis, you use the set_analysis_view command.  Default: Reports the worst path to each endpoint across all analysis views.  The report_timing command to performs block based analysis in MMMC mode. By default, the command reports the worst end-point(s) across all views. You can use the -view parameter to report for individual views.  "\fB-worst_rc_corner\fR" Identifies worst interconnect parameter combination that leads to minimum slack (desired) and generates a report for the corner.
.P 
.SH Use of Informational Flags
.P Informational tags are used providing additional details. The following informational tags are supported: 
.P Flags
.P Description   "\fB(i)\fR" Net is ideal  "\fB(P)\fR" Instance is preserved / don't_touch  "\fB(p)\fR" Instance is preserved / don't_touch but may be resized
.P The output format uses the flag keys on the timing report and adds a description at the end of the report for reference. A sample output is as shown below:
.P #----------------------------------------------------------------------------  # Timing Point  Delay (ns) Latch  Window   Arrival   Arc   Flags   Adjustment  # (ns)  #----------------------------------------------------------------------------  f0/CP           -           -    1.000000             CP       -      -  f0/Q            0.254100    -    1.254100             CP->Q    -      -  b32/Z           0.598446    -    1.852546             I->Z     -      - 
...  b4/Z            0.086940    -    2.502181             I->Z     -      -  f1/D            0.000000    -    2.502181             D        <<<    -  #----------------------------------------------------------------------------
.P (P) : Instance is preserved  (p) : Instance is preserved but may be resized  (i) : Net is ideal.  (b) : Timing paths are broken.
.P Report Timing- Column List Options    "\fBOption\fR" Description  "\fBadjustment\fR" Reports generated clock adjustment values. When reporting the detailed path for a generated clock, there are circumstances where the arrival time needs to be adjusted when a create_generated_clock assertion is encountered along the path. The adjustment argument can be used to provide a clearer indication of why a "jump" in the arrival time is seen in the path report.  When the create_generated_clock -edge_shift parameter is specified, the adjustment column will show the amount of shift specified.  "\fB abs_delay_err \fR" Reports the absolute delay difference of Tempus from Spice.  "\fB abs_slew_err \fR" Reports the absolute slew difference of Tempus from Spice.  "\fBannotation\fR" Reports RC parasitic annotations for net arcs, and delay annotations for either gate or net arcs. The following annotations are reported:
.RS  "*" 2 SDF: SDF back-annotation. The annotation status reflects the gate arc, not the interconnect arc.  "*" 2 SPEF: This entry appears if parasitic extraction has been done or annotated using SPEF.  "*" 2 LumpedRC: Lumped RC annotation  "*" 2 DlyAssert: Assertion set with set_annotated_delay command  "*" 2 WLM: Wire load model back-annotation  "*" 2 <none>: All others
.RE   "\fB aocv_adj_stages \fR" Shows up "Aocv Adjust Stages" column. This column reports the AOCV adjustment stages that indicate the total effective stage count.   "\fBaocv_derate\fR" Reports the graph-based AOCV derating factor used for cells/nets in AOCV mode. In retime mode, this column will report graph-based derating for cells/nets before the AOCV branch point and path-based derating.  "\fB aocv_weight \fR" Reports AOCV weight values for the path elements.   "\fBarc\fR" Reports the arc as described by the from pin, from pin edge, to pin, and to pin edge. For example, the arc from the rising edge of pin A to the falling edge of pin Z is reported as A -> Z.  "\fBarrival\fR" Reports the arrival time on the pin.  "\fB arrival_mean \fR" Reports mean of the arrival time on a pin.   "\fB arrival_sigma \fR" Reports standard deviation of the arrival time on a pin.   "\fBcell\fR" Reports the cell name of the given pin's instance.  "\fBdelay\fR" Reports the arc delay. If the stolen slack at the arc output pin (output of transparent latches) is not zero, the stolen column is also displayed along with this column.  "\fB delay_mean \fR" Reports the mean of each arc's delay.   "\fB delay_sigma  \fR" Reports the standard deviation of each arc's delay.  Note: In the absence of correlated and uncorrelated components of variation, the individual delay sigma values will not be summed up.  "\fBdirection\fR" Reports the pin direction (IN, OUT).  "\fBedge\fR" Reports the edge of a pin (^=R, v=F).  "\fBfanin\fR" Reports the number of source nodes of a net connected to a timing pin.  "\fBfanout\fR" Reports the number of sinks of a net connected to a timing pin.  "\fB flags \fR" Indicates the size_only, dont_use, dont_touch, and ideal attributes.  When the 'flags' option is specified, a capacitance group entry (if it exists) will be displayed under the "Flags" column. This value indicates the input capacitance group being used for delay calculations - C1C2 (2-piece model) or C1CN (n-piece model).  "\fBhpin\fR" Reports the hierarchical name for a given pin.  Note: The hpin, pin, and timing_point will print the same values in the report output.  "\fBincr_delay\fR" Reports the incremental delay of a pertaining arc. The software reads the incremental delay from an incremental SDF file using the read_sdf command.  "\fBinstance\fR" Reports the hierarchical name of a given pin's instance.  "\fBinstance_location\fR" Reports the location (x,y) of an instance. If a design is not placed, this column will be blank. This option displays the instance column automatically.  "\fB latch_window \fR" Reports the available window for latch to sample the data.   "\fBload\fR" Reports the total capacitance load on a given pin.  "\fB module \fR" Reports the module name of the corresponding block hierarchy. This hierarchical module name will be reported only when the -hpin parameter of the report_timing command is specified.  "\fBnet\fR" Reports the hierarchical name of a net connected to a given pin.  "\fB pct_delay_err \fR" Reports the percent delay difference of Tempus from Spice.  "\fB pct_slew_err \fR" Reports the percent slew difference of Tempus from Spice.  "\fBphase\fR" Reports the phase name of a pin.  "\fB phys_info  \fR" Shows minimum/maximum assigned layer, and non-default rule name information.   "\fBpin\fR" Reports the reference name for the given pin.  "\fBpin_load\fR" Reports the pin load data. The pin load refers to the sum of pin capacitance of all the pins connected to the current net.   "\fBpin_location\fR" Reports the location (x,y) of a pin. If a design is not placed, this column will be blank.  "\fBpower_domain\fR" Reports power domain details of the specified path instance.  "\fBrequired\fR" Reports the required time on a pin.  "\fBretime_delay\fR" Reports the recalculated arc delay based on the path being reanalyzed with the specified retime method.  "\fB retime_delay_mean \fR" Reports the mean of the recalculated arc delay on the path being reanalyzed with the specified retime method.  "\fBretime_delay_sigma\fR" Reports the standard deviation of each parameter of an arc's retimed delay.  "\fBretime_slew\fR" Reports the recalculated slew based on the path being reanalyzed with the specified retime method.  "\fB retime_slew_mean \fR" Reports the mean of each parameter of an arc sink pin's retimed slew.  "\fBretime_slew_sigma\fR" Reports the standard deviation of each parameter of an arc sink pin's retimed slew.  "\fBstage_count\fR" Displays the aggregate stage count of a specific instance in graph-based analysis (GBA) mode, and the actual stage count in path-based analysis (PBA) mode.  "\fB slew \fR" Reports the propagated slew at the given pin.  "\fB slew_mean \fR" Reports mean of each parameter of an arc sink pin's slew.   "\fB slew_sigma \fR" Reports the standard deviation of each parameter of an arc sink pin's slew.   "\fB socv_derate \fR" Reports the SOCV or the spatial derating factor applied on the cells or nets in SOCV analysis mode.  "\fB spice_arrival \fR" Reports the Spice arrival time at the timing point.  "\fB spice_delay \fR" Reports the Spice delay of a timing arc.  "\fB spice_slew \fR" Reports the Spice slew of a timing point.  "\fBstolen\fR" Reports the slack stolen (or the time given to the previous stage) at the given pin. If the slack is not zero and the delay column is specified, then this column is displayed by default (but only visible on the output of transparent latches).  "\fBtiming_point\fR" Reports the hierarchical names for the given points.  "\fB total_derate \fR" Reports the total derating factor applied on the corresponding cell or nets that reflect the combined impact of all the derates (OCV/AOCV/spatial) applied on each stage of the timing path.  "\fBuser_derate\fR" Reports the derating scale factors set with the set_timing_derate command.  Note: The timing system cannot provide an accurate derating factor for the lumped gate and wire delay when the set_timing_derate factors for -cell_delay and -net_delay are not equivalent. In this case, an asterisk (*) is reported in the SSI Derate column.  "\fB voltage \fR" Returns the voltage that is used during delay calculations.   "\fBwhen_cond\fR" Reports the "when" condition of the arc specified in the library.  "\fBwire_load\fR" Reports the wire load.  "\fB wlmodel \fR" Reports the kind of parasitic used by a pin or net, such as SPEF. If the wire load model is derived from a Liberty file, the information is reported in the following format:  Wireload model (.lib <model_name> <library_name>) 
.SH Reporting Timing Checks Between Various Types of Clocks
.P The following table summarizes the timing checks and the min/max delay checks that are performed based on the types of launching and capturing clocks:
.RS  "*" 2 NZ (Non Zero Period Clock - Regular Clock)
.RE
.RS  "*" 2 Z (Zero Period Clock - Regular clock whose period is equal to zero)
.RE
.RS  "*" 2 @ (Asynchronous Clock - Clock which triggers the default input delay and the input delay without a clock)
.RE
.RS  "*" 2 CPD (Combinational Path Delay)
.RE  ________________________________________________________
.P |\fB Launching \fR | \fB Capturing \fR | \fB Timing\fR     | \fB Path\fR       |   |\fB Clock\fR      | \fB Clock\fR      | \fB  Checks\fR    | \fB  Delay\fR     |   |            |             |             | \fB  Checks\fR    |   |____________|_____________|_____________|_____________|
.P |  @         |   @         |   NO        |   CPD       |   |____________|_____________|_____________|_____________|
.P |  Z         |   @         |   NO        |   CPD       |   |____________|_____________|_____________|_____________|
.P |  NZ        |   @         |   NO        |   CPD       |   |____________|_____________|_____________|_____________|
.P |  @         |   Z         |   YES       |   SPD       |   |____________|_____________|_____________|_____________|
.P |  @         |   NZ        |   YES       |   SPD       |   |____________|_____________|_____________|_____________|
.P |  NZ        |   Z         |   NO        |   SPD       |   |____________|_____________|_____________|_____________|
.P |  Z         |   NZ        |   YES       |   SPD       |   |____________|_____________|_____________|_____________|
.P |  Z         |   Z         |   YES       |   SPD       |   |____________|_____________|_____________|_____________|
.P |  NZ        |   NZ        |   YES       |   SPD       |   |____________|_____________|_____________|_____________| 
.SH Retime Analysis Report Header Description   "\fBAOCV(default)\fR" Indicates that the selected retime analysis includes recalculation of path depths and AOCV derates.  The AOCV retime is enabled with the -retime aocv or aocv_path_slew_propagation parameter.  The AOCV stage counting mode (set using the timing_aocv_analysis_mode global variable) is indicated in the parenthesis. The stage counting modes are given below:
.RS  "*" 2 launch_capture(default)     (Default)  "*" 2 combine_launch_capture      (Combine)  "*" 2 separate_clock_data         (Separate)  "*" 2 clock_only                  (Clock)
.RE   "\fBCorr\fR" Indicates that the current SOCV accuracy mode considers correlation of variation between stages.   Starting with SOCV accuracy mode medium (specified using setDelayCalMode -socv_accuracy_mode parameter), it is assumed that some portion of the variation is not completely uncorrelated random variation, so the software tracks a correlated and uncorrelated component for each of the applicable moments.  "\fBData Clock\fR" Indicates the portion of the path that has been retimed. By default, only the data path is retimed.  When the timing_disable_retime_clock_path_slew_propagation global variable is set to false, then the clock path will also be retimed, and Clock will be added to the retime status.  "\fBGP\fR" Indicates that graph-based PBA mode settings are enabled.  "\fBGS\fR" Indicates that GBA skewness mode settings are enabled.  "\fBPath-Slew\fR" Indicates the selected retime analysis is set to use path correct slew rates to reduce the pessimism from slew merging.   This can be controlled with the report_timing -retime parameter. The path slews are recalculated in path_slew_propagation and aocv_path_slew_propagation modes.  "\fBRC\fR" Indicates that RC variation is enabled with the timing_socv_rc_variation_mode setting, and an SOCV format RC variation side file library is available.  "\fBSI\fR" Indicates that SI analysis was enabled during the retime analysis.  The path-based analysis will recompute SI effects using path-correct victim timing windows.  "\fBSOCV(Ultra)\fR" Indicates that SOCV analysis is enabled and has been incorporated into the retiming.   The SOCV analysis mode (specified using the setDelayCalModesetDelayCalMode -socv_accuracy_mode parameter) is shown in parenthesis. The accuracy modes are mapped as follows:
.RS  "*" 2 low        <not shown>  "*" 2 medium     Medium  "*" 2 high       High  "*" 2 ultra      Ultra
.RE   "\fBSpatial (CS)\fR" Indicates that spatial derating side files have been loaded and an explicit spatial derate factor will be calculated.   This is not shown for AOCV 2D derate tables, where the spatial and depth derates are combined.  The GBA spatial derate mode (specified with the timing_spatial_derate_distance_mode setting) is shown in parenthesis with the possible values below:
.RS  "*" 2 chip_size        (CS)  "*" 2 bounding_box     (BB)
.RE   The GBA spatial derate mode does not affect the path-based analysis bounding box calculation.  "\fBWP\fR" Indicates that waveform propagation is enabled (setDelayCalMode -equivalent_waveform_model propagation setting).    The path-based retime will also use this delay calculation accuracy setting when recomputing delays and transitions for the path. 
.SH SPD (Sequential Path Delay) Examples
.RS  "*" 2 The following command reports paths leading to the pin(s) specified by the <pin_list>:   report_timing -to u55/D  Path 1: MET Setup Check with Pin u55/CK   Endpoint: u55/D (^) checked with leading edge of 'CLK_W_4'   Beginpoint: u55/QN (^) triggered by leading edge of 'CLK_W_4'   Path Groups: {CLK_W_4}   Other End Arrival Time 0.152   - Setup 0.306   + Phase Shift 10.000   = Required Time 9.845   - Arrival Time 1.902   = Slack Time 7.943   Clock Rise Edge 0.000   + Clock Network Latency (Prop) 0.152   = Beginpoint Arrival Time 0.152   ---------------------------------------------------------------------------    Pin      Arc            Cell      Delay     Arrival    Required    Instance                                                 Time      Time    --------------------------------------------------------------------------                       -    u55/CK    CK ^           -       - 0.151    8.094                  u55   u55/QN    CK ^ -> QN ^   DFF      1.750     1.901       9.844      u55   u55/D ->  D ^            DFF      0.001     1.902       9.845      u55   --------------------------------------------------------------------------   "*" 2 The following command shows a report similar to the first with the addition of net arc information.  report_timing -to u55/D -net  Path 1: MET Setup Check with Pin u55/CK   Endpoint: u55/D (^) checked with leading edge of 'CLK_W_4'   Beginpoint: u55/QN (^) triggered by leading edge of 'CLK_W_4'   Path Groups: {CLK_W_4}   Other End Arrival Time 0.152   - Setup 0.306   + Phase Shift 10.000   = Required Time 9.845   - Arrival Time 1.902   = Slack Time 7.943   Clock Rise Edge 0.000   + Clock Network Latency (Prop) 0.152   = Beginpoint Arrival Time 0.152   --------------------------------------------------------------------------   Pin        Arc           Cell    Delay    Arrival    Required    Instance    Time Time    -------------------------------------------------------------------------   u55/CK     CK ^           -      -        0.151     8.094       u55   u55/QN     CK ^ -> QN ^   DFF     1.750   1.901     9.844       u55   u55/D ->   -              DFF     0.001   1.902     9.845       u55   -------------------------------------------------------------------------
.RE
.RS  "*" 2 The report_timing command also accepts -collection as an argument. For example,  report_timing [report_timing -collection]  set rpt [report_timing -collection]  report_timing $rpt
.RE
.RS  "*" 2 The following command displays the worst late path in the design. The format of the report is similar to the first example:   report_timing
.RE
.RS  "*" 2 The following command displays the worst late path to each violating endpoint that has a slack less than -1.0:   report_timing -max_slack -1.0
.RE
.RS  "*" 2 The following command displays all the late paths that end at port out[2] and that have negative slack up to a maximum of 1000 worst paths. If there are more than 1000 paths, only the 1000 worst paths are reported:   report_timing -to out[2] -max_paths 1000 -max_slack 0.0
.RE
.RS  "*" 2 The following command reports the worst late path that starts at in[0] and ends at out[1]:   report_timing  -from in[0] -to out[1]
.RE
.RS  "*" 2 The following command displays the three worst paths that start at in[1] and end at out[3]. With reconvergent fanout, more than one path may exist:   report_timing -from in[1]  -to out[3]  -max_paths 3
.RE
.RS  "*" 2 The following command displays the ten worst paths. Only the paths between the specified pins are enumerated.With reconvergent fanout, more than one path may exist: report_timing -from i102/Z -to i123/A -max_paths 10
.RE
.RS  "*" 2 The following command enumerates the worst ten paths through the given two pins, starting at the beginning points in the design and ending at the endpoints, similar to using the -from option: report_timing -through i102/Z -through i123/A -max_paths 10
.RE
.RS  "*" 2 The following command reports the ten worst paths through blocks A and C, or blocks B and C. The path only has to satisfy one element in a through list, but all through lists must be satisfied. The example can be thought of as ((A or B) and C):   report_timing -through {A/*B/*} -through {C/*} -max_paths 10
.RE
.RS  "*" 2 The following command forces a path through pin A and pin B. Use the syntax shown in the example. Do not use -through {A B}:   report_timing -through A -through B
.RE
.RS  "*" 2 The following command displays the clock path through the clock root to Launch flop: report_timing -through aBC_bs/bs_mex1/r2_00_q1_reg_10_/CK -to
.... -path_type full_clock   "*" 2 You will not see the path for the launch clock if you specify the following command because the report_timing command starts reporting from the CK pin:  report_timing -from aBC_bs/bs_mex1/r2_00_q1_reg_10_/CK
.RE
.RS  "*" 2 The first command displays the path leading to the CK pin.
.RE
.RS  "*" 2 The following command shows the -unconstrained option:   report_timing -unconstrained  Path 1:Endpoint: OUT4 (^) (unconstrained output)  Beginpoint: u55/Q (^) triggered by leading edge of 'CLK_W_4'  Arrival Time 0.365  + Clock Network Latency (Prop) 0.150  = Beginpoint Arrival Time 0.150  --------------------------------------  Load Slew Delay Arrival Cell Arc Pin  Time  --------------------------------------  0.013 0.116 - 0.150 - CK ^ u55/CK  0.011 0.072 0.215 0.365 DFF CK ^ -> Q ^ u55/Q  0.011 0.131 0.000 0.365 - OUT4 ^ OUT4 ->  ------------------------------------- 
.RE
.RS  "*" 2  The following command shows the -unconstrained -path_type end report:   report_timing -nworst 5 -unconstrained -path_type end -format {pin arrival phase}  ------------------------------------------------------------------  Path No. Pin           Cause               Arrival  Phase  ------------------------------------------------------------------  1        seg3/u9/CK ^  Unconstrained Path  0.682    CLK_W_3(D)(P) *  2        seg3/u9/CK ^  Unconstrained Path  0.682    CLK_W_3(D)(P) *  3        seg3/u3/CK ^  Unconstrained Path  0.682    CLK_W_3(D)(P) *  4        seg3/u3/CK ^  Unconstrained Path  0.682    CLK_W_3(D)(P) *  5        seg2/u9/CK ^  Unconstrained Path  0.682    CLK_W_2(D)(P) *  ------------------------------------------------------------------   "*" 2 The following command sets a false path from u99/Q to u55/D:  set_false_path -from u99/Q -to u55/D  set_false_path -through u4/Y  report_timing -from u99/Q -to u55/D -unconstrained -path_exceptions all  Path 1:Endpoint: u55/D (^) (unconstrained output)  Beginpoint: u99/Q (v) triggered by leading edge of 'CLK_W_4'  Arrival Time 0.827  + Clock Network Latency (Prop) 0.150  = Beginpoint Arrival Time 0.150  -----------------------------------------------------------  Load    Slew    Delay   Arrival   Cell   Arc   Pin                          Time  -----------------------------------------------------------  0.013   0.116   -        0.150    -     CK ^        u99/CK  0.027   0.086   0.195    0.345    DFF   CK ^ -> Q v u99/Q ->  1.006   1.140   0.482    0.827    INV   A v -> Y ^  u4/Y  1.006   1.140   0.000    0.827    DFF   D ^         u55/D ->  ------------------------------------------------------------  Applied exceptions:  ---------------------------------  Through Late  ---------------------------------  u4/Y false  ---------------------------------  Ignored exceptions:  ---------------------------------  From To Late  ---------------------------------  u99/Q u55/D false  --------------------------------- 
.RE
.RS  "*" 2 For hold paths, if the path has a setup multi-cycle path then those exceptions will also be reported because hold slacks get impacted by inferred path exceptions. For example:  set_multicycle_path 2 -setup -from IN1  Path 1: VIOLATED Hold Check with Pin seg1/u3/CK  Endpoint: seg1/u3/D (v) checked with leading edge of 'CLK_W_1'  Beginpoint: IN1 (v) triggered by leading edge of '@'  Path Groups: {CLK_W_1}  Other End Arrival Time 0.682  + Hold -0.034  + Phase Shift 0.000  - Cycle Adjustment -20.000  = Required Time 20.648  Arrival Time 0.117  Slack Time -20.531  Clock Rise Edge 0.000  + Input Delay 0.000  + Drive Adjustment -0.014  = Beginpoint Arrival Time -0.014  -------------------------------------------------------------  Load    Slew    Delay   Arrival   Cell   Arc           Pin                          Time  --------------------------------------------------------------  0.013   0.029   -      -0.014    -       IN1 v        IN1  0.013   0.057   0.054  0.040     CLKBUF  A v -> Y v   seg1/u1/Y  0.003   0.050   0.077  0.117     CLKBUF  A v -> Y v   seg1/u2/Y  0.003   0.050   0.000  0.117     DFF     D v          seg1/u3/D  ---------------------------------------------------------------  Applied exceptions:  ---------------------------------  From Early Late  ---------------------------------  IN1 - cycles 2  ---------------------------------   "*" 2 The following command displays the timing report for analysis view setup_view1:  report_timing -view setup_view1  Path 1: MET Late External Delay Assertion  Endpoint: EJ_TDOzstate (^) checked with leading edge of 'virt_out_EJ_TCK'  Beginpoint: core_ejt_ejt_tap_ejt_tck__EJ_TDOzstate_q_reg_0_/Q (^) triggered by trailing edge of 'EJ_TCK'  Path Groups: {virt_out_EJ_TCK}  Analysis View: setup_view1  Other End Arrival Time 0.000  + Source Insertion Delay 0.300  - External Delay 1.250  + Phase Shift 17.400  + CPPR Adjustment 0.000  = Required Time 16.450  - Arrival Time 9.318  = Slack Time 7.132  Clock Fall Edge 8.700  + Clock Network Latency (Ideal) 0.000  = Beginpoint Arrival Time 8.700  --------------------------------------------------------------------  Load   Slew   Delay   Arrival   Cell       Arc             Pin                        Time  --------------------------------------------------------------------  0.010  0.000          8.700                CP ^           core_ejt_ejt  0.118  0.145  0.127   8.828      DFSVTD4   CP ^ -> Q ^    core_reg_0_/Q  0.525  0.438  0.411   9.238      BUFVTD6   I ^ -> Z ^     FE_OFC260_/Z  0.525  0.474  0.080   9.318                EJ_TDOzstate ^ EJ_TDOzstate  --------------------------------------------------------------------- 
.RE
.P 
.SH Sample Reports
.RS  "*" 2  report_timing -to u55/D -from u99/Q -point_to_point #when -from is intermediate begin point:  Path 1:Endpoint: u55/D (^) (unconstrained output)   Beginpoint: u99/Q (v) triggered by leading edge of 'CLK_W_4'   Arrival Time 0.482   -------------------------------------------------------------   Load   Slew    Delay   Arrival   Cell   Arc        Pin                          Time   -------------------------------------------------------------   0.027  0.086          0.000             Q v        u99/Q ->   1.006  1.140  0.482   0.482      INV    A v -> Y ^ u4/Y   1.006  1.140  0.000   0.482      DFF    D ^        u55/D ->   ------------------------------------------------------------   "*" 2 The following command recalculates the specified critical paths using the AOCV factor and generates the following timing report:  report_timing -from in3 -to Top_I9/D -retime aocv -path_type full_clock  Path 1: MET Setup Check with Pin Top_I9/CK  Endpoint: Top_I9/D (v) checked with leading edge of 'clk2'  Beginpoint: in3 (^) triggered by leading edge of '@'  Path Groups: {clk2}  Retime Analysis { AOCV(Default) }  Other End Arrival Time 0.000  - Setup 0.248  + Phase Shift 1.000  = Required Time 0.752  - Arrival Time 0.061  = Slack Time 0.691  Clock Rise Edge 0.000  + Input Delay 0.000  = Beginpoint Arrival Time 0.000  Timing Path:  ----------------------------------------------------------  Load   Slew    Delay   Aocv    Cell   Arc    Pin                        Derate  ----------------------------------------------------------  0.011  0.004                         in3 ^       in3 ->  0.011  0.004  0.001   1.173   INVX1              Top_I8/A  0.007  0.076  0.060   1.175   INVX1  A ^ -> Y v  Top_I8/Y  0.007  0.076  0.000   1.173   DFFX1              Top_I9/D ->  ----------------------------------------------------------  Clock Rise Edge 0.000  = Beginpoint Arrival Time 0.000  Other End Path:  -----------------------------------------------------  Load    Slew    Delay  Aocv  Cell   Arc     Pin                         Derate  -----------------------------------------------------  0.012   0.000                      clk2 ^   clk2  0.012   0.000  0.000   0.825 DFFX1          Top_I9/CK  ----------------------------------------------------   "*" 2  The following command recalculates the specified critical paths using the AOCV factor and generates an AOCV derating summary table for the launch and capture paths, in addition to the timing report:  report_timing -from in3 -to Top_I9/D -retime aocv -path_type full_clock -derate_summary  Path 1: MET Setup Check with Pin Top_I9/CK  Endpoint: Top_I9/D (v) checked with leading edge of 'clk2'  Beginpoint: in3 (^) triggered by leading edge of '@'  Path Groups: {clk2}  Retime Analysis { AOCV(Default) }  Other End Arrival Time 0.000  - Setup 0.248  + Phase Shift 1.000  = Required Time 0.752  - Arrival Time 0.061  = Slack Time 0.691  Clock Rise Edge 0.000  + Input Delay 0.000  = Beginpoint Arrival Time 0.000  Timing Path:  -------------------------------------------------------  Load    Slew   Delay  Aocv   Cell   Arc         Pin  Derate  -------------------------------------------------------  0.011   0.004                       in3 ^      in3 ->  0.011   0.004  0.001  1.173  INVX1             Top_I8/A  0.007   0.076  0.060  1.175  INVX1  A ^ -> Y v Top_I8/Y  0.007   0.076  0.000  1.173  DFFX1             Top_I9/D ->  -----------------------------------------------------------  Clock Rise Edge 0.000  = Beginpoint Arrival Time 0.000  Other End Path:  ---------------------------------------------------  Load   Slew    Delay  Aocv   Cell   Arc      Pin                        Derate  ---------------------------------------------------  0.012  0.000                        clk2 ^  clk2  0.012  0.000  0.000   0.825  DFFX1          Top_I9/CK  -----------------------------------------------------  DUAL LOCV Derate Summary  Clock Branch Point None  Distance 89.944    "*" 2  The following command reports pin names and net names in the same column alternatively:   report_timing -format { load slew delay arrival cell pin_load fanout timing_point} -net  Path 1: MET Setup Check with Pin u55/CK  Endpoint: u55/D (^) checked with leading edge of 'CLK_W_4'  Beginpoint: u99/Q (v) triggered by leading edge of 'CLK_W_4'  Path Groups: {CLK_W_4}  Other End Arrival Time 0.150  - Setup 0.176  + Phase Shift 10.000  = Required Time 9.974  - Arrival Time 0.827  = Slack Time 9.148  Clock Rise Edge 0.000  + Clock Network Latency (Prop) 0.150  = Beginpoint Arrival Time 0.150  -------------------------------------------------------------------  Load    Slew    Delay  Arrival  Cell    Pin Load Fanout Timing Point                         Time  -------------------------------------------------------------------          0.116          0.150                            u99/CK          0.086  0.195   0.345    DFF                     u99/Q  0.027                           (net)   0.027    1      n3          0.086  0.000   0.345    INV                     u4/A          1.140  0.482   0.827    INV                     u4/Y  1.006                           (net)   1.006    2      n4          1.140  0.000   0.827    DFF                     u55/D ->  -------------------------------------------------------------------   "*" 2  The following command reports power domain details of path instances:  report_timing -format { load slew delay arrival cell arc hpin power_domain}  Path 1: MET Setup Check with Pin u55/CK  Endpoint: u55/D (^) checked with leading edge of 'CLK_W_4'  Beginpoint: u99/Q (v) triggered by leading edge of 'CLK_W_4'  Path Groups: {CLK_W_4}  Other End Arrival Time 0.150  - Setup 0.176  + Phase Shift 10.000  = Required Time 9.974  - Arrival Time 0.827  = Slack Time 9.148  Clock Rise Edge 0.000  + Clock Network Latency (Prop) 0.150  = Beginpoint Arrival Time 0.150  ----------------------------------------------------------------  Load   Slew   Delay  Arrival   Cell   Arc        Pin       Power                        Time                                  Domain  ----------------------------------------------------------------  0.013  0.116         0.150            CK ^        u99/CK   0.027  0.086  0.195  0.345      DFF   CK ^ -> Q v u99/Q    PD1  1.006  1.140  0.482  0.827      INV   A v -> Y ^  u4/Y     PD2  1.006  1.140  0.000  0.827      DFF   D ^         u55/D -> PD1  ---------------------------------------------------------------- 
.RE
.RS  "*" 2 The following examples refer to the figure shown below:
.RE
.P Conditions for Unconstrained and Constrained Paths
.P (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.) 
.RS  "*" 2  Shows the path from I to O is reported as an unconstrained path under the following conditions (constraints on I and O):
.RE
.RS  "*" 2 No constraints on either I or O
.RE
.RS  "*" 2 set_input_delay -clock ck1 1.0 I  No set_output_delay constraint on O
.RE
.RS  "*" 2 set_input_delay 1.0 I  set_output_delay 1.1 O
.RE
.RS  "*" 2 Shows the path from I to O is reported as a constrained path under the following conditions (constraints on I and O):
.RE
.RS  "*" 2 set_input_delay -clock ck1 1.0 I  set_output_delay -clock ck1 1.0 O
.RE
.RS  "*" 2 set_input_delay -clock ck1 1.0 I  set_output_delay -clock ck2 1.0 O   "*" 2 set_output_delay -clock ck1 1.0 O  No set_input_delay constraint on I. It uses default delay of zero.   Default: -late
.RE
.RS  "*" 2 The following command reports AOCV weight details of path elements:  report_timing -from in3 -to Top_I9/D -format {instance cell arc delay        aocv_derate stage_count arrival aocv_weight} -path_type full_clock  Path 1: MET Setup Check with Pin Top_I9/CK  Endpoint: Top_I9/D (v) checked with leading edge of 'clk2'  Beginpoint: in3 (^) triggered by leading edge of '@'  Path Groups: {clk2}  Other End Arrival Time 0.000  - Setup 0.248  + Phase Shift 1.000  = Required Time 0.752  - Arrival Time 0.061  = Slack Time 0.691  Clock Rise Edge 0.000  + Input Delay 0.000  = Beginpoint Arrival Time 0.000  Timing Path:  -----------------------------------------------------------------------  Instance     Cell      Arc     Delay    Aocv    Aocv    Arrival    Aocv                                          Derate  Stage   Time       Weight                                                  Count  -----------------------------------------------------------------------                        in3 ^                              0.000  Top_I8       INVX1    A ^ -> Y v  0.061  1.175  1.000    0.061     1  Top_I9       DFFX1    D v         0.000  1.173  2.000    0.061     1  -----------------------------------------------------------------------  Clock Rise Edge 0.000  = Beginpoint Arrival Time 0.000  Other End Path:  -----------------------------------------------------------------------  Instance   Cell      Arc       Delay     Aocv    Aocv   Arrival    Aocv                                           Derate  Stage  Time       Weight                                                   Count  -----------------------------------------------------------------------                      clk2 ^                              0.000   Top_I9    DFFX1     CK ^       0.000     0.825   1.000  0.000      1  ---------------------------------------------------------------------- 
.RE
.RS  "*" 2 The following command reports paths through unique set of pins:   report_timing -nworst 2 -unique_pins  Path 1: MET Setup Check with Pin seg3/u14/CK  Endpoint: seg3/u14/D (^) checked with leading edge of 'CLK_W_3'  Beginpoint: seg3/u9/Q (^) triggered by leading edge of 'CLK_W_3'  Path Groups: {CLK_W_3}  Other End Arrival Time 0.621  - Setup 0.186  + Phase Shift 2.000  = Required Time 2.434  - Arrival Time 2.062  = Slack Time 0.372  Clock Rise Edge 0.000  + Clock Network Latency (Prop) 0.682  = Beginpoint Arrival Time 0.682  -----------------------------------------------------------  Load   Slew    Delay  Arrival   Cell   Arc          Pin                        Time  -----------------------------------------------------------  0.008  0.049  0.682                    CK ^         seg3/u9/CK  0.011  0.075  0.185   0.867     DFF    CK ^ -> Q ^  seg3/u9/Q  0.027  0.077  0.073   0.940     BUF    A ^ -> Y ^   seg3/u10/Y  1.027  0.644  0.317   1.257     INV    A ^ -> Y v   seg3/u11/Y  1.011  1.087  0.402   1.659     INV    A v -> Y ^   seg3/u12/Y  0.003  1.077  0.403   2.062     BUF    A ^ -> Y ^   seg3/u13/Y  0.003  1.077  0.000   2.062     DFF    D ^          seg3/u14/D  -------------------------------------------------------------  Path 2: MET Setup Check with Pin u2/CK  Endpoint: u2/D (v) checked with leading edge of 'CLK_W_1'  Beginpoint: CLK2 (v) triggered by trailing edge of 'CLK_W_2'  Path Groups: {CLK_W_1}  Other End Arrival Time 0.000  - Setup 0.188  + Phase Shift 15.000  = Required Time 14.812  - Arrival Time 12.463  = Slack Time 2.349  Clock Fall Edge 12.500  = Beginpoint Arrival Time 12.500  ----------------------------------------------------------  Load    Slew   Delay    Arrival    Cell    Arc    Pin                          Time  ----------------------------------------------------------  0.034  0.003   12.500                     CLK2 v      CLK2  0.003  0.003   -0.037   12.463     BUF    A v -> Y v  u10999/Y  0.003  0.003   0.000    12.463     DFF    D v         u2/D  ---------------------------------------------------------- 
.RE
.RS  "*" 2 The following command reports all the violating paths (or having slack greater than the value specified with '-max_slack') between unique source and target register pairs:  report_timing -to u55/D -begin_end_pair -max_slack 10  Path 1: MET Setup Check with Pin u55/CK  Endpoint: u55/D (^) checked with leading edge of 'CLK_W_4'  Beginpoint: u99/Q (v) triggered by leading edge of 'CLK_W_4'  Path Groups: {CLK_W_4}  Other End Arrival Time 0.150  - Setup 0.176  + Phase Shift 10.000  = Required Time 9.974  - Arrival Time 0.827  = Slack Time 9.148  Clock Rise Edge 0.000  + Clock Network Latency (Prop) 0.150  = Beginpoint Arrival Time 0.150  ----------------------------------------------------------  Load    Slew    Delay    Arrival    Cell    Arc    Pin                           Time  ----------------------------------------------------------  0.013   0.116   0.150                      CK ^         u99/CK  0.027   0.086   0.195    0.345      DFF    CK ^ -> Q v  u99/Q  1.006   1.140   0.482    0.827      INV    A v -> Y ^   u4/Y  1.006   1.140   0.000    0.827      DFF    D ^          u55/D ->  ---------------------------------------------------------- 
.RE
.RS  "*" 2 The following command generates a group based report in non-group mode:  report_timing -begin_end_pair -max_slack 10 -path_type end_slack_only  Path Groups: max_delay/setup {CLK_W_1}   -----------------------------------------------   End Point Slack Cause   -----------------------------------------------   u2/D f 2.349 MET   -----------------------------------------------  Path Groups: max_delay/setup {CLK_W_3}   -----------------------------------------------   End Point Slack Cause   -----------------------------------------------   seg3/u14/D r 0.372 MET   seg3/u3/D f 2.397 MET   ----------------------------------------------  53. report_timing - -path_type full_clock -net -debug time_borrow   Path 1: MET Latch Borrowed Time Check with Pin latch2/GN   Endpoint: latch2/D (^) checked with trailing edge of 'CK1'   Beginpoint: ff1/Q (v) triggered by leading edge of 'CK1'   Path Groups: {CK1}   Other End Arrival Time 2.558   + Borrow Edge Adjust 0.043   + Phase Shift 0.000   + CPPR Adjustment 0.000   = Required Time 2.601   - Arrival Time 0.544   = Slack Time 2.057   Clock Rise Edge 0.000   + Clock Network Latency (Prop) 0.313   = Beginpoint Arrival Time 0.313   ------------------------------------------------------------------------------------   Load   Slew    Delay   Incr   Arc  Fanout Cell     Arc          User    Arrival Instance   Delay          Annotation                 Derate   Time   ------------------------------------------------------------------------------------   0.005  0.055                  WLM  2                CK ^                0.313   ff1   0.004  0.042   0.123   0.000  WLM  1      DFFHQX1   CK ^ -> Q v  1.000  0.436   ff1   0.004  0.044   0.035   0.000  WLM  1      INVX1     A v -> Y ^   1.000  0.471   invd4   0.004  0.026   0.019   0.000  WLM  1      INVX1     A ^ -> Y v   1.000  0.491   invd5   0.010  0.082   0.053   0.000  WLM  1      INVX1     A v -> Y ^   1.000  0.544   invd6   0.010  0.082   0.000   0.000  WLM          TLATNRX4 D ^          1.000  0.544   latch2   -------------------------------------------------------------------------------------  Time Borrow Calculations   --------------------------  Latch Early Close Edge 4.482   - Library Setup 0.057   - Latch Early Open Edge 2.558   = Max Allowed Borrow Time 1.866   - Time Borrowed 0.043   = Available Time Borrow 1.824
.RE
.P Scenarios for Group Path Reporting for User-Defined Groups
.RS  "*" 2
.RS  "*" 2 A user-defined group is created with the same name as any of the defined reference clocks and with the same constraint as for the "to" clock. For example, group_path -name CLK -to CLK.   In this case only one group named CLK will be displayed in the timing report. This will be the same default group with reference clock CLK. Note that default groups - clock gating and asynchronous checks - will not be honored for this group.  "*" 2  A user-defined group is created with the same name as any of the reference clocks but with different constraint as specified for the "to" clock. E.g., group_path -name CLK -from pin1 -to CLK.  In this case the two groups named CLK will be displayed in the timing report. One group will be the same as the default group with reference clock CLK (which will not honor clock gating or asynchronous checks) and the other will be the user-defined path group with name CLK, which will honor all the checks.
.RE 
.RE 
.SH Related Information
.RS  "*" 2 report_net  "*" 2 report_ports  "*" 2 set_table_style 
.RE
.P
