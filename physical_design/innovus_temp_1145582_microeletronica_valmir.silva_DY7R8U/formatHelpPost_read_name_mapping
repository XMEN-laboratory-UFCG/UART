.nf
.P Product Version     22.14    Cadence Design Systems, Inc. 
.fi
.TH read_name_mapping  22.14 "Fri Oct 06 02:12:27 2023" 
.SH Name \fBread_name_mapping\fR \-  Reads a name mapping file which records the mapping relationship between the original HDL (RTL bit level) names in Genus to the corresponding gate-level netlist names in Genus or Innovus for primary ports or reg/wire variables, and any logical phase inversions generated by Genus
.SH Syntax \fBread_name_mapping\fR   [-help]    <in_file>  [-debug] 
.P Reads a name mapping file which records the mapping relationship between the original HDL (RTL bit level) names in Genus to the corresponding gate-level netlist names in Genus or Innovus for primary ports or reg/wire variables, and any logical phase inversions generated by Genus.
.P It can be used for Power Analysis using RTL switching activities and Formal Verification with Conformal LEC to facilitate key point mapping between the RTL names and the Innovus gate-level names. Innovus will not modify the incoming string <RTL_bit_level_name> and will attach this information to the corresponding netlist pin or port objects.
.P The input syntax of the file is as follows:
.P add mapped point <RTL_bit_level_name> <netlist_inst_q_pin_or_port> [-invert]
.RS  "*" 2 <RTL_bit_level_name>: It is the hierarchical name of an RTL bit-level object corresponding to primary ports or reg/wire variables using / for the hierarchy delimiter  "*" 2 <netlist_inst_q_pin_or_ports>: It is the hierarchical name of a gate-level instance q-pin or a port  "*" 2 [-invert]:  It indicates a logical phase inversion has been done during optimization for this pin or port
.RE 
.SH Parameters   "\fB-help\fR" Prints a brief description that includes the type and default information for each read_name_mapping parameter.  For a detailed description of the command and all of its parameters, use the man command:   man read_name_mapping  "\fB-debug\fR" Print debug info.   "\fB<in_file>\fR" Name of input name mapping file.
.P 
.SH Example
.P The following example show how different bits are merged into a multi-bit cell, so using simpler names is better.
.P add  mapped  point  IL_reg[1]      CDN_MBIT_reg/Q1      -invert
.P add  mapped  point  TRNS1_reg[0]   CDN_MBIT_reg/Q2 
.P add  mapped  point  Vflag_reg      CDN_MBIT_reg/Q3
.P add  mapped  point  Zflag_reg      CDN_MBIT_reg/Q4 
.P Example of the name mapping format used by Genus in presence of complex typed-names:
.P add mapped point clk clk //in
.P add mapped point sel sel //in
.P add mapped point in1[1] in1[1] //in
.P add mapped point in1[0] in1[0] //in
.P add mapped point out1[1] out1[1] //out
.P add mapped point out1[0] out1[0] //out
.P add mapped point out3/x[1] out3[x][1] //out
.P add mapped point out3/x[0] out3[x][0] //out
.P add mapped point isub/out1/x[1] isub_out1_reg[x][1]/Q
.P add mapped point isub/out1/x[0] isub_out1_reg[x][0]/Q
.P add mapped point out1[1] out1_reg[1]/Q
.P add mapped point out1[0] out1_reg[0]/Q
.P add mapped point out3/x[1] out3_reg[x][1]/Q
.P add mapped point out3/x[0] out3_reg[x][0]/Q 
.SH Related Information
.RS  "*" 2 write_do_lec  "*" 2 write_lec_files  "*" 2 write_lec_directory_naming_style  "*" 2 write_name_mapping
.RE
.P
