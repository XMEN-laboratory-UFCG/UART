.nf
.P Product Version     22.14    Cadence Design Systems, Inc. 
.fi
.TH reset_path_exception  22.14 "Fri Oct 06 02:12:27 2023" 
.SH Name \fBreset_path_exception\fR \-  Removes any previously set path exceptions (or path exception of the specified type) for the given paths
.SH Syntax \fBreset_path_exception\fR  [-exact]   [-type {false_path | multicycle | path_delay}]  [-rise]  [-fall]  [{-from | -rise_from | -fall_from} <from_list>]  [{-through | -rise_through | -fall_through} <through_list>]   [{-to | -rise_to | -fall_to} <to_list>]   [-setup | -hold]  [-all] 
.P Removes any previously set path exceptions (or path exception of the specified type) for the given paths. To remove all path exceptions, use the -all option with the reset_path_exception command. 
.SH Parameters    "\fB-all\fR" Removes all path exceptions. This option cannot be used with the -from, -through and -to options.  "\fB-exact\fR" Forces exact matching of the constraints. When this parameter is specified, the reset settings (-from/-through/-to) match with the original constrained path settings.  "\fB-fall\fR" Applies the assertion at the falling edge of the signal on the path endpoints.  "\fB{-from | -rise_from | -fall_from} <from_list>\fR" Specifies pins at the start of the path exceptions that are to be reset.  "\fB-rise\fR" Applies the assertion at the rising edge of the signal on the path endpoints.  "\fB{-through | -rise_through | -fall_through} <through_list>\fR" Specifies the pins that the path to be reset goes through.  "\fB{-to | -rise_to | -fall_to} <to_list>\fR" Specifies pins at the end of the path exceptions that are to be reset.  "\fB-setup | -hold\fR" Resets only the setup (or hold) paths.  The -setup/-hold parameters should be used to reset maximum or minimum delay that is set using the set_max_delay and set_min_delay commands.  Default: Both -setup and -hold are reset.  "\fB-type {false_path | multicycle | path_delay}\fR" Removes only path exceptions of the specified type.  Default: All path exception assertions are reset. 
.SH Examples
.RS  "*" 2 In the example below the rising path from R1 to R2 has three different path exceptions asserted on it - they are listed in priority from lowest to highest. As shown in the reports below, the false path is the highest precedence and so no path is reported.  set_multicycle_path -from R1/CK -rise_to R2/D 2  set_max_delay 3 -from R1/CK -rise_to R2/D  set_false_path -from R1/CK -rise_to R2/D  report_timing -from R1/CK -rise_to R2/D  The following information is displayed:  No constrained timing paths with given description found.  Paths may be unconstrained (try '-unconstrained' option) or may not exist.  report_path_exceptions  The following report is displayed:  --------------------------------------  From      To        Early        Late  ---------------------------------------  R1/CK     ^ R2/D    false        false  ---------------------------------------  To report ignored path exceptions, you can use the following command:  report_path_exception -ignored  --------------------------------------------  From     To       Early      Late  --------------------------------------------  R1/CK   ^ R2/D               delay 3 ignored  R1/CK   ^ R2/D    add 0 ignored  R1/CK   ^ R2/D               add 1 ignored  --------------------------------------------  "*" 2 In this example, the false path exception is removed from the path. This causes the max path delay assertion to become active - as it is the next highest precedence.  reset_path_exception -from R1/CK -rise_to R2/D -type false_path  report_path_exceptions  -------------------------------------  From      To       Early     Late  -------------------------------------  R1/CK    ^ R2/D             delay 3  R1/CK    ^ R2/D    add 0  -------------------------------------  report_timing -from R1/CK -rise_to R2/D  Path 1: MET Setup Check with Pin R2/CK  Endpoint: R2/D (^) checked with leading edge of 'CLK_W_1'  Beginpoint: R1/Q (^) triggered by leading edge of 'CLK_W_1'  Path Groups: {CLK_W_1}  Other End Arrival Time 0.000  - Setup 0.097  + Path Delay 3.000  = Required Time 2.903  - Arrival Time 0.243  = Slack Time 2.660  Clock Rise Edge 0.000  + Clock Network Latency (Prop) 0.000  = Beginpoint Arrival Time 0.000  ----------------------------------------------------------------  Load    Slew    Delay    Arrival    Cell    Arc           Pin                           Time  -----------------------------------------------------------------  0.026   0.003            0.000              CK ^          R1/CK ->  0.011   0.063   0.187    0.187      DFF     CK ^ -> Q ^   R1/Q  0.003   0.042   0.056    0.243      BUF     A ^ -> Y ^    B1/Y  0.003   0.042   0.000    0.243      DFF     D ^           R2/D ->  ------------------------------------------------------------------
.RE
.P 
.RS  "*" 2 In this example, the set_max_delay exception is removed, leaving only the set_multicycle_path exception as active.  reset_path_exception -from R1/CK -rise_to R2/D -type path_delay  report_timing -from R1/CK -rise_to R2/D  Path 1: MET Setup Check with Pin R2/CK  Endpoint: R2/D (^) checked with leading edge of 'CLK_W_1'  Beginpoint: R1/Q (^) triggered by leading edge of 'CLK_W_1'  Path Groups: {CLK_W_1}  Other End Arrival Time 0.000  - Setup 0.097  + Phase Shift 20.000  + Cycle Adjustment 20.000 <----- Multi-Cycle timing  = Required Time 39.903  - Arrival Time 0.243  = Slack Time 39.660  Clock Rise Edge 0.000  + Clock Network Latency (Prop) 0.000  = Beginpoint Arrival Time 0.000  -----------------------------------------------------------------  Load    Slew     Delay    Arrival    Cell   Arc           Pin                            Time  -------------------------------------------------------------------  0.026   0.003             0.000             CK ^          R1/CK ->  0.011   0.063    0.187    0.187      DFF    CK ^ -> Q ^   R1/Q  0.003   0.042    0.056    0.243      BUF    A ^ -> Y ^    B1/Y  0.003   0.042    0.000    0.243      DFF    D ^           R2/D ->  -------------------------------------------------------------------
.RE
.RS  "*" 2 In this example, the multi-cycle path assertion is removed, and the analysis reverts back to single-cycle timing   reset_path_exception -rise_to R2/D -type multicycle  report_path_exceptions  # None reported  report_timing -from R1 -rise_to R2/D  # The following report is displayed:  Path 1: MET Setup Check with Pin R2/CK  Endpoint: R2/D (^) checked with leading edge of 'CLK_W_1'  Beginpoint: R1/Q (^) triggered by leading edge of 'CLK_W_1'  Path Groups: {CLK_W_1}  Other End Arrival Time 0.000  - Setup 0.097  + Phase Shift 20.000 <--- Single-cycle timing  = Required Time 19.903  - Arrival Time 0.243  = Slack Time 19.660  Clock Rise Edge 0.000  + Clock Network Latency (Prop) 0.000  = Beginpoint Arrival Time 0.000  ----------------------------------------------------------------  Load    Slew    Delay    Arrival    Cell    Arc           Pin                           Time  -------------------------------------------------------------------  0.026   0.003   0.000                       CK ^          R1/CK ->  0.011   0.063   0.187   0.187       DFF     CK ^ -> Q ^   R1/Q  0.003   0.042   0.056   0.243       BUF     A ^ -> Y ^    B1/Y  0.003   0.042   0.000   0.243       DFF     D ^           R2/D ->  --------------------------------------------------------------------
.RE
.RS  "*" 2 Consider the following set_false_path constraint:   set_false_path -from {u1/Y u2/Y} -to {u3/Y}  When you specify reset_path_exception -from {u1/Y} command without the -exact parameter, the command outputs the following:  set_false_path -from {u2/Y} -to {u3/Y}  The command reset_path_exception -from {u1/Y} -exact outputs the following:  set_false_path -from {u1/Y u2/Y} -to {u3/Y}  In this case (when -exact parameter is used), the path exception is not reset because differential matching is not allowed.
.RE 
.SH Related Information
.RS  "*" 2 set_false_path  "*" 2 report_timing
.RE
.P
