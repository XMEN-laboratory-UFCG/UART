.nf
.P Product Version     22.14    Cadence Design Systems, Inc. 
.fi
.TH setAnalysisMode  22.14 "Fri Oct 06 02:12:27 2023" 
.SH Name \fBsetAnalysisMode\fR \-  Sets global analysis modes for timing analysis
.SH Syntax \fBsetAnalysisMode\fR  [-help]  [-reset]  [-analysisType {single | bcwc | onChipVariation}]  [-asyncChecks {async | noAsync | asyncOnly}]  [-caseAnalysis {true | false}]  [-checkType {setup | hold}]  [-clkNetsMarking {beforeConstProp | afterConstProp}]  [-clkSrcPath {true | false}]  [-clockGatingCheck {true | false}]  [-clockPropagation {sdcControl | forcedIdeal | autoDetectClockTree}]  [-aocv {true | false}]  [-cppr {none | both | setup | hold}]  [-honorActiveLogicView {true | false}]  [-log {true | false}]  [-propSlew {true | false}]  [-sequentialConstProp {true | false}]  [-skew {true | false}]  [-socv {true | false}]  [-timeBorrowing {true | false}]  [-timingEngine {statistical | static}]  [-timingSelfLoopsNoSkew {true | false}]  [-usefulSkew {true | false}]  [-useOutputPinCap {true | false}]   [-warn {true | false}] 
.P Sets global analysis modes for timing analysis. The software uses these modes for all timing analysis commands unless you specify specific modes in the reporting commands. The modes that you specify in the reporting commands override these modes.
.P When you use the setAnalysisMode command, the software sets the following defaults:
.RS  "*" 2 Sets the constants to be propagated while building the timing graph. The software reads the constants from the timing constraints file or the netlist.
.RE
.RS  "*" 2 Sets the analysis mode to accept the module-level timing constraints of the internally specified <set_input_delay> and <set_output_delay> variables for the I/Os of the module for running timing analysis and timing optimization.   The software applies the set_input_delay command and the set_output_delay command on internal pins during timing analysis.
.RE
.RS  "*" 2 Treats the latches as latches.
.RE
.RS  "*" 2 Reports the end points as many times as the number clocks that control that end point.
.RE    Note: Running "timeDesign -postRoute -si [-hold]" with "setAnalysisMode -analysisType bcwc" might lead to incorrect timing analysis results. This is because the SI delay push-outs (or pull-ins for -hold mode) on the clock nets get annotated to both the launch and the capture clock paths resulting in optimistic slacks to be reported. To get accurate timing analysis results, use "setAnalysisMode -analysisType onChipVariation", which requires the design to be run either in multi-mode multi-corner (MMMC) or single-mode single-corner (SMSC) mode. For more information, see the Specifying the MMMC Environment section in the Optimizing Timing chapter of the Innovus User Guide.
.P 
.SH Parameters   "\fB-help\fR" Prints out the command usage.   "\fB-analysisType {single | bcwc | onChipVariation}\fR" Sets the timing analysis type to single, best case worst case, or on-chip variation.  Default: If you read in one library and do not specify any timing analysis type, the software uses single by default. If you read in two libraries and do not specify any timing analysis type, the software uses bcwc by default.  Scales the delay values based on one operating condition. For more information, see SingleTimingAnalysisMode in the Innovus User Guide.  Checks the design for two extreme operating conditions. The software uses the maximum delays for all paths during setup checks and minimum delays for all paths during hold checks. For more information, see BCWCTimingAnalysisMode in the Innovus User Guide.  onChipVariation  Calculates the delay for one path based on maximum operating condition while calculating the delay for another path based on minimum operating condition for setup or hold checks. For more information, see OCVTimingAnalysisMode in the Innovus User Guide.  "\fB-aocv {true | false}\fR" Sets the analysis mode to advanced on-chip variation (AOCV) analysis.  "\fB-asyncChecks {async | noAsync | asyncOnly}\fR" Reports timing violations for asynchronous timing checks, including recovery and removal, and other checks on pins defined as preset or clear in the Liberty file.  Default: async  Reports timing checks on pins that are defined as preset or clear in the Liberty file.  Reports timing violations while ignoring the two time arc attributes.  Reports only recovery and removal checks.  "\fB-caseAnalysis {true | false}\fR" Determines whether constants supplied from the constraint file and netlist should be applied to the analysis.  Specifying -caseAnalysis false parameter blocks the application of constants from the timing constraints file. However, constants that are introduced through the netlist and timing library are still applied and propagated.  Default: true  "\fB-checkType {setup | hold} \fR" Checks the design for setup or hold violations in the current analysis.  Default: setup  Note: When simultaneous setup/hold mode analysis is on, this parameter does not have any impact. You can use the report_timing -late/-early parameter to report setup/hold timing reports.  "\fB-clkNetsMarking {beforeConstProp | afterConstProp}\fR" Note: This parameter is not available in CTE timing analysis mode.  Marks clock nets before or after propagating the constants.  Default: markClkNetsBeforeConstProp  "\fB-clkSrcpath {true | false}\fR" Reports combinational paths from the clock source to the timing checks on data pins.  Note: If -clkSrcPath false is specified and the clock portion of the path is considered as ideal (due to the SDC constraints or the -clockPropagation forcedIdeal parameter setting), the delay calculation software treats the clock nets as ideal nets when calculating the delays and slews along the data path.  For all pre-clock tree synthesis (CTS), optDesign, and timeDesign steps, the software uses -clkSrcPath false in combination with -clockPropagation forcedIdeal to calculate the delays and slews along the data path.  For all post-CTS flow steps, the software uses the default -clkSrcPath true in combination with -clockPropagation sdcControl to calculate the delays and slews along the data path.  Default: true  "\fB-clockGatingCheck {true | false}\fR" Reports the gating checks.  Default: true  "\fB-clockPropagation {sdcControl | forcedIdeal | autoDetectClockTree}\fR" Specifies how to determine whether clock end points are interpreted as having either ideal or propagated clock timing.  Default: sdcControl  Reports the timing violations considering clock tree and enables propagating clocks to report clock latency. You must set the set_propagated_clock constraint to propagate the clocks.  Note: By default, CTS will instruct the timer to make all of the clock roots propagated. In this case, you do not need to set the set_propagated_clock constraint.  Does not report the timing violations considering the clock tree.  autoDetectClockTree  Note: The autoDetectClockTree parameter is obsolete. The timing system will revert to sdcControl, if this parameter is specified.  "\fB-cppr {none | both | setup | hold}\fR" Removes pessimism from clock paths that have a portion of the clock network in common between the clock source and clock destination paths.  The pessimism is introduced when the timing analysis tools assume that the common path has different delay values for two different paths in case of on-chip variation. The pessimism can also be because of clock reconvergence in the clock network. The pessimism effects all analysis modes including single, best case-worst case (bcwc), and on-chip variation.  For more information, see "Clock Path Pessimism Removal" in "Timing Analysis", chapter in the Innovus User Guide.  Note: If you use the -cppr parameter to do optimization, the run time might increase slightly.  Disables removal of clock reconvergence pessimism.  Default: none  Enables removal of clock reconvergence pessimism for both setup and hold modes.  When setAnalysisMode -cppr is specified (without any arguments), the value is set to both.  Enables removal of clock reconvergence pessimism in setup mode only.  Enables removal of clock reconvergence pessimism in hold mode only.  "\fB-help\fR" Outputs a brief description that includes type and default information for each setAnalysisMode parameter.  For a detailed description of the command and all of its parameters, use the man command: man setAnalysisMode.  "\fB-honorActiveLogicView {true | false}\fR" Sets the timing analysis mode to honor Active Logic View (previously referred to as CDTV and Virtual Partition). Instead of analyzing the whole chip, the software analyzes only the nets related to interface paths between the partitions.  The createActiveLogicView command sets -honorActiveLogicView by default, so there is no need to specify setAnalysisMode -honorActiveLogicView true explicitly after specifying createActiveLogicView.  Note: This parameter applies to pre-CTS mode only.  Default: false  "\fB-honorClockDomains {true | false}\fR" Controls whether the software uses clock domains or path groups for timing optimization.  When set to true, optDesign uses standard and user-specified clock domains during timing optimization. The following clock domain related commands are enabled: setClockDomains,clearClockDomains, and reportClockDomains. This setting is backward compatible with the behavior of releases prior to 7.1.  When set to false, optDesign uses path groups during timing optimization. Clock domain related commands are disabled, and any active clock domains are cleared. Path groups can be created and modified using the following commands:group_path, reset_path_group,createBasicPathGroups,setPathGroupOptions,resetPathGroupOptions,reportPathGroupOptions. If no path groups are explicitly created, the software acts as though the basic path groups were created. However, as soon as you create one path group, the basic groups are then cleared.  Note: Path groups and clock domains are mutually exclusive: enabling one methodology disables the other.  Default: false  Note: The -honorClockDomains parameter is now obsolete - support for this flow will be discontinued in a future release of the software. You should update your scripts to be compatible with the path group based flow.  "\fB-log {true | false}\fR" Writes warning messages to the log file.  Default: true  "\fB-propSlew {true | false}\fR" Controls whether slews in early path delay calculation are degraded as they pass across the interconnect from driver to receiver. You can specify a value of false to turn off interconnect slew degradation for early paths and have the driver slews copied to the receivers. Early path delay calculation affects all Hold paths in best-case/worst-case analysis mode, capture clock paths in on-chip variation Setup analysis, and clock launch and data paths in on-chip variation Hold analysis.  Default: true  "\fB-reset\fR" Resets parameters to their default values. The -reset parameter must be the first parameter specified. If you specify -reset by itself, the software resets all setAnalysisMode parameters to their default values. If you specify parameters after -reset, the software resets only those parameters to their default values.  Note: Any values that do not already match the default value and are reset will be reported.  "\fB-sequentialConstProp {true | false}\fR" Propagates constants through sequential elements. If you specify -sequentialConstProp false, constants will stop at sequential elements.  Default: false  "\fB-skew {true | false}\fR" Reports clock skew. The -skew false setting treats all clock latency as 0.  Default: true  With the -skew true setting, you can specify the -clockPropagation parameter.
.RS  "*" 2 Using the default -skew true -clockPropagationsdcControl setting accounts for the clock latency during timing analysis and proceeds as follows:
.RE
.RS
.RS  "*" 2 If the set_propagated_clock command is specified in the timing constraint file, the clock latency is computed from the netlist (propagated mode).
.RE 
.RE
.RS
.RS  "*" 2 If the set_clock_latency command is specified in the timing constraint file, the clock latency specified in the constraint is used.
.RE 
.RE   Otherwise, no latency is reported (ideal mode).  "\fB-socv {true | false}\fR" Enables SOCV analysis.  Default: false  "\fB-timeBorrowing {true | false}\fR" Considers time borrowing during timing analysis. Time borrowing is the amount of time borrowed by a previous logic.  Default: true  "\fB-timingEngine {statistical | static}\fR" Specifies the type of timing analysis to perform.
.RS  "*" 2 statistical: Sets analysis mode to SSTA (statistical static timing analysis).  "*" 2 static: Performs static timing analysis.
.RE   Default: static  Note: This parameter is obsolete. This still works in this release, and will be removed in a future release.  "\fB-timingSelfLoopsNoSkew {true | false}\fR" Eliminates clock skew due to clock uncertainty for a path starting and ending at the same register. If the clock skew is not eliminated, the timing for such paths is pessimistic.  Note: Use this parameter before building the timing graph.  Default: false  "\fB-usefulSkew {true | false}\fR" Considers the latency file (<latency_file>.sdc) during timing analysis. The latency file is generated when you run the skewClock command.  Default: false  "\fB-useOutputPinCap {true | false}\fR" Includes the output pin capacitance when calculating delay values. When you specify -useOutputPinCap false, the software excludes only the pin capacitance of the driver for which you are calculating the delay.  Default: true  "\fB-warn {true | false}\fR" Displays warning messages as the timing constraints file is read.  Default: true 
.SH Examples
.RS  "*" 2 The following command sets timing analysis to report clock skew, suppresses warning messages, and check for setup timing:   setAnalysisMode -checkType setup -skew true -warn false
.RE
.RS  "*" 2 The following commands set the mode for timing analysis to consider latency files, and generate a timing report based on timing with latencies from pre-CTS useful skew:   setAnalysisMode -usefulSkew true  restoreDesign mydesign  report_timing
.RE
.RS  "*" 2 The following commands sets the mode for timing analysis to ignore latency files, and generate a timing report based on timing without latencies from pre-CTS useful skew:   setAnalysisMode -usefulSkew false  report_timing
.RE
.RS  "*" 2 The following command reset the -checkType parameter to its default value:   setAnalysisMode -reset -checkType
.RE
.RS  "*" 2 The following command resets all of the setAnalysisMode parameters to their default values:   setAnalysisMode -reset
.RE 
.SH Related Information
.RS  "*" 2 getAnalysisMode  "*" 2 report_timing
.RE
.P
