.nf
.P Product Version     22.14    Cadence Design Systems, Inc. 
.fi
.TH alignPtnClone  22.14 "Fri Oct 06 02:12:27 2023" 
.SH Name \fBalignPtnClone\fR \-  Aligns partition clones with the master partition on a power mesh and with routing tracks
.SH Syntax \fBalignPtnClone\fR  [-help]   [<ptnName>]   [-outFile <filename>]   [-checkOnly | -snapAllCorners ]   [[-stripeOffset ] | [[-pgHGrid ] [-pgVGrid ] [-pgLayer {layeridList}]   [-updateUserGrid ] [-snapAllCorners ] [-skipFinFETGrid ] [-includeStdCellPinLayers {<layeridList>}]] |   [[-symmetryPatternReference <string>[-symmetryPatternTarget <string>[ [-targetOrientation {R0 R90 R180 R270 MX MX90 MY MY90}]   [-targetOrigin {<x y>}] ]]]] |   [-symmetricOrientation ]]   [-pgLayer {<layeridList>}   [-pgNet <pgNetName> | -pgCenterLine <float>]]   [-pgPitch <float>[-pgCenterLine <float>]] 
.P Aligns partition clones with the master partition on a power mesh and with routing tracks. You can use this command after specifying a master partition and clone partition(s). This will avoid off-track pins in clones and avoid potential DRC violations due to misalignment of power meshes inside clone.
.P Note: The power mesh must be regular for alignPtnClone to work correctly.
.P The alignPtnClone command detects  and highlights any gap or overlap of fence created in an abutted floorplan. 
.SH Parameters    "\fB-checkOnly\fR" Specifies that the design should not be modified. When enabled, it only reports messages.   Data_type: bool, optional  "\fB-help\fR" Outputs a brief description that includes the type and default information for each alignPtnClone parameter.  For a detailed description of the command and all of its parameters, use the man command:   man alignPtnClone  "\fB-includeStdCellPinLayers {<layeridList>}\fR" Specifies the layer(s) of standard cell pins that should be aligned in addition to the user-specified pin layers.  Data_type: string, optional  "\fB-outFile <filename>\fR" Specifies the name of the output file in which to save the master and clone alignment report with details.  Note:  The  alignPtnClone  command supports tracks with multiple definitions. The -outFile parameter reports the details of multi-track definitions.  Data_type: string, optional   "\fB-pgCenterLine <float>\fR" Specifies the center-line of the first virtual symmetric pg stripe (in microns). This option can be repeated.  Data_type: float, optional  "\fB-pgHGrid \fR" Provide information about horizontal PG grid.  Data_type: bool, optional  "\fB-pgLayer {<layeridList>}\fR" Specifies layer(s) for the pg stripe. This option can be repeated.  Data_type: string, optional  "\fB-pgNet <pgNetName >\fR" Specifies name of the pg stripe net name. This option can be repeated.  Data_type: string, optional  "\fB-pgPitch <float>\fR" Specifies pitch of the pg stripe net (in microns). This option can be repeated.  Data_type: float, optional  "\fB-pgVGrid         \fR" Provide information about vertical PG grid.  Data_type: bool, optional  "\fB<ptnName>\fR" Specifies name of the partition.  Note: If the partition name is not specified, the command is run on all partitions.  Data_type: string, optional  "\fB-skipFinFETGrid\fR" Disables alignment with the FinFet grid.  Data_type: bool, optional  "\fB-snapAllCorners \fR" Snaps all corners of master and its clone partition to the user grid.  Note: The -snapAllCorners  parameter fixes partition overlaps.   Data_type: bool, optional  "\fB-stripeOffset\fR" When specified ensure backward compatibility and and enables the use of obsolete -snap, -track, -useUserGrid, -skip_row, and -layer  parameters   Note: The alignPtnClone command supports advanced node fully abutted designs. It moves the clone partition for aligning with the master with all allowed routing tracks by default. It snaps clones such that the pins are never off grid. Consequently, the -snap, -track, -useUserGrid, -skip_row, and -layer parameters are obsolete. Even though the use of snap, -track, -useUserGrid, -skip_row, and -layer parameters is supported in this release using the -stripeOffset parameter for backward compatibility, the -stripeOffset parameter itself is obsolete and will be removed in a future release. To avoid warnings and to ensure compatibility with future releases, remove the obsolete parameters from your script.  Data_type: bool, optional   "\fB-symmetricOrientation\fR" Checks the orientation between each pair of partitions and fixes the symmetry by finding the optimum symmetric orientation of clones.  Note: If Innovus suggests changing the orientation of a partition, it indicates it as (diff) in the report for quick identification.  Note: The -symmetricOrientation parameter can find orientations based upon nested hierarchy. If the alignPtnClone command finds no clone connectivity, it can reports the expected orientations and supports nested designs.   Data_type: bool, optional   "\fB-symmetryPatternReference <string>\fR" Specifies the names of the partitions that are used as a reference set to maintain a symmetrical pattern for the other set of clone partitions in the group.   Note: The first partition in the list is considered as the seed partition from which all the relative locations and orientations are calculated for the rest of the partitions in the list.  Data_type: string, optional  "\fB-symmetryPatternTarget <string>\fR" Specifies the names of the partitions that are used as a target set to maintain a symmetrical pattern relative to the reference set of partitions in the group.   Note:  
.RS  "*" 2 The number of partitions and their order must be the same as that specified with the -symmetryPatternReference parameter.   "*" 2 The current location and orientation of the seed partition is used to relatively move the other partitions in the list. The first partition in the list is considered as the seed partition from which all the relative locations and orientations are calculated for the rest of the partitions in the list.  "*" 2 You can specify master partitions in the target partitions set list. However, master partitions can only have R0 orientation.
.RE   Data_type: string, optional  "\fB-targetOrientation {R0 R90 R180 R270 MX MX90 MY MY90}\fR" Specifies the new orientation of the seed partition of the target partition set (-symmetryPatternTarget). The specified orientation overrides the current orientation of the seed partition and enables you to maintain the relative orientation of the different pairs of clones.  Note: 
.RS  "*" 2 The seed partition is the first partition specified with the -symmetryPatternTarget parameter from which all the relative locations and orientations are calculated for the rest of the partitions in the list.  "*" 2 The orientation of the master partitions cannot be changed.
.RE   Data_type: enum, optional   "\fB-targetOrigin {x y}\fR" Specifies the new origin of the seed partition of the target partition set (-symmetryPatternTarget). The specified location overrides the current location of the target seed partition.  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   Note:
.RS  "*" 2 It does not let the target seed partition go outside the core boundary.  "*" 2 The seed partition is the first partition specified with the -symmetryPatternTarget parameter from which all the relative locations and orientations are calculated for the rest of the partitions in the list.
.RE   Data_type: point, optional   "\fB-updateUserGrid\fR" Updates the user grid with the new values.  Data_type: bool, optional 
.SH Example
.RS  "*" 2  The following command aligns the partition clones with the master partition and displays a report:  alignPtnClone  ====================================================================================                   alignPtnClone Summary  ====================================================================================  Partition                   | Orientation |   Status   | Moved-by(X) | Moved-by(Y)   ====================================================================================  MASTER_CLONE(I_MC_1)        |             |    Aligned |             |             |  +I_MC_0                     |     MY      |    Aligned |             |             |  MC(I_A/A_MC)                |             |    Aligned |             |             |  +I_B/B_MC                   |     R0      |    Aligned |     -0.2000 |      0.0000 |  K(k4)                       |             |    Aligned |             |             |  +k3                         |     MY      |    Aligned |      0.2000 |     -0.4450 |  +k2                         |     R0      |    Aligned |      0.0000 |      0.0600 |  +k1                         |     R90     | Infeasible |             |             |  b(b1)                       |             |    Aligned |             |             |  +b3                         |     R0      |    Aligned |      0.0000 |      0.1800 |  +b2                         |     R0      |    Aligned |      0.0000 |     -0.3250 |  c(c1)                       |             |    Overlap |             |             |  S(s1)                       |             |    Overlap |             |             |  ====================================================================================  "*" 2  The following command snaps clones of module eug to Master's power grid:  alignPtnClone eug   "*" 2  The following command aligns with all allowed tracks and automatic detection of pg layers, nets, and pitch of pg grid  alignPtnClone eug -pgHGrid -pgVGrid   "*" 2  The following command aligns with all tracks and automatic detection of pg nets and pitch of pg grid  alignPtnClone eug  -pgHGrid -pgLayer { 2 4 6 } -pgVGrid -pgLayer { 3 5 7}   "*" 2  The following command aligns with all tracks and automatic detection of pg pitch of pg grid  alignPtnClone eug -pgHGrid -pgLayer { 2 4 6 } -pgNet VSS -pgLayer {4 6} -pgNet VDD -pgVGrid -pgLayer { 3 5 } -pgNet VSS -pgLayer {5 7} -pgNet VDD   "*" 2  The following command aligns with all allowed tracks and specified pg grid  alignPtnClone eug -pgHGrid -pgLayer { 2 4 6 } -pgNet VSS -pgPitch 1.48 -pgNet VDD -pgPitch 1.28 -pgVGrid -pgLayer { 3 5 7 } -pgNet VSS -pgPitch 1.48 -pgNet VDD -pgPitch 1.28   "*" 2 The following command updates the user grid and simulates symmetric PG stripe pattern:  alignPtnClone -updateUserGrid -pgVGrid -pgLayer M4 -pgPitch 5.76 -pgCenterLine 0.0 -pgHGrid -pgLayer M5 -pgPitch 46.08 -pgCenterLine 1926.72 -checkOnly 
.RE 
.SH Related Information
.RS  "*" 2 checkPinAssignment  "*" 2 partition  "*" 2 Partitioning the Design chapter in the Innovus User Guide 
.RE
.P
