.nf
.P Product Version     22.14    Cadence Design Systems, Inc. 
.fi
.TH writeIntegRouteConstraint  22.14 "Fri Oct 06 02:12:27 2023" 
.SH Name \fBwriteIntegRouteConstraint\fR \-  Writes the constraints to an output file in the following order: diffPair, matchLength, bus, netClass, NDR, shield, and additional
.SH Syntax \fBwriteIntegRouteConstraint\fR  [-help]  -file <output_file>  [-net <net_name> | -name <string>  | -additional]
.P Writes the constraints to an output file in the following order: diffPair, matchLength, bus, netClass, NDR, shield, and additional.
.P Notes 
.RS  "*" 2 Integration constraints are used to convey the design intent in a mixed-signal design. These constraints are fully interoperable between the digital and custom environments.  "*" 2  If the design contains one or more complex netClass constraints with net members that have different constraints, writeIntegRouteConstraint reports the following warning:  **WARN: (IMPOAX-2124): This design contains unknown complex constraint on complexNetClass '<contraint_name'>. This is not an interoperable routing constraint for Innovus. When sourcing the resulting file from this command in Innovus, these complex constraints will be lost. You can see the complex constraints in the design in the integration constraint form.
.RE 
.SH Parameters   "\fB-help\fR" Prints a brief description that includes the type and default information for each writeIntegRouteConstraint parameter.  For a detailed description of the command and all of its parameters, use the man command:   man writeIntegRouteConstraint  "\fB-additional\fR" Writes the path to the additional constraint file, which contains the maximum resistance target values for nets.   "\fB-file output_file\fR" Specifies the output file name that is to be written out.  "\fB-name <string>\fR" Writes information for the specified constraint by name. Use the getIntegRouteConstraint command to get the name of any constraint in the design.  You can specify multiple constraint names, enclosed in braces.  "\fB-net <net_name> \fR" Writes the constraint defined on specified net. If the net is part of a netClass, writes constraints for the netClass. You can specify multiple net names, enclosed in braces. 
.SH Examples
.RS  "*" 2 The following command writes the constraints in the output file called myfile.rpt:   writeIntegRouteConstraint -file myfile.rpt  The file myfile.rpt could have the following sample constraints that are written out:  
.RS  "*" 2 For diffPair constraint  setIntegRouteConstraint -type diffPair -name Constr_3__analogNL__DTMF_INST/analogNL_INST -tolerance 20 \\  -rule default \\  -net { \\  DTMF_INST/digsyncc \\  DTMF_INST/digsyncd \\  }  "*" 2 For matchLength constraint  setIntegRouteConstraint -type matchLength -name Constr_4__analogNL__DTMF_INST/analogNL_INST -tolerance 20   -matchStyle accordion \\   -rule default \\   -net { \\   DTMF_INST/digsync3 \\   DTMF_INST/digsync4 \\   }  "*" 2 For netClass constraint  setIntegRouteConstraint -type netClass -name Constr_11__analogSW__DTMF_INST/analogSW_INST \\   -shieldNet VSS -shieldType side -connectSupply anyPoint \\   -rule NDR8 \\   -net { \\   analogW2I \\   }  "*" 2 For shield constraint  setIntegRouteConstraint -type shield -shieldNet {VSS} -shieldType side \\  -shieldTolerance 30 -net {tdigit[0] tdigit[1] tdigit[2] tdigit[3] tdigit[4] tdigit[5] \\  tdigit[6]tdigit[7]}  "*" 2 For an additional constraint  setIntegRouteConstraint -type additional -file 1.txt
.RE 
.RE
.RS  "*" 2 The following command writes a constraint file called test.const for the constraint named Constr_2__analogNW__DTMF_INST/analogNW_INST:  writeIntegRouteConstraint -file test.const -name Constr_2__analogNW__DTMF_INST/analogNW_INST  The output is as follows:  setIntegRouteConstraint -type diffPair -name Constr_2__analogNW__DTMF_INST/analogNW_INST -tolerance 20 \\   -rule default \\   -net { \\   DTMF_INST/cntrlxo[3] \\   DTMF_INST/cntrlxo[2] \\   }  "*" 2 The following command writes a constraint file with name temp.const for the constraint defined on net analogW1I:   writeIntegRouteConstraint -file temp.const -net analogW1I  The output is as follows:  setIntegRouteConstraint -type netClass -name Constr_10__analogSW__DTMF_INST/analogSW_INST \\   -shieldNet VSS -shieldType side -connectSupply anyPoint \\   -rule NDR8 \\   -net { \\   analogW1I \\   }  "*" 2  The following command writes a constraint file named test1.const for the specified constraint names:  writeIntegRouteConstraint -name {Constr_2__analogNW__DTMF_INST/analogNW_INST Constr_1__analogNW__DTMF_INST/analogNW_INST} -file test1.const  The output is as follows:  #Integration constraints ascii out for { ADTMF4 dtmf_chip NoConst_10_18 }  setIntegRouteConstraint -type diffPair -name Constr_2__analogNW__DTMF_INST/analogNW_INST -tolerance 20 \\   -rule default \\   -net { \\   DTMF_INST/cntrlxo[3] \\   DTMF_INST/cntrlxo[2] \\   }  setIntegRouteConstraint -type diffPair -name Constr_1__analogNW__DTMF_INST/analogNW_INST -tolerance 5 \\   -rule default \\   -net { \\   DTMF_INST/cntrlxo[0] \\   DTMF_INST/cntrlxo[1] \\   }  "*" 2  The following command writes a constraint file named test2.const for the specified net names:  writeIntegRouteConstraint -net {DTMF_INST/cntrlxo[3] DTMF_INST/cntrlxo[0]} -file test2.const  The output is as follows:  #Integration constraints ascii out for { ADTMF4 dtmf_chip NoConst_10_18 }  setIntegRouteConstraint -type diffPair -name Constr_2__analogNW__DTMF_INST/analogNW_INST -tolerance 20 \\   -rule default \\   -net { \\   DTMF_INST/cntrlxo[3] \\   DTMF_INST/cntrlxo[2] \\   }  setIntegRouteConstraint -type diffPair -name Constr_1__analogNW__DTMF_INST/analogNW_INST -tolerance 5 \\   -rule default \\   -net { \\   DTMF_INST/cntrlxo[0] \\   DTMF_INST/cntrlxo[1] \\   }
.RE 
.SH Related Information
.RS  "*" 2 deleteIntegRouteConstraint  "*" 2 getIntegRouteConstraint  "*" 2 setIntegRouteConstraint  "*" 2 Routing Constraint Interoperability chapter in the Mixed Signal Interoperability Guide  "*" 2 Tools Menu chapter in the Menu Reference 
.RS  "*" 2 Mixed Signal -> Integration Constraint Editor
.RE 
.RE
