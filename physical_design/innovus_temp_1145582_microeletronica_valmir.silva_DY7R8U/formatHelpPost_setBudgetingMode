.nf
.P Product Version     22.14    Cadence Design Systems, Inc. 
.fi
.TH setBudgetingMode  22.14 "Fri Oct 06 02:12:27 2023" 
.SH Name \fBsetBudgetingMode\fR \-  Sets the timing budgeting mode
.SH Syntax \fBsetBudgetingMode\fR  [-help]  [-abutted {true|false}]  [-accumulated {true|false}]  [-boundaryConditionTemplatePath <directory_path>]  [-bufferDelayAdjustment <value>]  [-bufferDelayLibCell <libname>/<cellname>]  [-bufferDelaySelectionEffort {low|high}]  [-ccd {true|false}]  [-constantModel {true|false}]  [-distributeMMMC {true|false}]  [-driveCell {true|false}]  [-fixTopLevelPaths {none|all|negativeOnly|positiveOnly}]  [-handleComplexSDC {true|false}]  [-honorReportTimingFormat {true|false}]  [-ignoreDontTouch {true|false}]  [-includeLatency {true|false}]  [-includeWireLoadsInLib {true|false}]  [-inputLoad {true|false}]  [-inputTransition {true|false}]  [-justify {delay|exception|lib_arc|boundary_condition|all}]  [-justifyBudgetDir <directory_name>]  [-keepPinListsForBlockPorts {true|false}]  [-latencyOnClocks {true|false}]  [-localLatency {true|false}]  [-localUncertainty {true|false}]  [-makeNegativeInputDelayZero {true | false}]  [-masterClone {masterOnly|merged|uniqueViewPerHInst}]  [-noFalsePathsForUnCstrPorts {true|false}]  [-noSetupView {true|false}]  [-noHoldView {true|false}]  [-overrideNetCap <value>]  [-pinLoad {true|false}]  [-reportOrModifyBudget {true|false}]  [-reset]  [-rptNegSlackOnPorts <value>]  [-snapFdBudgetTo <value>]  [-snapInputBudgetTo <value>]  [-snapNegativeOnly {true|false}]  [-snapOutputBudgetTo <value>]  [-stageBasedFanoutDrivingFactor <value>]  [-stageBasedPartitionMultiplier {{HInst1 m1} {HInst2 m2}..}]  [-stageBasedWeight {S  | C  | B}]  [-topLevel <value>]  [-topLevelDelayPerLen <value>]  [-topLevelMinDelayPerNet <value>]  [-useBoundaryCondition {optimized | template | actual | empty}]  [-useRealCellForTimingModel {true|false}]  [-virtualOptEngine {none|earlyTimingEngine|proto}]  [-writeConstraintsForClkOutputPorts {true|false}]  [-writeFPForHold {true|false}]  [-writeLatencyPerClock {true|false}]
.P Sets the timing budgeting mode. This command governs the way budgets are derived and saved. All parameters relevant to saving or deriving can be specified with this command. 
.SH Parameters   "\fB-help\fR" Outputs a brief description that includes the type and default information for each setBudgetingMode parameter. For a detailed description of the command and all its parameters, use the man command:  man setBudgetingMode  "\fB-abutted {true | false}\fR" Specifies that the software abuts the partitions when allocating budgets from positive slack paths. With this parameter, the software assumes that all partitions are abutted and therefore the software does not allocate extra delay at the top-level.  Default: false  Note: The software automatically handles the abutted partitions (both partial and full) even when you do not specify this parameter.  "\fB-accumulated {true | false}\fR" Generates SDC for lower-level hierarchy child partition in the
.lib and flat forms (L3 as shown in the example below). The following example also presents the matrix to understand the behavior of the -accumulated parameter at different levels of hierarchy:  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   With the help of the -accumulated parameter, SDC supports generation of constraints in the specified child partition through a Tcl variable-enabled conditional loop, as shown below:  if {$budget_use_accumulated != 1}{    #Constraints considering child partition in the
.lib form  } else {    #Constraints considering child partition in the flat form  }  Note:
.RS  "*" 2 A single viewDefinition.tcl or SDC file can support both the
.lib or flat flows. This is because there are conditional loops in the viewDefinition.tcl and SDC files.  "*" 2 Conditional loops are controlled by a Tcl variable named budget_use_accumulated. The default value of this Tcl variable is 0, which specified that constraints will be processed considering the child partition in the
.lib form. You need to run set budget_use_accumulated 1 before loading the design for processing the constraints considering the child partition in the flat form.  "*" 2 This parameter does not impact the output of the viewDefinition.tcl and SDC files for the bottom-most partitions.
.RE   Default: false  "\fB-boundaryConditionTemplatePath <directory_path>\fR" Specifies the directory path containing the model files to be used for generating template-based boundary condition through the -useBoundaryCondition template parameter. Hence, the -boundaryConditionTemplatePath parameter allows you to specify your own template file for generating boundary conditions.  The directory path specified with this parameter should have boundary model files for each view with the file name format as view_name.model. If the model files are missing for any view, an error is prompted. If a view is both setup and hold, the same model will be used.  Default: ""  "\fB-bufferDelayAdjustment <value>\fR" Specifies the delay for virtual buffer adjustment. If you specify 0, there will be no adjustment. If this parameter is specified without a value, timing budgeting performs regular virtual buffering.  Default: 0  "\fB-bufferDelayLibCell <libname/cellname>\fR" Specifies the buffer that should be used for virtual buffer adjustment. This is applicable in cases of regular virtual buffering, which can be overridden by the -bufferDelayAdjustment parameter.  "\fB-bufferDelaySelectionEffort {low|high}\fR" Controls the virtual buffer selection effort for calculating the buffer delay adjustment. The two effort levels are:
.RS  "*" 2 low: use buffer selection algorithm based on drive strength  "*" 2 high: use buffer selection algorithm based on actual one buffer delay
.RE   Default: low  "\fB-ccd {true|false}\fR" Generates scripts for verification of time budgeting top and block constraints against pre-budget chip constraints using the Conformal Constraint Designer software.  Default: false  "\fB-constantModel {true|false}\fR" Specifies the type of timing model created. The -constantModel parameter specifies that constant timing models are created.  Default: true  "\fB-distributeMMMC{true|false}\fR" Controls the distribution of MMMC views for budgeting. The distribution could be on the same machine or different machines on a farm/lsf.  Default: false  "\fB-driveCell{true|false}\fR" Writes out the boundary drive information for input pins in the generated SDC file, using the set_driving_cell constraint. If not specified, the set_drive constraint is written.  This is used to model transition on input port based on load attached to the drive cell.  Default: false  "\fB-fixTopLevelPaths {none | all | negativeOnly | positiveOnly}\fR" Fixes the top-level timing budget and proportions the remaining timing budget only for the partitions based on the specified value. Use one of the following parameter values:
.RS  "*" 2 none: Fixes the default proportionate budgeting.  "*" 2 all: Fixes budgeting only for the partitions.  "*" 2 negativeOnly: Fixes budgeting only for the partitions with negative slack paths.  "*" 2 positiveOnly: Fixes budgeting only for the partitions with positive slack paths.
.RE   Default: none  "\fB-handleComplexSDC {true|false}\fR" Specifies to use Common Timing Engine's write_sdc for correct push down in case of nested/complex SDC constraints. It can be used when there are regular expressions in SDC constraints.  Default: false  "\fB-honorReportTimingFormat {true|false}\fR" Honors the global variable set through set_globalreport_timing_format by the user in the justification reports, which are generated through the deriveTimingBudget -justify parameter. This parameter keeps justification reports and columns of report_timing in the same format as set by the user.  Note: This parameter may impact the turnaround time of the create_timing_budget -justify parameter.  Default: false  "\fB-ignoreDontTouch {true|false}\fR" Specifies the handling of don't touch (fixed) objects
. The parameter allows you to modify these objects also.  Default: false  "\fB-includeLatency {true|false}\fR" Specifies whether the clock latency is included in the set_input_delay and set_output_delay constraints.  Note: The clock latency is always included if the design has propagated clock(s) irrespective of this parameter.  set_input_delay and set_output_delay change and are based on actual arrival times.  Default: true  "\fB-inputLoad {true|false}\fR" Specifies whether the set_load constraints have to be written for input pins in the generated SDC file. With this option, load constraint on ports is specified.  Default: false  "\fB-includeWireLoadsInLib {true|false}\fR" Specifies to include the wire loads in library model pin capacitance to handle high interface net loads. It provides extra information in
.lib file for more accurate modelling.  Default: false  "\fB-inputTransition {true|false}\fR" Writes out input transition time in the budgeting output files for input pins in the generated SDC file, using the set_input_transition constraint. If not specified, the set_drive constraint is written. You must enter the transition value directly.  Default: false  "\fB-justify {delay|exception|lib_arc|boundary_condition|all}\fR" Controls the type of justification and also decides whether or not to generate the justification reports. You may use one or more of the following values with this parameter:
.RS  "*" 2 delay: Budget justification files for all the partition IO ports are generated.  "*" 2 exception: Budget justification files for all the partition IO ports are generated with exception data.  "*" 2 lib_arc: Justification files for libs are generated.  "*" 2 boundary_condition: Justification files for the boundary conditions used in the constraint files are generated.  "*" 2 all: All the justification files are generated.
.RE   Note: When this parameter is used without any value, no justification files are generated. Only the summary is generated.  Default: ""   "\fB-justifyBudgetDir <directory_name>\fR" Directs output of budget justification to the specified directory and dumps the summary files.  Default: budget justify  "\fB-keepPinListsForBlockPorts{true|false}\fR" Specifies to preserve all fan-in and fan-out pin lists for block ports.  The default value is true. When set to true, the runtime will be the fastest but involves high memory usage. The value of false means that the peak memory consumed will decrease but with an increase in runtime.  You can use this parameter to control memory consumption and runtime for budgeting processes. It does not affect other functions when specified.  Default:true  "\fB-latencyOnClocks {true|false}\fR" Writes the set_clock_latency constraint on the clocks instead of ports in the generated SDC files. Use this parameter when you have multiple clocks on the same port.  Default: Writes the set_clock_latency constraint on the ports.  Default: false  "\fB-localLatency {true|false}\fR" Adjusts the set_clock_latency constraint information that you specify using the setPtnUserCnsFile command to the constraints file generated after budgeting.  When you specify this parameter, the software checks whether the set_clock_latency constraint specifies a clock or a port.  If the constraint specifies a clock and the clock exists in the partition, then the constraint is added to the constraints file generated after budgeting. If the clock does not exist in the partition, the software does not write out the constraint.  If the constraint specifies a port, the constraint is added to the constraints file generated after budgeting.  The source latency is calculated as follows:  source latency = top-level source latency + top-level network latency - local network latency  Default: false  "\fB-localUncertainty {true | false}\fR" Adds the set_clock_uncertainty constraint information that you specify using the setPtnUserCnsFile command to the constraints file generated after budgeting.  When you use this parameter, the constraint file generated after budgeting has input and output delays using virtual clocks instead of real clocks in the SDC file. The software uses the virtual clocks to differentiate the clock uncertainty for external paths (paths that are coming from or going to the top-level) and internal paths of the partition.  "\fB-makeNegativeInputDelayZero {true | false}\fR" Specifies to adjust negative set input delay to 0.  Default: false  "\fB-masterClone {masterOnly|merged|uniqueViewPerHInst}\fR" Specifies how the constraints are generated for master and clone designs. Following is the description of the parameter values:
.RS  "*" 2 masterOnly: Derives budgets only for the master partition/inst.  "*" 2 merged: Derives budgets based on the worst case data per pin for the master and all its clones.  "*" 2 uniqueViewPerHInst: For partitioned block, creates a corresponding view for each instance of the master and all its clones, where timing constraints are generated considering this instance timing separately. So total number of new views in block viewDefination.tcl is equal number of instances multiflied with the number of views. For partitioned TOPs
.lib model, the merged approach is followed. So that there would be only one
.lib per view for every partition. No additional views are created for partitioned TOP.
.RE   Default: masterOnly  "\fB-noFalsePathsForUnCstrPorts {true|false}\fR" Specifies not to create false paths for unconstrained ports.  Default: false  "\fB  -noHoldView {true|false}    \fR" Specifies to derive budgets only for setup views. Dummy files are created for the hold view as budgeting is not done for them.  Default: false  "\fB-noSetupView {true|false} \fR" Specifies to derive budgets only for hold views. Dummy files are created for the setup view as budgeting is not done for them.  Default: false  "\fB-overrideNetCap <value>\fR" Specifies the lump capacitance value. The software uses this value when you use the -preliminary parameter in the deriveTimingBudget command.  Default: 100ff  "\fB-pinLoad {true|false}\fR" Writes out the set_load with -pin_load information for output pins in the generated SDC file.  Default: false  "\fB-reportOrModifyBudget {true|false}\fR" Specifies to enable the collection of data required to use themodifyBudget command. You must specify this parameter before budgeting to run modifyBudget later in the flow.  If this parameter is not specified, the modifyBudget command does not produce any results.  Default: false  "\fB-reset\fR" Resets parameters to their default values. The -reset parameter must be the first parameter specified. If you specify -reset by itself, the software resets all setBudgetingMode parameters to their default values. If you specify parameters after -reset, the software resets only those parameters to their default values.  Any values that do not already match the default value and are reset. will be reported.  "\fB-rptNegSlackOnPorts <value>\fR" Reports if partition ports have a slack less than the specified value and saves this information in the
.warn file. The slack is calculated based on data arrival time and clock time at data sampling points. The report is saved to the
.warn file.   "\fB-snapFdBudgetTo <value>\fR" Specifies the minimum delay value (in picoseconds) for the path from partition input port to partition output port. If, during timing analysis, the path segment delay used to generate budgeting constraints for the partition ports falls below the specified threshold value, the delay segment is snapped to the specified value and is considered as a fixed delay during budget allocation for the path.  The
.warn file does not issue a warning for feedthrough segments. By default, the software distributes a delay equivalent of two medium-sized buffer delays among the feedthrough segments. As a result, it is unlikely that the feedthrough segment delay will fall below a reasonable value.  "\fB-snapInputBudgetTo <value>\fR" Specifies the minimum delay (in picoseconds) for the path from the partition input port to the internal register. If, during timing analysis, the path segment delay falls below the specified threshold value, the delay segment is snapped to the specified value and is considered as a fixed delay during budget allocation for the path.  Note: During timing analysis, the path segment delay could be greater then the specified value; however, after budget allocations, the allocated delay for the partition can still become smaller than the specified threshold value. The software checks the delays allocated to partitions for input and output paths and creates appropriate warning messages in the partition
.warn file.  "\fB-snapNegativeOnly {true | false}\fR" Considers only the negative slack paths when used with -snapInputBudgetTo and -snapOutputBudgetTo.  Default: false  "\fB-snapOutputBudgetTo <value>\fR" Specifies the min delay (in picoseconds) for the path from the internal register to the partition output port. If, during timing analysis, the path segment falls below the specified threshold value, then the delay segment is snapped to the specified value and is considered as a fixed delay during budget allocation for the path.  "\fB-stageBasedFanoutDrivingFactor <value>\fR" Specifies the fanout count of the pin, according to which the buffer stages are added in the timing graph. This parameter provides the basis for the software to calculate the number of fanouts and buffer stages to be virtually added for each stage according to the following table:  Fanout Range                  Number of Buffer Stafe Added (n):1 to d1 to d                                        0  (d+1) to d2                                         1  (d2+1) to d3                                       2  (d3+1) to d4                                       3 
..                                                         
..   If the weight of the original cell is w, weight of the buffer is b, and the number of buffer stages is n, then:  Final weight of cell = w + (b*n)  See the example below for understanding the functioning of the -stageBasedFanoutDrivingFactor parameter.  setBudgetingMode -stageBasedWeight {3 2 1}  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   Default: -1   "\fB-stageBasedPartitionMultiplier {{HInst1 m1} {HInst2 m2}..}\fR" Specifies the weight multiplication factor for the partition hinsts. Those hInsts, which are not explicitly mentioned, will have the default weights. If the weights of hinsts have been specified using the setBudgetingMode -stageBasedWeight parameter, those are used with their default weights. Else, the default weights (1 for sequential cell, 1 for combinational cell, and 0 for buffer/inverter) are used. In case of nested partitions, if the child partition multiplier is not specified explicitly, then it will have its parent's multiplier. If parent and child partitions have separate multipliers, then they will be honored.  See the example below for understanding the usage of this parameter:  setBudgetingMode -stageBasedWeight {2 1 1}  setBudgetingMode -stageBasedPartitionMultiplier {{PTN1 2} {PTN2 3}}  Cycle time = T  Budget for PTN1= 8/19 T  Budget for PTN2= 9/19 T  Budget for top = 2/19 T  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   Default: ""  "\fB-stageBasedWeight {S  | C  | B}\fR" Specifies default weights of the sequential, combinational, and buffer/inverter cells for the stage-based timing budgeting. Following are the default weights of these cells:
.RS  "*" 2 Sequential: 1  "*" 2 Combinational: 1  "*" 2 Buffer/inverter: 0
.RE   Default: {1 1 0}  "\fB-topLevel <minimumValue>\fR" Specifies the minimum percentage of total available budget set aside for the top level. This parameter can take any value between 0 - 1.
.RS  "*" 2 0 - indicates no slack to top (100%  to block).  "*" 2 1 - maximum value that indicates full slack to top (0 %  block)
.RE   Default: -1 (indicates regular slack or reset of the top level)   "\fB-topLevelDelayPerLen <value>\fR" Specifies the top-level estimated delay (in picoseconds) per millimeter length. The software uses this value when you use the -preliminary parameter in the deriveTimingBudget command.  For more information on the use of the -topLevelDelayPerLen parameter, see "Deriving Preliminary Budgets in Early Design Phase" in the Timing Budgeting chapter of the Innovus User Guide.  Default: 180ps/mm  "\fB-topLevelMinDelayPerNet <value>\fR" Specifies the top-level minimum delay-per-net value in picoseconds/millimeter units. The software uses this value when you use the -preliminary parameter in the deriveTimingBudget command.  For more information on the use of the -topLevelMinDelayPerNet parameter, see "Deriving Preliminary Budgets in Early Design Phase" in the "Timing Budgeting" chapter of the Innovus User Guide.  Default: 100ps/mm  "\fB-useBoundaryCondition {optimized|template|actual|empty}\fR" Specifies the criteria for choosing boundary conditions. Following are the usages of the parameter values:
.RS  "*" 2 optimized: The values of boundary conditions are fetched from the engine used to build timing graph. If the engine does not provide any values, than the template is used automatically and a warning is displayed indicating that no optimized boundary conditions are available, and the template is used automatically. For example, -useBoundaryCondition {optimized} for -virtulaOptEngine {proto | none} will display such a warning.  "*" 2 template: The values of boundary conditions are derived automatically and used through the default template.  Note: The default templates are saved as budget_model/<view_name>.model.  "*" 2 actual: Uses the actual netlist to build the timing graph.  "*" 2 empty: No boundary condition is dumped.
.RE   Default: template  "\fB-useRealCellForTimingModel {true|false}\fR" Use actual gate connected to the partition port to write out the model timing arc, else medium size buffer is used.  Default: false  "\fB-virtualOptEngine {none|earlyTimingEngine|proto}\fR" Specifies the virtual optimization engine to be used. The values of this parameter include:  none  Specifies that the timing graph is generated through report_timing.  earlyTimingEngine  Specifies that the timing graph is generated by optVirtual -earlyTimingEngine.  proto  Specifies that the timing graph is generated by prototype timing.  Default: none  Note: User can use ART (createActiveLogicView -type timing_budget) before generating the timing graph to reduce TAT and memory during budgeting flow.  "\fB-writeConstraintsForClkOutputPorts {true|false}\fR" Specifies to write extra constraints on the output port of block SDC.
.P When this parameter is specified, the following extra constraints are written out:
.RS  "*" 2 set_clock_sense - this constraint is dumped if the clock is used as data going forward after partition  "*" 2 create_generated_clock - this constraint is dumped if the clock is used as clock going forward after partition
.RE   If the clock is used as both data and clock going forward, the parameter does not write out these extra constraints.  Default: false  "\fB-writeFPForHold {true|false}\fR" Writes false_path -hold constraints for all I/Os when deriving timing budgets in setup mode.  For inputs, the saveTimingBudget command writes the following constraint:  set_false_path -from port -hold  For outputs, the saveTimingBudget command writes the following constraint:  set_false_path -to port -hold   Default: false  "\fB-writeLatencyPerClock {true|false}\fR" Specifies to write latency per clock instead of per port. When you set this variable to true,  set_clock_latency is written per clock if multiple clocks enter the partition through the same port.  Default: false 
.SH Examples
.RS  "*" 2 The following set of commands load database for timing budgeting:  setBudgetingMode -stageBasedWeight {3 2 1}   setBudgetingMode -stageBasedPartitionMultiplier {{PTN1 2} {PTN2 3}}  setBudgetingMode -stageBasedFanoutDrivingFactor 8  deriveTimingBudget -stageBased  "*" 2 The following command sets the input and output budgets to 3000:  setBudgetingMode -snapInputBudget 3000 -snapOutputBudget 3000  The resulting message appear in the
.warn file when you generate budgets.  /* Start Section: Pin constraint values less than defined threshold time  (setup)*/  Input Threshold Value: 3.000  Output Threshold Value: 3.000  Constraint: set_output_delay 11.524 -clock {CLK2} -max -rise [get_ports {sub1_out1}]  allocates block delay less than input threshold time.  Block delay: 0.476  Constraint: set_output_delay 11.524 -clock {CLK2} -max -fall [get_ports {sub1_out1}]  allocates block delay less than input threshold time.  Block delay: 0.476  /* End Section: Pin constraint values less than defined threshold time (setup)*/  justifyBudget header example:  Budgeted constraint type: set_output_delay(setup rise)  Initial budget available time = 12.000  One Buffer Delay for Adjustment(cell ssiv): 1.000  Fixed Delay for Feedthrough Paths(fixFdThru)= (2 x 1.000) = 2.000  External Segment Fixed Delay From Budget Snap(snapExtFixedDel) = 5.000  Total External Segment Fixed Delay(extFixDel) = 5.000  This Block's Segment Fixed Delay from budget snap(snapIntFixedDel) = 1.000  Total This Block's Segment Fixed Delay(intFixDel) = 1.000  External Segment Extra Delay From Budget Snap (snapExtDelExtra) = 2.000  This Block's Extra Delay From Budget Snap (snapIntDelExtra) = 1.000  Path Extra Delay From Budget Snap (snapExtraDel) = (2.000 + 1.000) = 3.000  Fixed Delay on the Path(pathFixDel) = (5.000 + 1.000 + 1.000 + 2.000) = 9.000  Fixed Delay Adjustment(fixDel)= 9.000  Clock Skew(clkSkew): 0.000  Adjustment for budget available time= -(pathFixDel + fixFdThru - clkSkew + snapExtraDel)  = -(6.000 + 2.000 - 0.000 + 3.000)  = -11.000  Available budget after adjustments(AvailTime)= (12.000 - 11.000) = 1.000  External Segment Delay(extSegDel): 8.000  This Block's Segment Delay(segDel): 0.000  Total delay(totDel): 8.000 + 0.000 = 8.000  Virtual Clock Adjustment(virClk): 0.000  Budgeted constraint = AvailTime * extSegDel / totDel + fixDel + virClk + startClkLat  Budgeted constraint = 1.000 * 8.000 / 8.000 + 9.000 + 0.000 + 0.000 = 10.000
.RE 
.SH Related Information
.RS  "*" 2 The following sections in the Timing Budgeting chapter of the User Guide document:
.RE
.RS 6incomplete"Deriving Timing Budgets"
.RE
.RS  "*" 2
.RS  "*" 2
.RS  "*" 2 "Top-Level Budgets Derived by Using Active Logic View"
.RE 
.RE 
.RE
.RS  "*" 2
.RS  "*" 2
.RS  "*" 2 "Deriving Preliminary Budgets in Early Design Phase"
.RE 
.RE 
.RE
.RS 7incomplete"Budgeting Output Files for MMMC Designs"
.RE
.RS 8incomplete"Generated Report for Design Example"
.RE
.RS 9incomplete"Verifying Timing Budgets"
.RE
.RS 10incomplete"Reading the Justify Budget Report"
.RE
.P
