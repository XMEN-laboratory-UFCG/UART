.nf
.P Product Version     22.14    Cadence Design Systems, Inc. 
.fi
.TH spefIn  22.14 "Fri Oct 06 02:12:27 2023" 
.SH Name \fBspefIn\fR \-  Loads resistors and capacitors for the interconnects in SPEF into the Innovus database to calculate delays or build a timing graph
.SH Syntax \fBspefIn\fR  [-help]  <fileNameList>  [-extended]  [-idx]  [-scaleNets <netFileName>]  [-scaleRC]  [-starN | -noStarN]  [{-rc_corner <list_of_rc_corners> [-spef_field {1 2 3
... N}]}]   [-via_variation_file <viaVariationFileName>]
.P Loads resistors and capacitors for the interconnects in SPEF into the Innovus database to calculate delays or build a timing graph. Use this command to read in a SPEF file generated by a third-party extraction tool.
.P Note: You can use this command to load a SPEF file, which is compressed (.gzip) format.
.P Note: This command supports multi-threaded SPEF reading. The number of CPUs can be specified using the standard use model of Innovus. 
.SH Parameters   "\fB-help\fR" Outputs a brief description that includes type and default information for each spefIn parameter. For a detailed description of the command and all of its parameters, use the man command:  man spefIn.   "\fB-extended\fR" Enables the reading of $llx=<value1> $lly=<value2> $urx=<value3> $ury=<value4> $LAYER=<number> to set the layer number for nodes of a resistance from Quantus extended SPEF file. It also reads in extended  *LAYER_MAP  section, if it is present. This parameter can also read in  $l=<length> $w=<width> $si_w=<swidth> $lvl=<number > to set the width, silicon width, or layer for nodes of a resistance from  StarRC extended SPEF file.   "\fB-idx\fR" Enables Inter-Die Extraction (IDX) SPEF reading. IDX SPEF models the Inter-Die capacitive impact in the form of coupling and ground capacitances. Individual die and IDX SPEFs need to be extracted by Quantus and in the extended SPEF (xSPEF) format.  The -extended parameter is also required to be specified to read the xSPEF format. The software also supports multiple IDX SPEF reading. Flat die-level SPEFs need to be specified along with IDX SPEFs. With the -idx parameter, die-level and IDX SPEFs can be specified in any order.  "\fB<fileNameList>\fR" Specifies a SPEF file or list of SPEF files as input for flat chip or hierarchical SPEF stitching, respectively.  "\fB-rc_corner <list_of_rc_corners>\fR" Annotates the parasitics to the predefined RC corners for multi-corner analysis. You can specify a list of RC corners to be annotated. If you want to use SPEF information when calculating delays in multi-mode multi-corner analysis (MMMC) mode, you must annotate the parasitics for all RC corners in the design.  A few examples are provided below to explain different scenarios of specifying rc corners are their corresponding corner indices and SPEF files.
.RS  "*" 2 spefIn-rc_corner {rcCorner1 rcCorner2 rcCorner3 rcCorner4 rcCorner5} -spef_field {1 2 3 4 5}rc-spef.gz   This means that SPEF file can contain parasitics from N RC corners and names of RC corners in the RC corner list map to the index fields specified using the -spef_field option as shown above. Assuming that the SPEF file, rc-spef.gz has RC fields from the specified five RC corners, the above command would be interpreted as follows:  1st field in SPEF maps to RC corner, rcCorner1  2nd field in SPEF maps to RC corner, rcCorner2  3rd field in SPEF maps to RC corner, rcCorner3  4th field in SPEF maps to RC corner, rcCorner4, and  5th field in SPEF maps to RC corner, rcCorner5
.RE
.RS  "*" 2 spefIn -rc_corner {rc_max rc_min} -spef_field {2 5} rc-spef.gz
.RE   Assuming rc-spef.gz in above example has RC fields from "N" RC corners, the above command would read SPEF data for two RC corners only and would be interpreted as follows:  2nd field in SPEF maps to RC corner, rc_max  5th field in SPEF maps to RC corner, rc_min 
.RS  "*" 2  spefIn -rc_corner {rcCorner1 rcCorner2 rcCorner3} -spef_field {1 1 3} rc-spef.gz  Assuming rc-spef.gz in the above example has RC fields from N RC corners, the above command would read SPEF data for 3 RC corners only and would be interpreted as follows:  1st field in SPEF maps to RC corner, rcCorner1   1st field in SPEF also maps to RC corner, rcCorner2  3rd field in SPEF maps to RC corner, rcCorner3 
.RE
.RS  "*" 2 spefIn -rc_corner {rcCorner1 rcCorner2 rcCorner3 rcCorner4 rcCorner5} -spef_field {1 2 3 4 5}   {top.spef.gz block1.spef.gz block2.spef.gz}  In the above example, hierarchical design SPEF files are read in. It reads top level multi-field SPEF file followed by the multi-field SPEF files from block1 and block2.
.RE   Note: SPEF reading will not be triggered until SPEF files for all active RC corners are specified.  "\fB-scaleNets <netFileName>\fR" Enables the scaling of resistances and capacitances for user-specified nets as per the specified scale factors. The list of nets is specified in a file. The scale factors are specified using the create_rc_corner and update_rc_corner commands.  Note: This parameter can only be used if the -scaleRC parameter is specified. Otherwise, it will be ignored.  For example:  spefIn -scaleRC -scaleNets <netFileName> -rc_corner r1 detail.spef  "\fB-scaleRC\fR" Scales the SPEF read in for the specified corner as per the postRoute_cap, postRoute_xcap, and postRoute_res scale factors defined using the create_rc_corner and update_rc_corner commands.  When this parameter is specified, the scale factors for extraction effort-level high are used for RC scaling. However, if they are not available, the priority shifts to the scale factors for effort-level medium and low, in that order, if specified.  Note: Scale factors of postRoute_clkcap, postRoute_clkxcap,  and postRoute_clkres are not applied even when the net is a clock attribute.  "\fB-spef_field {1 2 3
... N}\fR" Specifies the list of RC corner indices in SPEF to be loaded. This parameter provides the flexibility to perform order-independent and field-independent mapping to RC corners. For example, SPEF may contain data for 10 corner fields but you can choose to read data only for 6 corners. You can also choose to use data from one particular field to map to one or more RC corners. A few examples to illustrate different scenarios are provided in the description of the -rc_corner parameter above.  Note: This parameter is relevant only when the -rc_corner parameter is specified. The -spef_field is an optional parameter, and if not specified, the software assumes the default fields of {1 2 3
... N} where N is equal to the number of RC corners provided in the -rc_corner list.  "\fB-starN |-noStarN\fR" Specifies whether or not to read the *N statements in the SPEF file. The *N statements define the location of the RC nodes. The -starN parameter reads the *N statements and the -noStarN parameter ignores the *N statements.  Default: -StarN (By default, the software reads the *N statements in the SPEF file.)  "\fB-via_variation_file <viaVariationFileName>\fR" Specifies the name of the file for modeling via variation. The contents of the file include all the via layer names with corresponding MEAN_SHIFT and STDDEV so that all the VIA resistance in SPEF can be mapped to their own variation multiplier. This option is used to specify the via_variation file only when the design has a single corner.  For example,  spefIn   -rc_corner rcCornerName \\  -via_variation_file <viaVariationFileName>  A sample via_variation file is provided below:  // corner_name  : rcMax  // wildcard to cover default   object_type     : design   delay_type      : via  layer_name      : *  area            : 0.20 0.40 0.80  // no nominal for wildcard default   table_min_sigma : 0.80 0.90 0.95  table_max_sigma : 1.60 1.30 1.15  table_meanshift : 0.05 0.03 0.02  table_stdev     : 0.10 0.05 0.02  // per via layer data   object_type     : design   delay_type      : via   layer_name      : VIA1  Area            : 0.0004 0.0008 0.0016  table_min_sigma : 0.80 0.90 0.95  table_max_sigma : 1.60 1.30 1.15  table_meanshift : 0.015 0.015 0.012  table_stdev     : 0.214 0.150 0.117  object_type     : design  delay_type      : via  layer_name      : VIA2  area            : 0.0004 0.0008 0.0016  table_min_sigma : 0.80 0.90 0.95  table_max_sigma : 1.60 1.30 1.15  table_meanshift : 0.015 0.012 0.014 
..... 
......  table_stdev : 0.223 0.183 0.140  Note: Each line in the file lists the basic components of the statistical variation approach.  The values in the "area" line list all possible areas. In the above example, the area line lists three cases that can happen in the design. It can list different number of cases, for example one or four. The subsequent lines list the corresponding values matching to the areas defined in the area line. 
.SH Examples
.RS  "*" 2 The following command loads the SPEF file TOPCHIP_SP.spef for a flat chip methodology for RC corner, corner1:   spefIn -rc_corner corner1 TOPCHIP_SP.spef
.RE
.RS  "*" 2 The following command loads multiple SPEF files for hierarchical SPEF stitching:   spefIn -rc_corner corner1 { PTN/results_conv/results_conv.spef tdsp_core/tdsp_core/tdsp_core.spef PTN/TOPCHIP_SP/TOPCHIP_SP.spef}
.RE
.RS  "*" 2 The following commands first setup the appropriate scale factors for the corners RCmax and RCmin and then scale the SPEF read for the defined corners RCmax and RCmin:   === MMMC setup ====  create_rc_corner -name RCmax -postRoute_cap 1.4 -postRoute_xcap 1.4 -postRoute_res 1.4  create_rc_corner -name RCmin -postRoute_cap 0.8 -postRoute_xcap 0.8 -postRoute_res 0.8 
...  === run script=== 
...  spefIn -rc_corner RCmax typSPEF.spef -scaleRC  spefIn -rc_corner RCmin typSPEF.spef -scaleRC
.RE 
.SH Related Information
.RS  "*" 2 rcOut  "*" 2 create_rc_corner  "*" 2 update_rc_corner
.RE
.P
