.nf
.P Product Version     22.14    Cadence Design Systems, Inc. 
.fi
.TH merge_hierarchical_def  22.14 "Fri Oct 06 02:12:27 2023" 
.SH Name \fBmerge_hierarchical_def\fR \-  Merges DEF data from various blocks to a single chip database
.SH Syntax \fBmerge_hierarchical_def\fR  [-help]   <defFiles <...>>    [-add_blockage]   [-delete_blockages_over_partition_macro]  [-incremental_ilm_def]   [-ignore_drcfill]  [-rdl_def <string>]    [-rdl_orientation <orientation>]  [-rdl_placement {<x y>}]  [-secondary {{<suffix> <def_file_list>}...}]   [-skipNets]   [-skip_filler]   [-skip_pg]  [-skip_routing {[pg|signal] [regular|special] [high_layer_routing]}]   [-to_layer <routing_layer_name>]   [-top_scope]  [-topcell_orientation <orientation>]   [-topcell_placement {x y}]   [-transform_file <string>]  [-use_top_def_die_area]
.P Merges DEF data from various blocks to a single chip database. The  merge_hierarchical_def command provides the following features:
.RS  "*" 2 Takes the TOP DEF file and a set of block DEF files and merges them into a single chip database.  "*" 2  The Verilog files for each of the blocks, and TOP, need to be loaded up front
.  "*" 2 The block and TOP Verilog files (or their DEF files) can be specified in any order. However, if there are empty Verilog module stubs of blocks in some of the parent Verilog files, ensure that the parent Verilog files are specified prior to the child Verilog files.  "*" 2 There is no need to specify the LEF files for the blocks.  "*" 2 During the course of this command, TOP rows will be cut around the block boundary, and all block rows will be brought back as is.  "*" 2 Partition definitions are created for each of the assembled block as per the DIE AREA statement in the block DEF.  "*" 2 The wire at the block boundaries will be stitched with the electrically connected net's wires at the TOP.  "*" 2 All orientations of blocks are supported for assembly. Repeated blocks are also supported. Non-R0 master is also supported.
.RE 
.SH Parameters   "\fB-add_blockage\fR" Specifies that the netlist is a reduced one and converts the undefined instances into blockages.  Data_type: bool, optional  "\fB<defFiles <...>>\fR" Specifies DEF files to be merged.  Data_type: list, required  "\fB-delete_blockages_over_partition_macro\fR" Deletes top design placement and routing blockages overlapping partitions.  Data_type: bool, optional  "\fB-help\fR" Outputs a brief description that includes the type and default information for each merge_hierarchical_def parameter.  For a detailed description of the command and all of its parameters, use the man command:   man merge_hierarchical_def  "\fB-ignore_drcfill\fR" Ignores the special routing with DRCFILL shape attribute.  Data_type: bool, optional  "\fB-incremental_ilm_def\fR" Incrementally flattens the ILM def.  Data_type: bool, optional  "\fB-rdl_def <string>\fR" Specifies RDL def file.  Data_type: string, optional  "\fB-rdl_orientation <orientation>\fR" Specifies orientation for RDL def.  Data_type: enum, optional  "\fB-rdl_placement {<x y>}\fR" Specifies offset of RDL def.  Data_type: point, optional  "\fB-secondary {{<suffix> <def_file_list>}...}\fR" Specifies the secondary DEF file(s) to load.  Data_type: string, optional  "\fB-skip_filler\fR" Skips merging filler and decap cells.  Data_type: bool, optional  "\fB-skip_pg\fR" Skips merging routing on pg nets.  Data_type: bool, optional  "\fB-skipNets\fR" Skips merging signal nets section.  Data_type: bool, optional  "\fB-skip_routing {[pg|signal] [regular|special] [high_layer_routing]}...\fR" Skips merging routing based on the settings specified. This setting can be any combination of the three optional keywords from the following set:
.RS  "*" 2 [pg|signal]: Specifies the type of the net on which the routing to be skipped. pg - pg net, signal - signal net, both if not specified.  "*" 2 [regular|special]: Specifies the type of routing to be skipped. regular - regular routing, special - special routing, both if not specified.  "*" 2  [high_layer_routing]: Specifies that only the routing on high layers to be skipped, where the layers are calculated automatically. If not  specified, the routing on all layers are skipped. The layers can be specified with -to_layer option. In that case, the routing on the layers from top to the specified layer are skipped.  Note: You must specify the -to_layer parameter explicitly if high_layer_routing is specified for -skip_routing. Otherwise, high_layer_routing has no effect.
.RE   Data_type: string, optional  "\fB-to_layer <routing_layer_name>\fR" Skips the routing of layers from top to the specified layer (inclusive) when the high_layer_routing option is specified for the -skip_routing parameter.  Data_type: (layer), optional  "\fB-top_scope\fR" Merges routing only on top scope nets.  Data_type: bool, optional  "\fB-topcell_orientation <orientation>\fR" Specifies orientation for topcell.  Data_type: enum, optional  "\fB-topcell_placement {<x y>}\fR" Specifies placement for topcell.  Data_type: point, optional  "\fB  -transform_file <string>\fR" Reports the final x and y offsets and orientation in the top-level of each LEF block that got replaced by DEF.  Data_type: string, optional  "\fB-use_top_def_die_area\fR" Enables the use of TOP DEF DIE AREA.  Data_type: bool, optional 
.SH Example
.RS  "*" 2 The following command merges DEF data from top.def.gz and blockA.def.gz to a single chip database.  merge_hierarchical_def top.def.gz blockA.def.gz
.RE 
.SH Related Information
.RS  "*" 2 Partitioning the Design chapter in the Innovus User Guide
.RE
.P
