.nf
.P Product Version     22.14    Cadence Design Systems, Inc. 
.fi
.TH get_property  22.14 "Fri Oct 06 02:12:27 2023" 
.SH Name \fBget_property\fR \-  Retrieves the attribute value for the specified object(s) property
.SH Syntax \fBget_property\fR  [-help]  <var_name>  <property>  [-clock <clock_name>]  [-view <view_name>]  [-quiet] 
.P Retrieves the attribute value for the specified object(s) property.
.P You can query the following:
.P The get_property command supports the report_precision global variable settings.
.P The get_property command supports DRV constraints (set_min_fanout, set_max_fanout, set_min_transition, set_max_transition, set_min_capacitance, and set_max_capacitance) applied on library pins.
.P The get_property command does not work with partial property names. You are now required to specify the full name of the property. 
.SH Parameters    "\fB-help\fR" Prints out the command usage.   "\fB-clock <clock_name>\fR" Specifies the clock for which to query certain object properties.  "\fB<property>\fR" Specifies the property for which to retrieve the attribute value.  "\fB-quiet\fR" Suppresses all error and warning messages generated when the get_property command is run.  "\fB<var_name>\fR" Specifies a pointer to a collection containing the object.  Note: If the collection contains more than one object, the get_property command returns the property values for each object in the specified collection.  "\fB-view <view_name>\fR" Specifies the analysis view in which to query the object attribute. You can query properties only for the following objects in an analysis view: library cells, library pins, ports, cells, pins, timing arcs, and nets.  You can specify this parameter only when the software is in multi-mode multi-corner timing analysis mode.  Note: The properties (described in the tables below), which are related to slack, delay, arrival, slew, transition, capacitance, uncertainty and latency, depend on the specified view. When the -view parameter is not specified, the maximum (or minimum) value for all the views is returned.
.P 
.SH Cell Properties     "\fBarea\fR" Returns the area of the cell. If the cell is hierarchical, also includes the net area.  Return type: float  "\fBearly_cell_check_derate_factor\fR" Returns the derating factor for early paths specified through the set_timing_derate command with the -early parameter.  Return type: float  "\fBearly_cell_check_mean_derate_factor\fR" Returns the derating factor for early paths on the instance - when the set_timing_derate -mean parameter is specified.  Return type: float  "\fBearly_clock_check_incremental_derate_factor\fR" Returns the early clock path instances' incremental derating factor specified through the set_timing_derate -incremental_adjust parameter.  Return type: float  "\fBearly_data_check_incremental_derate_factor\fR" Returns the early data path instance's incremental derating factor specified through the set_timing_derate -incremental_adjust parameter.  Return type: float  "\fBearly_cell_check_sigma_derate_factor\fR" Returns the derating factor for early paths on the instance - when the set_timing_derate -sigma parameter is specified.  Return type: float  "\fBearly_clk_cell_derate_factor\fR" Returns the derating factor for early clock paths specified through the set_timing_derate command with the -early parameter.  Return type: float  "\fBearly_clk_cell_mean_derate_factor\fR" Returns the derating factor for early clock paths - when the set_timing_derate -mean parameter is specified.   Return type: float  "\fBearly_clk_cell_sigma_derate_factor\fR" Returns the derating factor for early clock paths - when the set_timing_derate -sigma parameter is specified.   Return type: float  "\fBearly_data_cell_derate_factor\fR" Returns the derating factor for early paths specified through the set_timing_derate  command with the -early parameter.  Return type: float  "\fBearly_data_cell_mean_derate_factor\fR" Returns the derating factor for early paths - when the set_timing_derate -mean parameter is specified.  Return type: float  "\fBearly_data_cell_sigma_derate_factor\fR" Returns the derating factor for early paths - when the set_timing_derate -sigma parameter is specified.  Return type: float  "\fBearly_fall_cell_check_derate_factor\fR" Returns the early cell check derating factor specified through the set_timing_derate command with the -fall parameter.  Return type: float  "\fBearly_fall_cell_check_mean_derate_factor\fR" Returns the early cell check derating factor - when the set_timing_derate -cell_check and -mean parameters are specified.  Return type: float  "\fBearly_fall_cell_check_sigma_derate_factor\fR" Returns the early cell check derating factor - when the set_timing_derate  -cell_check and -sigma parameters are specified.  Return type: float  "\fBearly_fall_clk_cell_derate_factor\fR" Returns the early clock path derating factor specified through the set_timing_derate command with the -fall parameter.  Return type: float  "\fBearly_fall_clk_cell_mean_derate_factor\fR" Returns the early clock path derating factor - when the set_timing_derate -fall and -mean parameters are specified.  Return type: float  "\fBearly_fall_clk_cell_sigma_derate_factor\fR" Returns the early clock path derating factor - when the set_timing_derate -fall and -sigma parameters are specified.  Return type: float  "\fBearly_fall_clock_incremental_derate_factor\fR" Returns the early clock path instances' incremental derating factor specified through the set_timing_derate -incremental_adjust parameter - when the -fall parameter is specified.  Return type: float  "\fBearly_fall_data_cell_derate_factor\fR" Returns the early data cell check derating factor - when the set_timing_derate -fall parameter is specified.  Return type: float  "\fBearly_fall_data_cell_mean_derate_factor\fR" Returns the early data cell check derating factor - when the set_timing_derate -fall and -mean parameters are specified.  Return type: float  "\fBearly_fall_data_cell_sigma_derate_factor\fR" Returns the early data cell check derating factor - when the set_timing_derate -fall and -sigma parameters are specified.  Return type: float  "\fBearly_fall_data_incremental_derate_factor\fR" Returns the early data path instances' incremental derating factor specified through the set_timing_derate -incremental_adjust parameter - when the -fall parameter is specified.  Return type: float  "\fBearly_rise_cell_check_derate_factor\fR" Returns the early cell check derating factor specified through the set_timing_derate command with the -rise and -cell_check parameter.  Return type: float  "\fBearly_rise_cell_check_mean_derate_factor\fR" Returns the early cell check derating factor - when the set_timing_derate -rise and -mean parameters are specified.  Return type: float  "\fBearly_rise_cell_check_sigma_derate_factor\fR" Returns the early cell check derating factor - when the set_timing_derate -rise and -sigma parameters are specified.  Return type: float  "\fBearly_rise_clk_cell_derate_factor\fR" Returns the early clock cell check derating factor specified through the set_timing_derate command with the -rise parameter.  Return type: float  "\fBearly_rise_clk_cell_mean_derate_factor\fR" Returns the early clock cell check derating factor - when the set_timing_derate -rise and -mean parameters are specified.  Return type: float  "\fBearly_rise_clk_cell_sigma_derate_factor\fR" Returns the early clock cell check derating factor - when the set_timing_derate -rise and -sigma parameters are specified.  Return type: float  "\fBearly_rise_clock_incremental_derate_factor\fR" Returns the early clock path instances' incremental derating factor specified through the set_timing_derate -incremental_adjust parameter - when the -rise parameter is specified.  Return type: float  "\fBearly_rise_data_cell_derate_factor\fR" Returns the early data cell check derating factor specified through the set_timing_derate command with the -rise parameter.  Return type: float  "\fBearly_rise_data_cell_mean_derate_factor\fR" Returns the early data cell check derating factor - when the set_timing_derate -rise and -mean parameters are specified.  Return type: float  "\fBearly_rise_data_cell_sigma_derate_factor\fR" Returns the early data cell check derating factor - when the set_timing_derate -rise and -sigma parameters are specified.  Return type: float  "\fBearly_rise_data_incremental_derate_factor\fR" Returns the early data path instances' incremental derating factor specified through the set_timing_derate -incremental_adjust parameter - when the -rise parameter is specified.  Return type: float  "\fBhierarchical_name\fR" Returns the complete hierarchical name of the cell.  Return type: string  "\fBinstance_model\fR" Reports the model type of an instance.  The Instance model type can be ecsmn, ccsn, cdb, udn, or nldm. In case a noise model does not exist, the software returns 'NA'.  For example,  get_property   [get_cells inst1/buf22 ] instance_model  Return type: string  "\fBis_black_box\fR" Returns a value of true if the cell is a black box cell.  A cell is considered as a black box if the "function" definition of the cell is missing from the library.  Return type: boolean  "\fBis_buffer\fR" Returns a value of true if the associated library cell is recognized as a buffer cell.  For example,  get_property [get_cells mmu/IB1] is_buffer  Return type: boolean  "\fBis_clock_gating_check\fR" Returns a value of true if the cell is gated.  Return type: boolean  "\fBis_combinational\fR" Returns a value of true if the cell is a combinational cell (not a sequential cell).  Return type: boolean  "\fBis_disable_timing\fR" Returns a value of true if the cell's timing has been disabled using the set_disable_timing command.  Return type: boolean  "\fBis_dont_touch\fR" Returns a value of true if the cell definition includes dont_touch:true.  Return type: boolean  "\fBis_fall_edge_triggered\fR" Returns a value of true if the cell is triggered by the falling edge of the clock.  Return type: boolean  "\fBis_hierarchical\fR" Returns a value of false if the cell is a leaf or library cell.  Return type: boolean  "\fBis_integrated_clock_gating_cell\fR" Returns a value of true if the cell is an integrated clock gating cell.  Return type: boolean  "\fBis_interface_timing\fR" Returns a value of true if a library cell has interface timing specified for that cell.  Return Type: boolean  "\fBis_memory_cell\fR" Returns a value of true if the cell is a memory cell.  Return type: boolean  "\fBis_negative_level_sensitive\fR" Returns a value of true if the cell is used as a negative level-sensitive sequential element, such as a negative level-sensitive latch.  Return type: boolean  "\fBis_pad_cell\fR" Returns a value of true if the Liberty library is_pad_cell attribute is set to true for this pad cell.  Return type: boolean  "\fBis_positive_level_sensitive\fR" Returns a value of true if the cell is used as a positive level-sensitive sequential element, such as a positive level-sensitive latch.  Return type: boolean  "\fBis_rise_edge_triggered\fR" Returns a value of true if the cell is triggered by the rising edge of the clock.  Return type: boolean  "\fBis_sequential\fR" Returns a value of true if the cell is a latch or flip-flop, or if the cell has sequential timing checks.  Return type: boolean  "\fBis_tristate\fR" Returns a value of true if the cell definition includes three_state:true.  Return type: boolean  "\fBlate_cell_check_derate_factor\fR" Returns the derating factor for late paths specified through the set_timing_derate command with the -late parameter.  Return type: float  "\fBlate_cell_check_mean_derate_factor\fR" Returns the derating factor for late paths - when the set_timing_derate -late and -mean parameters are specified.  Return type: float  "\fBlate_cell_check_sigma_derate_factor\fR" Returns the derating factor for late paths - when the set_timing_derate -late and -sigma parameters are specified.  Return type: float  "\fBlate_clk_cell_derate_factor\fR" Returns the derating factor for late clock paths specified through the set_timing_derate command with the -late parameter.  Return type: float  "\fBlate_clk_cell_mean_derate_factor\fR" Returns the derating factor for late clock paths - when the set_timing_derate -late and -mean parameters are specified.  Return type: float  "\fBlate_clk_cell_sigma_derate_factor\fR" Returns the derating factor for late clock paths - when the set_timing_derate -late and -sigma parameters are specified.  Return type: float  "\fBlate_clock_check_incremental_derate_factor\fR" Returns the late clock path instance's incremental derating factor specified through the set_timing_derate -incremental_adjust parameter.  Return type: float  "\fBlate_data_cell_derate_factor\fR" Returns the derating factor for late data paths specified through the set_timing_derate command with the -late parameter.  Return type: float  "\fBlate_data_cell_sigma_derate_factor\fR" Returns the derating factor for late data paths - when the set_timing_derate -late and -sigma parameters are specified.  Return type: float  "\fBlate_data_check_incremental_derate_factor\fR" Returns the late data path instances' incremental derating factor specified through the set_timing_derate -incremental_adjust parameter.  Return type: float  "\fBlate_fall_cell_check_derate_factor\fR" Returns the late cell check derating factor specified through the set_timing_derate command with the -fall parameter.  Return type: float  "\fBlate_fall_cell_check_mean_derate_factor\fR" Returns the late cell check derating factor - when the set_timing_derate -fall and -mean parameters are specified.  Return type: float  "\fBlate_fall_cell_check_sigma_derate_factor\fR" Returns the late cell check derating factor - when the set_timing_derate -fall and -sigma parameters are specified.  Return type: float  "\fBlate_fall_clk_cell_derate_factor\fR" Returns the late clock cell check derating factor specified through the set_timing_derate command with the -fall parameter.  Return type: float  "\fBlate_fall_clk_cell_mean_derate_factor\fR" Returns the late clock cell check derating factor - when the set_timing_derate -fall and -mean parameters are specified.  Return type: float  "\fBlate_fall_clk_cell_sigma_derate_factor\fR" Returns the late clock cell check derating factor - when the set_timing_derate -fall and -sigma parameters are specified.  Return type: float  "\fBlate_fall_clock_incremental_derate_factor\fR" Returns the late clock path instances' incremental derating factor specified through the set_timing_derate -incremental_adjust parameter - when the -fall parameter is specified.  Return type: float  "\fBlate_fall_data_cell_derate_factor\fR" Returns the late data cell check derating factor specified through the set_timing_derate command with the -fall parameter.  Return type: float  "\fBlate_fall_data_cell_mean_derate_factor\fR" Returns the late data cell check derating factor - when the set_timing_derate -fall and -mean parameters are specified.  Return type: float  "\fBlate_fall_data_cell_sigma_derate_factor\fR" Returns the late data cell check derating factor - when the set_timing_derate -fall and -sigma parameters are specified.  Return type: float  "\fBlate_fall_data_incremental_derate_factor\fR" Returns the late data path instances' incremental derating factor specified through the set_timing_derate -incremental_adjust parameter - when the -fall parameter is specified.  Return type: float  "\fBlate_rise_cell_check_derate_factor\fR" Returns the late cell check derating factor specified through the set_timing_derate command with the -rise parameter.  Return type: float  "\fBlate_rise_cell_check_mean_derate_factor\fR" Returns the late cell check derating factor - when the set_timing_derate -rise and -mean parameters are specified.  Return type: float  "\fBlate_rise_cell_check_sigma_derate_factor\fR" Returns the late cell check derating factor - when the set_timing_derate -fall and -sigma parameters are specified.  Return type: float  "\fBlate_rise_clk_cell_derate_factor\fR" Returns the late clock cell check derating factor specified through the set_timing_derate command with the -rise parameter.  Return type: float  "\fBlate_rise_clk_cell_mean_derate_factor\fR" Returns the late clock cell check derating factor - when the set_timing_derate -rise and -mean parameters are specified.  Return type: float  "\fBlate_rise_clk_cell_sigma_derate_factor\fR" Returns the late clock cell check derating factor - when the set_timing_derate -fall and -sigma parameters are specified.  Return type: float  "\fBlate_rise_clock_incremental_derate_factor\fR" Returns the late clock path instances' incremental derating factor specified through the set_timing_derate -incremental_adjust parameter - when the -rise parameter is specified.  Return type: float  "\fBlate_rise_data_cell_derate_factor\fR" Returns the late data cell check derating factor specified through the set_timing_derate command with the -rise parameter.  Return type: float  "\fBlate_rise_data_cell_mean_derate_factor\fR" Returns the late data cell check derating factor - when the set_timing_derate -rise and -mean parameters are specified.  Return type: float  "\fBlate_rise_data_cell_sigma_derate_factor\fR" Returns the late data cell check derating factor - when the set_timing_derate -rise and -sigma parameters are specified.  Return type: float  "\fBlate_rise_data_incremental_derate_factor\fR" Returns the late data path instances' incremental derating factor specified through the set_timing_derate -incremental_adjust parameter - when the -rise parameter is specified.  Return type: float  "\fBlib_cell\fR" Returns a collection of all the library cell objects associated with the specified library pins/cells. For example,  get_property [get_cells AAA] lib_cell -view VIEW1  Return type: collection  "\fBname\fR" Returns the leaf-level name of the cell.  Return type: string  "\fBobject_type\fR" Returns the object type cell.  Return type: string  "\fBpin_count\fR" Returns the total number of signal pins.   Return type: integer  "\fBref_lib_cell_name\fR" Returns the name of reference module of the given cell. The reference module of the cell can be a Verilog module or a leaf library cell.   Return type: string  "\fBthreshold_voltage_group\fR" Returns name of a group/category - that is specified based on the cell's threshold voltage (high or low) characteristics.  For example,  get_property   [get_lib_cells AND2_X1] threshold_voltage_group  Return type: string  "\fBtiming_model_type\fR" Returns the model type for a given cell or instance. The supported values are abstracted, extracted, and qtm.  Return type: string  "\fBx_coordinate_max\fR" Returns the maximum x coordinate of the cell.  Return type: float  "\fBx_coordinate_min\fR" Returns the minimum x coordinate of the cell.  Return type: float  "\fBy_coordinate_max\fR" Returns the maximum y coordinate of the cell.  Return type: float  "\fBy_coordinate_min\fR" Returns the minimum y coordinate of the cell.  Return type: float  Cell Properties for Power/Ground Objects  "\fBis_always_on\fR" Returns a value of true if a cell instance is an always-on cell.  Return type: boolean  For example,  get_property [get_cells mmu/U1] is_always_on  "\fBis_inverter \fR" Returns a value of true if a cell instance is an inverter cell.  Return type: boolean  For example,  get_property [get_cells mmu/INV1] is_inverter  "\fBis_isolation_cell \fR" Returns a value of true if a cell instance is an isolation cell.  Return type: boolean   For example,  get_property [get_cells mmu/U1] is_isolation_cell  "\fBis_level_shifter\fR" Returns a value of true if a cell instance is a level-shifter cell.  Return type: boolean   For example,  get_property [get_cells mmu/U1] is_level_shifter  "\fBis_power_switch\fR" Returns a value of true if a cell instance is a power switch cell.  Return type: boolean   For example,  get_property [get_cells mmu/U1] is_power_switch  "\fBis_retention\fR" Returns a value of true if a cell instance is a retention cell.  Return type: boolean   For example,  get_property [get_cells mmu/U1] is_retention  "\fBlevel_shifter_type\fR" Returns the type of level-shifter (e.g., LH, HL, or HL_LH) that a cell instance is.  Return type: string   For example,  get_property [get_cells mmu/U1] level_shifter_type  "\fBpg_pins\fR" Returns a collection of the PG pins that are present in a cell instance.  Return type: collection   For example,  get_property [get_cells mmu/U1] pg_pins  "\fBpower_switch_type\fR" Returns the type of power switch (e.g., coarse-grain, fine-grain) that a cell instance is.  Return type: string   For example,  get_property [get_cells mmu/U1] power_switch_type  "\fBstd_cell_main_rail_name\fR" Returns the name of the main power rail driving the power pins of a cell instance that is the pg_pin, which has the std_cell_main_rail library attribute set as true for the instance cell.  Return type: string  For example,  get_property [get_cells mmu/U1] std_cell_main_rail_name 
.SH Clock Properties   "\fBclock_network_pins\fR" Returns a collection of all pins on the clock network for the clock.  Return type: collection  "\fBdelay_max_fall\fR" Returns the maximum falling delay value for the clock.  Return type: float  "\fBdelay_max_rise\fR" Returns the maximum rising delay value for the clock.  Return type: float  "\fBdelay_min_fall\fR" Returns the minimum falling delay value for the clock.  Return type: float  "\fBdelay_min_rise\fR" Returns the minimum rising delay value for the clock.  Return type: float  "\fBgenerated_clocks_extended\fR" Returns generated clocks derived from the regular clock.  Return type: collection  "\fBhierarchical_name\fR" Returns the complete hierarchical name of the clock.  Return type: string  "\fBideal_transition_max_fall\fR" Returns the ideal clock transition asserted on clock waveforms specified with the set_clock_transition command using the -fall and -max parameters.  Return type: float  "\fBideal_transition_max_rise\fR" Returns the ideal clock transition asserted on clock waveforms specified with the set_clock_transition command using the -rise and -max parameters.  Return type: float  "\fBideal_transition_min_fall\fR" Returns the ideal clock transition asserted on clock waveforms specified with set_clock_transition command using the -fall and -min parameters.  Return type: float  "\fBideal_transition_min_rise\fR" Returns the ideal clock transition asserted on clock waveforms specified with set_clock_transition command using the -rise and -min parameters.  Return type: float  "\fBis_active\fR" Returns a value of true if the clock specified is active in the current view.  Return type: boolean  "\fBis_generated\fR" Returns a value of true if the clock is a generated clock.  Return type: boolean  "\fBis_propagated_clock\fR" Returns a value of true if the clock is in propagated mode.  Return type: boolean  "\fBlatency_fall_max\fR" Returns the maximum fall latency for the clock.  Return type: float  "\fBlatency_fall_min\fR" Returns the minimum fall latency for the clock.  Return type: float  "\fBlatency_rise_max \fR" Returns the maximum rise latency for the clock.  Return type: float  "\fBlatency_rise_min \fR" Returns the minimum rise latency for the clock.  Return type: float  "\fBmax_capacitance_clock_path_fall\fR" Returns fall max_capacitance value on clock paths.  Return type: float  "\fBmax_capacitance_clock_path_rise\fR" Returns rise max_capacitance value on clock paths.  Return type: float  "\fBmax_capacitance_data_path_fall\fR" Returns fall max_capacitance value on data paths.  Return type: float  "\fBmax_capacitance_data_path_rise\fR" Returns rise max_capacitance value on data paths.  Return type: float  "\fBmax_transition_clock_path_fall\fR" Returns fall max_transition value on clock paths.  Return type: float  "\fBmax_transition_clock_path_rise\fR" Returns rise max_transition value on clock paths.  Return type: float  "\fBmax_transition_data_path_fall\fR" Returns fall max_transition value on data paths.  Return type: float  "\fBmax_transition_data_path_rise\fR" Returns rise max_transition value on data paths.  Return type: float  "\fBname\fR" Returns the name of the clock.  Return type: string  "\fBobject_type\fR" Returns the object type clock.  Return type: string  "\fBperiod\fR" Returns the clock period.  Return type: float  "\fBsource_latency_early_fall_max \fR" Returns the early source latency for the falling transition at the max corner.  Return type: float  "\fBsource_latency_early_fall_min \fR" Returns the early source latency for the falling transition at the min corner.  Return type: float  "\fBsource_latency_early_rise_max \fR" Returns the early source latency for the rising transition at the max corner.  Return type: float  "\fBsource_latency_early_rise_min \fR" Returns the early source latency for the rising transition at the min corner.  Return type: float  "\fBsource_latency_late_fall_max \fR" Returns the late source latency for the falling transition at the max corner.  Return type: float  "\fBsource_latency_late_fall_min \fR" Returns the late source latency for the falling transition at the min corner.  Return type: float  "\fBsource_latency_late_rise_max \fR" Returns the late source latency for the rising transition at the max corner.  Return type: float  "\fBsource_latency_late_rise_min \fR" Returns the late source latency for the rising transition at the min corner.  Return type: float  "\fBsources\fR" Returns a collection of the clock's source pins or ports.  Return type: collection  "\fBview_name\fR" In multi-mode multi-corner mode, returns the analysis view name associated with a given clock.  Return type: string  "\fBwaveform\fR" Returns the rising and falling edge times of the waveform.  Return type: string 
.SH Design Properties   "\fBanalysis_type\fR" Returns the analysis mode: single, bc_wc, or on_chip_variation.  Return type: string  "\fBcapacitance_unit_in_farad\fR" Returns the capacitance unit specified in the library.  Return type: float  "\fBchip_size\fR" Returns the chip size.  The chip size can be specified with the aocv_chip_size global variable. If this variable is not set, then the software will calculate the chip size from the design node locations.  The global variable setting takes precedence over the software setting.  Return type: float  "\fBcurrent_unit_in_amp\fR" Returns the current unit specified in the library.  Return type: float  "\fBhierarchical_name\fR" Returns the complete hierarchical name of the design.  Return type: string  "\fBis_dont_touch\fR" Returns true if the design is specified through the set_dont_touch command.  Return type: boolean  "\fBis_max_transition_asserted\fR" Returns a value of true if a maximum transition value (set using the set_max_transition command) is defined in the design.  Return type: boolean  "\fBis_min_transition_asserted\fR" Returns a value of true if a minimum transition value (set using the set_min_transition command) is defined in the design.  Return type: boolean  "\fBmax_capacitance\fR" Returns the maximum capacitance value for the design.  Return type: float  "\fBmax_fanout\fR" Returns the maximum fanout value for the design.  Return type: float  "\fBmax_transition\fR" Returns the maximum transition design rule limit for the design.  Return type: float  "\fBmin_capacitance\fR" Returns the minimum capacitance value for the design.  Return type: float  "\fBobject_type\fR" Returns the object type design.  Return type: string  "\fBoperating_condition_max\fR" Returns the name of the maximum operating condition specified for the design.  Return type: string  "\fBoperating_condition_min\fR" Returns the name of the minimum operating condition specified for the design.  Return type: string  "\fBprocess_max\fR" Returns the process value of the maximum operating condition specified for the design.  Return type: float  "\fBprocess_min\fR" Returns the process value of the minimum operating condition specified for the design.  Return type: float  "\fBresistance_unit_in_ohm\fR" Returns the resistance value from the library.  Return type: float  "\fBslew_threshold_percent_fall_high\fR" Returns the upper slew trip point for falling waveforms, specified as a percent.  Return type: float  "\fBslew_threshold_percent_fall_low\fR" Returns the lower slew trip point for falling waveforms, specified as a percent.  Return type: float  "\fBslew_threshold_percent_rise_high \fR" Returns the upper slew trip point for rising waveforms, specified as a percent.  Return type: float  "\fBslew_threshold_percent_rise_low\fR" Returns the lower slew trip point for rising waveforms, specified as a percent.  Return type: float  "\fBtemperature_max\fR" Returns the temperature value of the maximum operating condition for the design.  Return type: float  "\fBtemperature_min\fR" Returns the temperature value of the minimum operating condition for the design.  Return type: float  "\fBtime_unit_in_second\fR" Returns the time units of the design, in seconds. that is, time unit of the design is 1.000000ns, the property returns 1.000000e-09.  Return type: float  "\fBtree_type_max\fR" Returns the value of the tree_type attribute for the specified maximum operating condition.  Return type: string  "\fBtree_type_min\fR" Returns the value of the tree_type attribute for the specified minimum operating condition.  Return type: string  "\fBvoltage_max\fR" Returns the voltage value of the maximum operating condition for the design.  Return type: float  "\fBvoltage_min\fR" Returns the voltage value of the minimum operating condition for the design.  Return type: float  "\fBvoltage_unit_in_volt\fR" Returns the voltage units specified in the library for the design.  Return type: float 
.SH Library Properties   "\fBdefault_max_transition\fR" Returns the default maximum transition time limit specified for a given library.  Return type: float  "\fBhierarchical_name\fR" Returns the hierarchical path name for the library.  Return type: string  "\fBinput_threshold_pct_fall\fR" Returns the value of threshold point on an input pin signal falling from 1 to 0, which is used in modelling the delay of a signal transmitting from an input pin to an output pin.  Return type: integer  "\fBinput_threshold_pct_rise\fR" Returns the value of threshold point on an input pin signal rising from 0 to 1, which is used in modelling the delay of a signal transmitting from an input pin to an output pin.  Return type: integer  "\fBlib_file_path\fR" Reports full on-disk path of a library. In case of a library database (LDB) file, the property will return the full on-disk path of the original library from which LDB was compiled.  Return type: string  "\fBlib_version\fR" Returns the software version in which the library file (LDB) was generated.  Return type: integer  "\fBnominal_process\fR" Returns a value of the process either modeled as nominal process or as the process in default operating condition in the library.  Return Type: float  For example,  get_property [get_libs sc_cmoslp] nominal_process  "\fBnominal_temperature\fR" Returns a value of the temperature either modeled as nominal temperature or as the temperature in default operating condition in the library.  Return Type: float  For example,  get_property [get_libs sc_cmoslp] nominal_temperature  "\fBnominal_voltage\fR" Returns a value of the voltage either modeled as nominal voltage or as the voltage in default operating condition in the library.  Return Type: float  For example,  get_property [get_libs sc_cmoslp] nominal_voltage  "\fBobject_type\fR" Returns the object type library.  Return type: string  "\fBoutput_threshold_pct_fall\fR" Returns the value of threshold point on an output signal falling from 1 to 0, which is used in modelling the delay of a signal transmitting from an input pin to an output pin.  Return type: integer  "\fBoutput_threshold_pct_rise\fR" Returns the value of threshold point on an output signal rising from 0 to 1, which is used in the modelling of a signal transmitting from an input pin to an output pin.  Return type: integer  "\fBslew_derate_from_library\fR" Specifies how the transition times found in the library need to be derated to match the transition times between the characterization trip points.  Return type: float  "\fBslew_lower_threshold_pct_fall\fR" Returns the value of lower threshold point used in modeling the delay of a pin falling from 1 to 0.  Return type: float  "\fBslew_lower_threshold_pct_rise\fR" Returns the value of lower threshold point used to model the delay of a pin rising from 0 to 1.  Return type: float  "\fBslew_upper_threshold_pct_fall\fR" Returns the value of upper threshold point used to model the delay of a pin falling from 1 to 0.  Return type: float  "\fBslew_upper_threshold_pct_rise\fR" Returns the value of upper threshold point used to model the delay of a pin rising from 0 to 1.  Return type: float  "\fBsource_file_name\fR" Returns the full path of all library files that contain the specified library name.  The use model is given below:  get_property [get_libs <libname>] source_file_name [-view <viewName>]  If the -view parameter is specified, the property returns the path of the library files in the given analysis view.  If this parameter is not specified, the command returns the path of all library files in all the analysis views.  Return Type: stringLibrary Properties for Power/Ground Objects  "\fBpower_rails\fR" Returns the name of the power rails along with their corresponding voltages as defined in the voltage_map attribute in the library.  Return Type: string  For example,  get_property [get_libs sc_cmoslp] power_rails  Output: Is a list of lists, each list showing the power rail name along with its associated voltage.  { {VDDG 1.045} {VDD 1.045} {VSS 0} }
.P 
.SH Library Cell Properties   "\fBarea\fR" Returns the area of the library cell.  Return Type: float  "\fBearly_clock_check_incremental_derate_factor\fR" Returns the early clock path library cell check incremental derating factor specified through the set_timing_derate -incremental_adjust parameter.  Return Type: float  "\fBearly_data_check_incremental_derate_factor\fR" Returns the early data path library cell check incremental derating factor specified through the set_timing_derate -incremental_adjust parameter.  Return Type: float  "\fBearly_fall_clock_incremental_derate_factor\fR" Returns the early clock path library cell check incremental derating factor specified through the set_timing_derate -incremental_adjust parameter - when the -fall parameter is specified.  Return Type: float  "\fBearly_fall_data_incremental_derate_factor\fR" Returns the early data path library cell check incremental derating factor specified through the set_timing_derate -incremental_adjust parameter - when the -fall parameter is specified.  Return Type: float  "\fBearly_rise_clock_incremental_derate_factor\fR" Returns the early clock path library cell check incremental derating factor specified through the set_timing_derate -incremental_adjust parameter - when the -rise parameter is specified.  Return Type: float  "\fBearly_rise_data_incremental_derate_factor\fR" Returns the early data path library cell check incremental derating factor specified through the set_timing_derate -incremental_adjust parameter - when the -rise parameter is specified.  Return Type: float  "\fBhas_spatial\fR" Returns a value of true if a spatial derate exists for a library cell.  Return type: boolean  "\fBhierarchical_name \fR" Returns the complete hierarchical name of the library cell (the library name followed by the library cell name).  Return Type: string  "\fBis_black_box\fR" Returns a value of true if the cell is a black box cell.  A cell is considered as a black box if the "function" definition of the cell is missing from the library.  Return type: boolean  "\fBis_combinational\fR" Returns a value of true if the library cell is a combinational cell (not a sequential cell).  Return type: boolean  "\fBis_dont_touch\fR" Returns a value of true if the library cell definition includes dont_touch:true.  Return Type: boolean  "\fBis_dont_use\fR" Returns a value of true if the library cell description includes dont_use:true.  Return Type: boolean  "\fBis_fall_edge_triggered\fR" Returns a value of true if the library cell is triggered by the falling edge of the clock.  Return Type: boolean  "\fBis_interface_timing\fR" Returns a value of true if a library cell has interface timing specified for that cell.   "\fBis_memory_cell\fR" Returns a value of true if the cell is a memory cell.  Return type: boolean  Note: The library cells that have a memory group defined in the dotlib are considered as memory cells. For example:  cell ( ) {  :  memory() {  type : ram ;  address_width : 10 ;  word_width : 7 ;  }  }  "\fBis_negative_level_sensitive\fR" Returns a value of true if the library cell is used as a negative level-sensitive latch.  Return type: boolean  "\fBis_pad_cell\fR" Returns a value of true if the Liberty library is_pad_cell attribute is set to true for this pad cell.  Return type: boolean  "\fBis_pll_cell\fR" Returns a value of true if the Liberty library is_pll_cell attribute is set to true for this library cell.  Return type: boolean  "\fBis_positive_level_sensitive\fR" Returns a value of true if the library cell is used as a positive level-sensitive latch.  Return type: boolean  "\fBis_rise_edge_triggered\fR" Returns a value of true if the library cell is triggered by the rising edge of the clock.  Return Type: boolean  "\fBis_sequential\fR" Returns a value of true if the library cell is a latch or flip-flop, or if the cell has sequential timing checks.  Return type: boolean  "\fBis_tristate\fR" Returns a value of true if the library cell definition includes three_state:true.  Return type: boolean  "\fBlate_clock_check_incremental_derate_factor\fR" Returns the late clock path library cell check incremental derating factor specified through the set_timing_derate -incremental_adjust parameter.  Return Type: float  "\fBlate_data_check_incremental_derate_factor\fR" Returns the late data path library cell check incremental derating factor specified through the set_timing_derate -incremental_adjust parameter.  Return Type: float  "\fBlate_fall_clock_incremental_derate_factor\fR" Returns the late clock path library cell check incremental derating factor specified through the set_timing_derate -incremental_adjust parameter - when the -fall parameter is specified.  Return Type: float  "\fBlate_fall_data_incremental_derate_factor\fR" Returns the late data path library cell check incremental derating factor specified through the set_timing_derate -incremental_adjust parameter - when the -fall parameter is specified.  Return Type: float  "\fBlate_fall_clock_period_derate_factor\fR" Returns the derate factor for the clock period when the set_timing_derate -late and -fall parameters are specified.  Return type: float  "\fBlate_fall_clock_period_mean_derate_factor\fR" Returns the late/fall derate factor for the clock period when the set_timing_derate -mean parameter is specified.  Return type: float  "\fBlate_fall_clock_period_sigma_derate_factor\fR" Returns the late/fall derate factor for the clock period when the set_timing_derate -sigma parameter is specified.  Return type: float  "\fBlate_fall_pulse_width_derate_factor\fR" Returns the late/fall derate factor for the pulse width when the set_timing_derate -late and -fall parameters are specified.  Return type: float  "\fBlate_fall_pulse_width_mean_derate_factor\fR" Returns the late/fall derate factor for the pulse width when the set_timing_derate -mean parameter is specified.  Return type: float  "\fBlate_fall_pulse_width_sigma_derate_factor\fR" Returns the late/fall derate factor for the pulse width when the set_timing_derate -sigma parameter is specified.  Return type: float  "\fBlate_rise_clock_incremental_derate_factor\fR" Returns the late clock path library cell check incremental derating factor specified through the set_timing_derate -incremental_adjust parameter - when the -rise parameter is specified.  Return Type: float  "\fBlate_rise_data_incremental_derate_factor\fR" Returns the late data path library cell check incremental derating factor specified through the set_timing_derate -incremental_adjust parameter - when the -rise parameter is specified.  Return Type: float  "\fBlate_rise_clock_period_derate_factor\fR" Returns the derate factor for the clock period when the set_timing_derate -late and -rise parameters are specified.  Return type: float  "\fBlate_rise_clock_period_mean_derate_factor\fR" Returns the late/rise derate factor for the clock period when the set_timing_derate -mean parameter is specified.  Return type: float  "\fBlate_rise_clock_period_sigma_derate_factor\fR" Returns the late/rise derate factor for the clock period when the set_timing_derate -sigma parameter is specified.  Return type: float  "\fBlate_rise_pulse_width_derate_factor\fR" Returns the derate factor for the pulse width check when the set_timing_derate -late and -rise parameters are specified.  Return type: float  "\fBlate_rise_pulse_width_mean_derate_factor\fR" Returns the late/rise derate factor for the pulse width when the set_timing_derate -mean parameter is specified.  Return type: float  "\fBlate_rise_pulse_width_sigma_derate_factor\fR" Returns the late/rise derate factor for the pulse width when the set_timing_derate -sigma parameter is specified.  Return type: float  "\fBname\fR" Returns the leaf-level name of the library cell.  Return Type: string  "\fBobject_type\fR" Returns the object type lib_cell.  Return Type: string  "\fBreceiver_capacitance_type\fR" Returns the value of input capacitance group being used for delay calculations - C1C2 (2-piece model) or C1CN (n-piece model).  Return Type: string  "\fBretention_cell\fR" Returns the value of the retention_cell attribute specified in the liberty.  Return type: string  "\fBtiming_model_type\fR" Returns the model type for a given cell or instance. The supported values are abstracted, extracted, and qtm.  Return type: stringLibrary Cell Properties for Power/Ground Objects  "\fBground_pins\fR" Returns a collection of the ground pins of a library cell.  Return type: collection  For example,  get_property [get_lib_cells sc_cmoslp/AO22X] ground_pins  "\fBis_always_on\fR" Returns a value of true if the always_on attribute of a library cell is set to true indicating that the library cell is an always-on cell.  Return type: boolean  For example,  get_property [get_lib_cells sc_cmoslp/AON22_X4M] is_always_on  "\fBis_isolation_cell\fR" Returns a value of true if the library cell is an isolation cell.  Return type: boolean  For example,  get_property [get_lib_cells sc_cmoslp/ISO22_X4M] is_isolation_cell  "\fBis_power_switch\fR" Returns a value of true when the switch_cell_type attribute is defined for a library cell indicating that the library cell is a power-switch cell.  Return type: boolean  For example,  get_property [get_lib_cells sc_cmoslp/AO22X] is_power_switch  "\fBis_retention\fR" Returns a value of true when the retention_cell attribute is defined for a library cell indicating that the library cell is a retention cell.  Return type: boolean  For example,  get_property [get_lib_cells sc_cmoslp/RET22_X4M] is_retention  "\fBlevel_shifter_type\fR" Returns the type of level-shifter (e.g., LH, HL, or HL_LH) as defined by the level_shifter_type attribute of a library cell.  Return type: string  For example,  get_property [get_lib_cells sc_cmoslp/A2LVLD_X4M] level_shifter_type  "\fBlib_pg_pins\fR" Returns a collection of all PG pins (both power and ground) defined in the library of a library cell.  Return type: collection   For example,  get_property [get_lib_cells sc_cmoslp/AO22X] lib_pg_pins  "\fBpower_pins\fR" Returns a collection of the power pins of a library cell.  Return type: collection  For example,  get_property [get_lib_cells sc_cmoslp/AO22X] power_pins  "\fBpower_switch_type\fR" Returns the type of power-switch (e.g., coarse-grain, fine-grain) as defined by the switch_cell_type attribute of library cells.  Return type: string  For example,  get_property [get_lib_cells sc_cmoslp/AO22X] power_switch_type  "\fBstd_cell_main_rail_name\fR" Returns the name of a power rail that has the std_cell_main_rail library attribute defined as true for a library cell.  Return type: string  For example,  get_property [get_lib_cells sc_cmoslp/AO22X] std_cell_main_rail_name
.P 
.SH Library Pin Properties   "\fBcapacitance\fR" Returns the capacitance for the library pin.  Return type: float  "\fBcapacitance_max_fall\fR" Returns the maximum value of the falling capacitance range.  Return type: float  "\fBcapacitance_max_rise\fR" Returns the maximum value of the rising capacitance range.  Return type: float  "\fBcapacitance_min_fall\fR" Returns the minimum value of the falling capacitance range.  Return type: float  "\fBcapacitance_min_rise\fR" Returns the minimum value of the rising capacitance range.  Return type: float  "\fBdirection\fR" Returns the direction of the library pin: in, out, or inout.  Return type: string  "\fBfanout_load\fR" Returns the fanout load value of the library pin.  Return type: float  "\fBhierarchical_name\fR" Returns the hierarchical name of the library pin.  Return type: string  "\fBis_async\fR" Returns a value of true if the library pin is an asynchronous preset pin, or an asynchronous clear pin.  Return type: boolean  "\fBis_clear\fR" Returns a value of true if the pin is an asynchronous clear pin.  Return type: boolean  "\fBis_clock\fR" Returns a value of true if the library pin definition includes clock:true.  Return type: boolean  "\fBis_data\fR" Returns a value of true if the library pin with defined sequential arcs is the data pin of a flip-flop.  Return type: boolean  "\fBis_fall_edge_triggered_clock\fR" Returns a value of true if the library pin is the clock pin of a falling edge triggered device.  Return type: boolean  "\fBis_fall_edge_triggered_data\fR" Returns a value of true if the library pin is the data pin of a falling edge triggered device.  Return type: boolean  "\fBis_negative_level_sensitive_clock\fR" Returns a value of true if the library pin is an enable pin of an active low level-sensitive device.  Return type: boolean  "\fBis_negative_level_sensitive_data\fR" Returns a value of true if the pin is a data pin of an active low level-sensitive device.  Return type: boolean  "\fBis_pll_feedback_pin\fR" Returns a value of true if the Liberty library is_pll_feedback_pin attribute is set to true for this library pin.  Return type: boolean  "\fBis_pll_output_pin\fR" Returns a value of true if the Liberty library is_pll_output_pin attribute is set to true for this library pin.  Return type: boolean  "\fBis_pll_reference_pin\fR" Returns a value of true if the Liberty library is_pll_reference_pin attribute is set to true for this library pin.  Return type: boolean  "\fBis_positive_level_sensitive_clock\fR" Returns a value of true if the library pin is an enable pin of an active high level-sensitive device.  Return type: boolean  "\fBis_positive_level_sensitive_data\fR" Returns a value of true if the pin is a data pin of an active high level-sensitive device.  Return type: boolean  "\fBis_preset\fR" Returns a value of true if the pin is a preset pin.  Return type: boolean  "\fBis_rise_edge_triggered_clock\fR" Returns a value of true if the library pin is the clock pin of a rising edge triggered device.  Return type: boolean  "\fBis_rise_edge_triggered_data\fR" Returns a value of true if the library pin is the data pin of a rising edge triggered device.  Return type: boolean  "\fBis_tristate\fR" Returns a value of true if the library pin definition includes three_state:true.  Return type: boolean  "\fBmax_capacitance\fR" Returns the maximum capacitance limit for the library pin.  Return type: float  "\fBmax_fanout\fR" Returns the maximum fanout value for the library pin.  Return type: float  "\fBmax_transition\fR" Returns the maximum transition time limit specified for a given library pin. If the limit is not specified for a library pin, then the limit specified at the corresponding library level will be used.  Return type: float  "\fBmin_transition\fR" Returns the minimum transition time limit specified for a given library pin. If the limit is not specified for a library pin, then the limit specified at the corresponding library level will be used.  Return type: float  "\fBmin_capacitance\fR" Returns the minimum capacitance limit for the library pin.  Return type: float  "\fBmin_fanout\fR" Returns the minimum fanout value for the library pin.  Return type: float  "\fBname\fR" Returns the leaf-level name of the library cell pin.  Return type: string  "\fBobject_type\fR" Returns the object type; in this case, lib_pin.  Return type: string  "\fBrelated_ground_pin_name\fR" Returns related ground pin names for the corresponding library pins.  Return type: string  For example,  get_property [get_lib_pins sc_cmoslp/AO22X/I1] related_ground_pin_name  "\fBrelated_power_pin_name\fR" Returns related power pin names for the corresponding library pins.  Return type: string  "\fBslew_threshold_percent_fall_high\fR" Returns the upper slew trip point for falling waveforms, specified as a percent.  Return type: float  "\fBslew_threshold_percent_fall_low \fR" Returns the lower slew trip point for falling waveforms, specified as a percent.  Return type: float  "\fBslew_threshold_percent_rise_high\fR" Returns the upper slew trip point for rising waveforms, specified as a percent.  Return type: float  "\fBslew_threshold_percent_rise_low \fR" Returns the lower slew trip point for rising waveforms, specified as a percent.  Return type: floatLibrary Signal Pin Properties for Power/Ground Objects  "\fBinput_signal_level_voltage\fR" Returns the voltage value corresponding to the power rail name/signal which is defined for the library-cell input pin. This voltage value is the full rail-to-rail voltage value that is associated with the relative power rail name through the voltage_map attribute defined in the library.  Return type: float  For example,  get_property [get_lib_pins sc_cmoslp/AO22X/I1] input_signal_level_voltage  "\fBis_always_on\fR" Returns a value of true if the always_on attribute of a library signal pin is set to true indicating that the library cell signal pin is an always-on pin.  Return type: boolean  For example,  get_property [get_lib_pins sc_cmoslp/AO22X/I1] is_always_on  "\fBis_isolated\fR" Returns a value of true if the is_isolated attribute of a library signal pin is set to true indicating that the library cell signal pin is an internally isolated pin.  Return type: boolean  For example,  get_property [get_lib_pins sc_cmoslp/AO22X/I1] is_isolated  "\fBis_isolation_cell_data\fR" Returns a value of true if the isolation_cell_data_pin attribute of a library signal pin is set to true indicating that the library cell signal pin is a data pin of an isolation library cell.  Return type: boolean  For example,  get_property [get_lib_pins sc_cmoslp/AO22X/I1] is_isolation_cell_data  "\fBis_isolation_cell_enable\fR" Returns a value of true if the isolation_cell_enable_pin attribute of a library signal pin is set to true indicating that the library cell signal pin is an enable or control pin of an isolation library cell.  Return type: boolean  For example,  get_property [get_lib_pins sc_cmoslp/AO22X/I1] is_isolation_cell_enable  "\fBis_level_shifter_data\fR" Returns a value of true if the level_shifter_data_pin attribute of a library signal pin is set to true, indicating that the library cell signal pin is a data pin of a library level-shifter cell.  Return type: boolean  For example,  get_property [get_lib_pins sc_cmoslp/AO22X/I1] is_level_shifter_data  "\fBis_level_shifter_enable\fR" Returns a value of true if the level_shifter_enable_pin attribute of a library signal pin is set to be true indicating that the library-cell signal pin is an enable pin of a library level shifter cell.  Return type: boolean  For example,  get_property [get_lib_pins sc_cmoslp/AO22X/I1] is_isolation_cell_enable  "\fBis_power_switch_enable\fR" Returns a value of true if the switch_cell_type attribute of the corresponding library cell is defined and the switch_pin attribute of the given library-cell signal pin is defined to be true.  Return type: boolean  For example,  get_property [get_lib_pins sc_cmoslp/AO22X/I1] is_power_switch_enable  "\fBis_retention_cell_enable\fR" Returns a value of true if the retention_pin attribute of a signal pin is defined.  Return type: boolean  For example,  get_property [get_lib_pins sc_cmoslp/AO22X/I1] is_retention_cell_enable  "\fBoutput_signal_level\fR" Returns the power rail name/signal that is defined for a library cell output and inout pins.  Return type: string  For example,  get_property [get_lib_pins sc_cmoslp/AO22X/I1] output_signal_level  "\fBoutput_signal_level_high\fR" Returns the upper/higher limit of partial voltage swing value that is defined for a library cell output and inout pins.  Return type: float  For example,  get_property [get_lib_pins sc_cmoslp/AO22X/I1] output_signal_level_high  "\fBoutput_signal_level_low\fR" Returns the lower limit of partial voltage swing value that is defined for a library cell output and inout pins.  Return type: float  For example,  get_property [get_lib_pins sc_cmoslp/AO22X/I1] output_signal_level_low  "\fBrelated_ground_pin\fR" Returns the related ground pins as a collection for the corresponding library cell pins.  Return type: collection  For example,  get_property [get_lib_pins sc_cmoslp/AO22X/I1] related_ground_pin  "\fBrelated_ground_pin_name\fR" Returns the related ground pin names for the corresponding library cell pins.  Return type: string  For example,  get_property [get_lib_pins sc_cmoslp/AO22X/I1] related_ground_pin_name  "\fBrelated_ground_pin_rail_voltage\fR" Returns the voltage value corresponding to the ground rail name defined for the related_ground_pin attribute of the library cell pin. This voltage value is the full rail-to-rail value that is associated with the relative ground rail name through the voltage_map attribute defined in the library.  Return type: float  For example,  get_property [get_lib_pins sc_cmoslp/AO22X/I1] related_ground_pin_rail_voltage  "\fBrelated_power_pin\fR" Returns the related power pins as a collection for the corresponding library cell pins.  Return type: collection  For example,  get_property [get_lib_pins sc_cmoslp/AO22X/I1] related_power_pin  "\fBrelated_power_pin_name\fR" Returns the related power pin names for the corresponding library cell pins.  Return type: string  For example,  get_property [get_lib_pins sc_cmoslp/AO22X/I1] related_power_pin_name  "\fBrelated_power_pin_rail_voltage\fR" Returns the voltage value corresponding to the power rail name defined for the related_power_pin attribute of a library cell pin. This voltage value is the full rail-to-rail value that is associated with the relative power rail name through the voltage_map attribute defined in the library.  Return type: float  For example,  get_property [get_lib_pins sc_cmoslp/AO22X/I1] related_power_pin_rail_voltage 
.SH Library Pin Properties for Power/Ground Objects   "\fBis_std_cell_main_rail\fR" Returns a value of true if the library power pg_pin is the main rail of the library cell. It is determined by the std_cell_main_rail library attribute of libray pg_pin.  Return type: boolean   For example,  get_property [get_lib_pg_pins -of_objects [get_lib_cells sc_cmoslp/AO22X]] is_std_cell_main_rail  "\fBname\fR" Returns the name of the library pg pin as defined in the library and associated with the pg_pin library attribute.  Return type: string   For example,  get_property [get_lib_pg_pins -of_objects [get_lib_cells sc_cmoslp/AO22X]] name  "\fBobject_type\fR" Returns lib_pg_pin as the object type for a library pg pin.  Return type: string   For example,  get_property [get_lib_pg_pins -of_objects [get_lib_cells sc_cmoslp/AO22X]] object_type  "\fBpg_type\fR" Returns the type of the library pg pin as associated with the pg_type attribute of the corresponding library pg pin.  Return type: string   For example,  get_property [get_lib_pg_pins -of_objects [get_lib_cells sc_cmoslp/AO22X]] pg_type  get_property [get_lib_pg_pins -of_objects [get_lib_cells sc_cmoslp/AO22X] -filter " name =~ *VDD*" ] pg_type  "\fBrail_name\fR" Returns the name of the rail to which the pg-pin is connected and is associated with the voltage_name attribute of the library pg-pin.  Return type: string   For example,  get_property [get_lib_pg_pins -of_objects [get_lib_cells sc_cmoslp/AO22X]] rail_name  "\fBrail_voltage\fR" Returns the voltage from the voltage_map association of the rail to which the library pg-pin is connected.  Return type: float   For example,  get_property [get_lib_pg_pins -of_objects [get_lib_cells sc_cmoslp/AO22X]] rail_voltage  "\fBtied_to\fR" Returns the libray pg pin which is connected to substrate-bias pg pin.   Return type: string   For example,  get_property [get_lib_pg_pins -of_objects [get_lib_cells sc_cmoslp/AO22X]] tied_to 
.SH Library Timing Arc Properties   "\fBfrom_lib_pin\fR" Returns a collection of the source library pins of the library timing arc.  Return type: collection  "\fBis_disabled\fR" Return a value of true if a set_disable_timing constraint exists for a an arc.  Return type: boolean  "\fBobject_type\fR" Returns the object type lib_timing_arc.  Return type: string  "\fBsdf_cond\fR" Returns the sdf_cond expression specified for the timing library arc in the library.  Return type: string  "\fBsense\fR" Returns the timing_sense specified for the timing library arc in the library.  Return type: string  "\fBto_lib_pin\fR" Returns a collection of the sink library pins of the library timing arc.  Return type: collection  "\fBtiming_type\fR" Returns the type specified for the timing library arc in the library.  Return type: string  "\fBwhen\fR" Returns the when condition specified for the library timing arc in the library.  Return type: string 
.SH Net Properties   "\fBattackers\fR" Reports the parasitic data on a net - capacitance, resistance, or cross-coupling.  Return type: collection  "\fBcapacitance_max \fR" Returns the total capacitance of the net for maximum conditions.  Return type: float  "\fBcoupling_capacitance_max\fR" Returns the maximum value of coupling capacitance of a net over all the views.  Return type: float  "\fBcapacitance_min \fR" Returns the total capacitance of the net for minimum conditions.  Return type: float  "\fBcoupling_capacitance_min\fR" Returns the minimum value of coupling capacitance of a net over all the views.  Return type: float  "\fBdriver_pins\fR" Returns a collection of the driver pins of the net.  Return type: collection  "\fBearly_fall_clk_net_derate_factor\fR" Returns the early fall clock net derating factor specified through set_timing_derate command.  Return type: float  "\fBearly_fall_clk_net_delta_derate_factor\fR" Returns the early fall clock delta delay net derating factor specified through the set_timing_derate command.  Return type: float  "\fBearly_fall_data_net_delta_derate_factor\fR" Returns the early fall data delta net derating factor specified through the set_timing_derate command.  Return type: float  "\fBearly_fall_data_net_derate_factor\fR" Returns the early fall data net derating factor specified through set_timing_derate command.  Return type: float  "\fBearly_rise_clk_net_delta_derate_factor\fR" Returns the early rise clock delta net derating factor specified through the set_timing_derate command.  Return type: float  "\fBearly_rise_clk_net_derate_factor\fR" Returns the early rise clock net derating factor specified through the set_timing_derate command.  Return type: float  "\fBearly_rise_data_net_delta_derate_factor\fR" Returns the early rise data delta net derating factor specified through the set_timing_derate command.  Return type: float  "\fBearly_rise_data_net_derate_factor\fR" Returns the early rise data net derating factor specified through the set_timing_derate command.  Return type: float  "\fBhas_detailed_parasitics\fR" Returns a value of true if the net, or one of its parts, has detailed parasitics associated with it from either RC extraction or SPEF annotation.  Return type: boolean  "\fBhierarchical_name\fR" Returns the complete hierarchical name of the net.  Return type: string  "\fBis_ideal\fR" Returns a value of true if set_ideal_latency, set_ideal_transition, or set_ideal_network constraints exist for the net.  Return type: Boolean  "\fBlate_fall_clk_net_delta_derate_factor\fR" Returns the late fall clock delta net derating factor specified through the set_timing_derate command.  Return type: float  "\fBlate_fall_clk_net_derate_factor\fR" Returns the late fall clock net derating factor specified through the set_timing_derate command.  Return type: float  "\fBlate_fall_data_net_delta_derate_factor\fR" Returns the late fall data delta net derating factor specified through the set_timing_derate command.  Return type: float  "\fBlate_fall_data_net_derate_factor\fR" Returns the late fall data net derating factor specified through the set_timing_derate command.  Return type: float  "\fBlate_rise_clk_net_delta_derate_factor\fR" Returns the late rise clock delta net derating factor specified through the set_timing_derate command.  Return type: float  "\fBlate_rise_clk_net_derate_factor\fR" Returns the late rise clock net derating factor specified through the set_timing_derate command.  Return type: float  "\fBlate_rise_data_net_delta_derate_factor\fR" Returns the late rise data delta net derating factor specified through the set_timing_derate command.  Return type: float  "\fBlate_rise_data_net_derate_factor\fR" Returns the late rise data net derating factor specified through the set_timing_derate command.  Return type: float  "\fBis_dont_touch\fR" Returns a value of true if a set_dont_touch constraint exists for the net.  Return type: boolean  "\fBload_pins\fR" Returns a collection of the load pins of the net.  Return type: collection  "\fBlumped_capacitance_max\fR" Returns the maximum value of capacitance of a net based on the input library and parasitic model.  Return type: float  "\fBlumped_capacitance_min\fR" Returns the minimum value of capacitance of a net based on the input library and parasitic model.  Return type: float  "\fBname\fR" Returns the name of the net.  Return type: string  "\fBnum_driver_pins  \fR" Returns the number of driver pins on a net.  Return type: integer  "\fBnum_load_pins\fR" Returns the number of load pins on the net.  Return type: collection  "\fBobject_type\fR" Returns the object type net.  Return type: string  "\fBpin_capacitance_max\fR" Returns the sum of all pin capacitances of the net for maximum conditions.  Return type: float  "\fBpin_capacitance_max_fall\fR" Returns the sum of all pin capacitances of the net for the maximum value of the rising capacitance range.  Return type: float  "\fBpin_capacitance_max_rise\fR" Returns the sum of all pin capacitances of the net for the maximum value of the falling capacitance range.  Return type: float  "\fBpin_capacitance_min\fR" Returns the sum of all pin capacitances of the net for minimum conditions.  Return type: float Note pin_capacitance_* properties (described above), the pin capacitance matches with the capacitance displayed under the  pin_load column of the  report_timing output.   "\fBresistance_max\fR" Returns the maximum value of resistance of a net.  Return type: float  "\fBresistance_min\fR" Returns the minimum value of resistance of a net.  Return type: float  "\fBtotal_lumped_capacitance_max_fall\fR" Returns the maximum value of falling capacitance of a net based on the input library and parasitic model.  Return type: float  "\fBtotal_lumped_capacitance_max_rise\fR" Returns the maximum value of rising capacitance of a net based on the input library and parasitic model.  Return type: float  "\fBtotal_lumped_capacitance_min_fall\fR" Returns the minimum value of falling capacitance of a net based on the input library and parasitic model.  Return type: float  "\fBtotal_lumped_capacitance_min_rise\fR" Returns the minimum value of rising capacitance of a net based on the input library and parasitic model.  Return type: float  "\fBwire_capacitance_max \fR" Returns the wire capacitance of the net for maximum conditions.  Return type: float  "\fBwire_capacitance_min \fR" Returns the wire capacitance of the net for minimum conditions.  Return type: float 
.SH Net Properties for Power/Ground Objects   "\fBhierarchical_name \fR" Returns the name of the PG net connected to the corresponding PG pin.   Return type: string   For example,  get_property [get_pg_nets -of_objects [get_cells iA/out_reg] ] hierarchical_name  get_property [get_pg_nets -of_objects [get_cells iA/out_reg] -filter "is_power == true" ] hierarchical_name  "\fBis_ground\fR" Returns a value of true if the PG net is a ground net.  Return type: boolean   For example,  get_property [get_pg_nets -of_objects [get_cells iA/out_reg] ] is_ground  get_property [get_pg_nets -of_objects [get_pg_pins -of_objects [get_cells iA/out_reg] ]] is_ground  "\fBis_power\fR" Returns a value of true if the PG net is a power net.  Return type: boolean   For example,  get_property [get_pg_nets -of_objects [get_cells iA/out_reg] ] is_power  get_property [get_pg_nets -of_objects [get_cells iA/out_reg] -filter "name =~ *VDD*" ] is_power  "\fBvoltage_max\fR" Returns the maximum voltage of a given PG net. This could be voltage associated with a driver term of a net, power intent or CPF, related_pg_pins attribute in Liberty, or the operating voltage of a power domain or system default voltage.  Return type: float   For example,  get_property [get_pg_nets -of_objects [get_cells iA/out_reg] ] voltage_max  "\fBvoltage_min\fR" Returns the minimum voltage of a given PG net. This could be voltage associated with a driver term of a net, power intent or CPF, related_pg_pins attribute in Liberty or the operating voltage of a power domain or system default voltage.  Return type: float   For example,  get_property [get_pg_nets -of_objects [get_cells iA/out_reg] ] voltage_min  "\fBobject_type \fR" Returns pg_net as the object type for a library PG pin.  Return type: string   For example,  get_property [get_pg_nets -of_objects [get_cells iA/out_reg]] object_type  "\fBparent_pg_net \fR" Returns a collection of a parent power net that is the net powering the power switch that drives the PG net. In case of designs that do not have any power switches powering the instances, this property will always return the net directly powering those instances. It therefore be noted that the usage of this property is more relevant for designs in which the leaf cell instances are powered through power switch cells.   Return type: Collection   For example,  get_property [get_pg_nets mmu/U1/vdd] parent_pg_net  get_property [get_pg_nets -of_objects [get_cells iA/pwr_swtch] ] parent_pg_net  "\fBtop_pg_net \fR" Returns a collection of the top most un-switched power net of the current PG net. Even in the case of a cascading of power switches present in a design, the software traces through all power switches back to the un-switched top-level primary power net. The top-most un-switched power net will be returned - switched output power net will not be returned.   Return type: Collection   For example,  get_property [get_pg_nets -of_objects [get_cells iA/pwr_swtch] ] top_pg_net  get_property [get_pg_nets -of_objects [get_pg_pins -of_objects [get_cells iA/pwr_swtch] ]] top_pg_net 
.SH Path Group Properties   "\fBname\fR" Returns the name of the path group.  Return type: string  "\fBhierarchical_name\fR" Returns the hierarchical name of the path group.  Return type: string  "\fBobject_type\fR" Returns the object type path_group.  Return type: string 
.SH Pin Properties   "\fBactual_latency_early_fall_max\fR" When specified with the set_clock_latency -clock parameter, returns the worst actual early fall insertion delay in setup mode for the specified clock at the given pin. The latency reported is ideal or propagated, depending on the clock phase.  When specified without the -clock parameter, returns the worst actual early fall insertion delay on the pin. If multiple clocks reach the pin, the reported latency is the worst among all the clocks.  When specified with the -view parameter, returns the worst latency for the given view.  Return type: float  "\fBactual_latency_early_fall_min\fR" When specified with the set_clock_latency -clock parameter, returns the worst actual early fall insertion delay in hold mode for the specified clock at the given pin. The latency reported is ideal or propagated, depending on the clock phase.  When specified without the -clock parameter, returns the worst actual early fall insertion delay on the pin. If multiple clocks reach the pin, the reported latency is the worst among all the clocks.  When specified with the -view parameter, returns the worst latency for the given view.  Return type: float  "\fBactual_latency_early_rise_max\fR" When specified with the set_clock_latency -clock parameter, returns the worst actual early rise source insertion delay in setup mode for the specified clock at the given pin. The latency reported is ideal or propagated, depending on the clock phase.  When specified without the -clock parameter, returns the worst actual early rise source insertion delay on the pin. If multiple clocks reach the pin, the reported latency is the worst among all the clocks.  When specified with the -view parameter, returns the worst latency for the given view.  Return type: float  "\fBactual_latency_early_rise_min\fR" When specified with the set_clock_latency -clock parameter, returns the worst actual early rise source insertion delay in hold mode for the specified clock at the given pin. The latency reported is ideal or propagated, depending on the clock phase.  When specified without the -clock parameter, returns the worst actual early rise source insertion delay on the pin. If multiple clocks reach the pin, the reported latency is the worst among all the clocks.  When specified with the -view parameter, returns the worst latency for the given view.  Return type: float  "\fBactual_latency_late_fall_max\fR" When specified with the set_clock_latency -clock parameter, returns the worst actual late fall source insertion delay in setup mode for the specified clock at the given pin. The latency reported is ideal or propagated, depending on the clock phase.  When specified without the -clock parameter, returns the worst actual late fall source insertion delay on the pin. If multiple clocks reach the pin, the reported latency is the worst among all the clocks.  When specified with the -view parameter, returns the worst latency for the given view.  Return type: float  "\fBactual_latency_late_fall_min\fR" When specified with the set_clock_latency -clock parameter, returns the worst actual late fall source insertion delay in hold mode for the specified clock at the given pin. The latency reported is ideal or propagated, depending on the clock phase.  When specified without the -clock parameter, returns the worst actual late fall source insertion delay on the pin. If multiple clocks reach the pin, the reported latency is the worst among all the clocks.  When specified with the -view parameter, returns the worst latency for the given view.  Return type: float  "\fBactual_latency_late_rise_max\fR" When specified with the set_clock_latency -clock parameter, returns the worst actual late rise source insertion delay in setup mode for the specified clock at the given pin. The latency reported is ideal or propagated, depending on the clock phase.  When specified without the -clock parameter, returns the worst actual late rise source insertion delay on the pin. If multiple clocks reach the pin, the reported latency is the worst among all the clocks.  When specified with the -view parameter, returns the worst latency for the given view.  Return type: float  "\fBactual_latency_late_rise_min\fR" When specified with the set_clock_latency -clock parameter, returns the worst actual late rise source insertion delay in hold mode for the specified clock at the given pin. The latency reported is ideal or propagated, depending on the clock phase.  When specified without the -clock parameter, returns the worst actual late rise source insertion delay on the pin. If multiple clocks reach the pin, the reported latency is the worst among all the clocks.  When specified with the -view parameter, returns the worst latency for the given view.  Return type: float  "\fBarrival_clocks\fR" Returns the data phases, clock source data phases, and latency phases.   Return type: collection  The following global variables support these phases:
.RS  "*" 2 timing_property_arrival_clocks_consider_clock_source_data_phase: Considers the clock source data phases.  "*" 2 timing_property_arrival_clocks_consider_data_phase: Considers the pure data phase.  "*" 2 timing_property_arrival_clocks_consider_latency_phase:  Considers the latency phase.
.RE   By default, these global variables are set to true.  "\fBarrival_max_fall\fR" Returns the arrival time for the falling transition at the max corner.  Return type: float  "\fBarrival_max_rise\fR" Returns the arrival time for the rising transition at the max corner.  Return type: float  "\fBarrival_mean_max_fall\fR" Returns the mean component of the arrival time for the falling transition at the max corner.  Return type: float  "\fBarrival_mean_max_rise\fR" Returns the mean component of the arrival time for the rising transition at the max corner.  Return type: float  "\fBarrival_mean_min_fall\fR" Returns the mean component of the arrival time for the falling transition at the min corner.  Return type: float  "\fBarrival_mean_min_rise\fR" Returns the mean component of the arrival time for the rising transition at the min corner.  Return type: float  "\fBarrival_min_fall\fR" Returns the arrival time for the falling transition at the min corner.  Return type: float  "\fBarrival_min_rise\fR" Returns the arrival time for the rising transition at the min corner.  Return type: float  "\fBarrival_sigma_max_fall\fR" Returns the sigma component of the arrival time for the falling transition at the max corner.  Return type: float  "\fBarrival_sigma_max_rise\fR" Returns the mean component of the arrival time for the rising transition at the max corner.  Return type: float  "\fBarrival_sigma_min_fall\fR" Returns the sigma component of the arrival time for the falling transition at the min corner.  Return type: float  "\fBarrival_sigma_min_rise\fR" Returns the sigma component of the arrival time for the falling transition at the min corner.  Return type: float  "\fBarrival_window\fR" Returns the arrival times for the earliest and latest rising and falling transitions in timing window format.  Return type: string  "\fBattacker_fall_slew\fR" Returns the minimum falling slew of an attacker driver pin.  For example:  get_property   [get_pins inst1/y] attacker_fall_slew  Return type: float  "\fBattacker_rise_slew\fR" Returns the minimum rising slew of an attacker driver pin.  For example:  get_property   [get_pins inst1/y] attacker_rise_slew  Return type: float  "\fBcapacitance_max_fall\fR" Returns the maximum value of the falling capacitance range of the corresponding library pin.  Return type: float  "\fBcapacitance_max_rise\fR" Returns the maximum value of the rising capacitance range of the corresponding library pin.  Return type: float  "\fBcapacitance_min_fall\fR" Returns the minimum value of the falling capacitance range of the corresponding library pin.  Return type: float  "\fBcapacitance_min_rise\fR" Returns the minimum value of the rising capacitance range of the corresponding library pin.  Note: For the capacitance_max_* and capacitance_min_* properties (described above), the capacitance value does not match with the pin_load (report_timing -format) in the timing report because the pin load is a sum of all pin capacitances of a net.  Return type: float  "\fBclock_sources\fR" Returns a collection of the source pins of all the clocks arriving at the pin.  Return type: collection  "\fBclocks\fR" Returns a collection of all of the clocks arriving at the pin.  Return type: collection  "\fBconstant_value\fR" Returns a constant value of 0 or 1.  Return type: integer  "\fBdelay_max_fall\fR" Returns the maximum falling delay - specified using the set_max_delay -fall command.  Return type: float  "\fBdelay_max_rise\fR" Returns the maximum rising delay - specified using the set_max_delay -rise command.  Return type: float  "\fBdelay_min_fall\fR" Returns the minimum falling delay - specified using the set_min_delay -fall command.  Return type: float  "\fBdelay_min_rise\fR" Returns the minimum rising delay - specified using the set_min_delay -rise command.  Return type: float  "\fBdirection\fR" Returns the direction of the pin: in, out, or inout.  Return type: string  "\fBfanin\fR" Returns the number of sources connected with net of the specified pin.  Return type: integer  "\fBfanout\fR" Returns the number of sinks connected with the net of the specified pin.  Return type: integer  "\fBfanout_load\fR" Returns the fanout load for the pin.  Return type: float  "\fBhierarchical_name\fR" Returns the complete hierarchical name of the pin.  Return type: string  "\fBhold_uncertainty\fR" Returns the most conservative uncertainty of all possible uncertainty assertions associated with the pin.  Return type: float  "\fBholding_resistance_high\fR" Returns the highest holding resistance of a pin.  For example,  foreach pin $pinList {  set   vicArray [get_property [get_pins $pin] noise_victim]  foreach_in_collection   vic $vicArray {  get_property   $vic holding_resistance_high  }  Return type: float  "\fBholding_resistance_low\fR" Returns the lowest holding resistance of a pin.   Return type: float  "\fBinterp_info_max\fR" Returns information for late analysis.  When specified, the report output will show the data for interpolation, extrapolation, and/or matched information for late analysis, along with the library details.  Return type: string  "\fBinterp_info_min\fR" Returns information for early analysis.  When specified, the report output will show the data for interpolation, extrapolation, and/or matched information for early analysis, along with the library details.  Return type: string  "\fBis_async\fR" Returns a value of true if the pin is an asynchronous clear or preset pin.  Return type: boolean  "\fBis_clear\fR" Returns a value of true if the pin is an asynchronous clear pin.  Return type: boolean  "\fBis_clock\fR" Returns a value of true if the pin has the Liberty pin attribute: clock.  Return type: boolean  "\fBis_clock_gating\fR" Returns a value of true if the pin is defined as a pin of a clock gating cell.  Return type: boolean  "\fBis_clock_gating_clock\fR" Returns a value of true if the pin is defined as a clock pin of a clock gating cell.  Return type: boolean  "\fBis_clock_gating_enable\fR" Returns a value of true if the pin corresponds to the enable pin of a clock gating cell.  Return type: boolean  "\fBis_clock_used_as_clock\fR" Returns a value of true if the pin lies in the clock network and at least one of the clocks arriving at the pin is used as a clock in the downstream network of the pin.  When the -clock parameter is specified, this property returns true if the above condition is satisfied for the specified clock.   Return type: boolean  "\fBis_clock_used_as_data\fR" Returns a value of true if the pin lies in the clock source path  and at least one of the clocks arriving on the pin is used as data in the downstream network of the pin.  When the -clock parameter is specified, this property returns true if the above condition is satisfied for the specified clock.   Return type: boolean  "\fBis_data\fR" Returns a value of true if the pin is a data pin of a flip-flop (that is, is not a clock pin).  Return type: boolean  "\fBis_disable_timing\fR" Returns a value of true if the pin's timing has been disabled.  Return type: boolean  Note: This property checks if the associated arc for the pin is active for propagation and analysis.  "\fBis_fall_edge_triggered_clock\fR" Returns a value of true if the pin is a clock pin of a flop, and is triggered by the falling edge of a clock.  Return type: boolean  "\fBis_fall_edge_triggered_data\fR" Returns a value of true if the pin corresponds to the data pin of a fall edge triggered device.  Return value: boolean  "\fBis_hierarchical\fR" Returns a value of true if the pin is a pin of a hierarchical module.  Return type: boolean  "\fBis_isolated\fR" Returns a value of true when a pin is connected to an isolated instance.  The is_isolation attribute indicates that the isolation cell is inside a module. So if the module is used as macro or black-box, the software will interpret the pin to be already isolated and no additional isolation will be required.  Return type: boolean  "\fBis_multiple_clock_fanin_point\fR" Returns a value of true if multiple clock phases converge at the pin.  Return type: boolean  "\fBis_negative_level_sensitive_clock\fR" Returns a value of true if the library pin is an enable pin of an active low level-sensitive device.  Return type: boolean  "\fBis_negative_level_sensitive_data\fR" Returns a value of true if the pin is a data pin of an active low level-sensitive device.  Return type: boolean  "\fBis_pin\fR" Returns a value of true.  The is_pin and is_port queries are provided for both pin and port objects to provide a quick way of determining the object type of an identifier. is_port always returns false for pins. is_pins always returns false for ports.  Return type: boolean  "\fBis_port\fR" Returns a value of false.  The is_pin and is_port queries are provided for both pin and port objects to provide a quick way of determining the object type of an identifier. is_port always returns false for pins. is_pins always returns false for ports.  Return type: boolean  "\fBis_positive_level_sensitive_clock\fR" Returns a value of true if the library pin is an enable pin of an active high level-sensitive device.  Return type: boolean  "\fBis_positive_level_sensitive_data\fR" Returns a value of true if the pin is a data pin of an active high level-sensitive device.  Return type: boolean  "\fBis_preset\fR" Returns a value of true if the pin is a preset pin.  Return type: boolean  "\fBis_propagated_clock\fR" Returns a value of true if there is an explicit set_propagated_clock assertion at the pin.  Return type: boolean  "\fBis_rise_edge_triggered_clock\fR" Returns a value of true if the pin is a clock pin of a flop, and is triggered by the rising edge of a clock.  Return type: boolean  "\fBis_rise_edge_triggered_data\fR" Returns a value of true if the pin corresponds to the data pin of a rise edge-triggered device.  Return type: boolean  "\fBis_tristate\fR" Returns a value of true if the pin has the three_state attribute in the Liberty timing library.  Return type: boolean  "\fBis_tristate_enable\fR" Returns a value of true if the pin is the source pin of timing arcs with either the three_state_enable or three_state_disable attribute in the Liberty timing library.  Return type: boolean  "\fBis_tristate_output\fR" Returns a value of true if the pin corresponds to a three-state output pin.  Return type: boolean  "\fBlatency_fall_max\fR" Returns the maximum fall insertion delay specified by an explicit set_clock_latency at the pin.  Return type: float  "\fBlatency_fall_min\fR" Returns the minimum fall insertion delay specified by an explicit set_clock_latency at the pin.  Return type: float  "\fBlatency_rise_max\fR" Returns the maximum rise insertion delay specified by an explicit set_clock_latency at the pin.  Return type: float  "\fBlatency_rise_min\fR" Returns the minimum rise insertion delay specified by an explicit set_clock_latency at the pin.  Return type: float  "\fBmax_capacitance\fR" Returns the maximum capacitance limit for the pin.  Return type: float  "\fBmax_fanout\fR" Returns the maximum fanout load that the pin can drive. This value is set using set_max_fanout or the default_max_fanout library attribute.  Return type: float  "\fBmax_transition\fR" Returns the maximum transition time limit specified for the pin.  Return type: float  "\fBmin_fanout\fR" Returns the minimum fanout design rule limit of the corresponding library pin.  Return type: float  "\fBnet_name\fR" Returns the name of the net connected to the specified pin.  Return type: string  "\fBnoise_victim\fR" Returns a collection of si_victim objects that can be used to query glitch attributes.  Return type: collection  "\fBobject_type\fR" Returns the object type pin.  Return type: string  "\fBpower_rail_voltage_bidir_input_max\fR" Reports power rail voltage for input part of bidi pins/ports for maximum operating condition.  Return type: float  "\fBpower_rail_voltage_bidir_input_min\fR" Reports power rail voltage for input part of bidi pins/ports for minimum operating condition.  Return type: float  "\fBpower_rail_voltage_max\fR" Reports power rail voltage for maximum operating condition for bidirectional, input and output pins. For bidirectional pins, the power rail voltage for output signal is reported.  Return type: float  "\fBpower_rail_voltage_min\fR" Reports power rail voltage for minimum operating condition for bidirectional, input and output pins. For bidirectional pins, the power rail voltage for output signal is reported.  Return type: float  "\fBreceiver_ccc_type\fR" Returns the type of receiver cell model. The return values can be udn, single_ccc, dual_ccc, multi_ccc, or black_box.  This attribute applies to receiver pins only.  For example,  get_property   [get_pins inst1/a] receiver_ccc_type  Return type: string  "\fBref_lib_pin_name\fR" Returns the name of the library pin associated with the instance pin.  Return type: string  "\fBsetup_uncertainty\fR" Returns the most conservative uncertainty of all possible uncertainty assertions associated with the pin.  Return type: float  "\fBsi_victim\fR" Returns a collection of the si_victim objects that can be used to query graph-based SI delay attributes.  Return type: collection  "\fBslack_max_edge\fR" Returns the edge (rise or fall) of the worst slack-causing path at the specified pin in late mode.  Return type: string  "\fBslack_max_fall\fR" Returns the slack time for the falling transition at the max corner.  Return type: float  "\fBslack_max_rise\fR" Returns the slack time for the rising transition at the max corner.  When the -view parameter is not specified, the worst slack for all the views is returned.  Return type: float  "\fBslack_mean_max_fall\fR" Returns the mean component of the slack time for the falling transition at the max corner.  Return type: float  "\fBslack_mean_max_rise\fR" Returns the mean component of the slack time for the rising transition at the max corner.  Return type: float  "\fBslack_mean_min_fall\fR" Returns the mean component of the slack time for the falling transition at the min corner.  Return type: float  "\fBslack_mean_min_rise\fR" Returns the mean component of the slack time for the rising transition at the min corner.  Return type: float  "\fBslack_min_edge\fR" Returns the edge (rise or fall) of the worst slack-causing path at the specified pin in early mode.  Return type: string  "\fBslack_min_fall\fR" Returns the slack time for the falling transition at the min corner.  Return type: float  "\fBslack_min_rise\fR" Returns the slack time for the rising transition at the min corner.  Return type: float  "\fBslack_sigma_max_fall\fR" Returns the sigma component of the slack time for the falling transition at the max corner.  Return type: float  "\fBslack_sigma_max_rise\fR" Returns the sigma component of the slack time for the rising transition at the max corner.  Return type: float  "\fBslack_sigma_min_fall\fR" Returns the sigma component of the slack time for the falling transition at the min corner.  Return type: float  "\fBslack_sigma_min_rise\fR" Returns the sigma component of the slack time for the rising transition at the min corner.  Return type: float  "\fBslew_max_fall\fR" Returns the slew time for the falling transition at the max corner.  Return type: float  "\fBslew_max_rise\fR" Returns the slew time for the rising transition at the max corner.  Return type: float  "\fBslew_mean_max_fall\fR" Returns the mean component of the slew time for the falling transition at the max corner.  Return type: float  "\fBslew_mean_max_rise\fR" Returns the mean component of the slew time for the rising transition at the max corner.  Return type: float  "\fBslew_mean_min_fall\fR" Returns the mean component of the slew time for the falling transition at the min corner.  Return type: float  "\fBslew_mean_min_rise\fR" Returns the mean component of the slew time for the rising transition at the min corner.  Return type: float  "\fBslew_min_fall\fR" Returns the slew time for the falling transition at the min corner.  Return type: float  "\fBslew_min_rise\fR" Returns the slew time for the rising transition at the min corner.  Return type: float  "\fBslew_sigma_max_fall\fR" Returns the sigma component of the slew time for the falling transition at the max corner.  Return type: float  "\fBslew_sigma_max_rise\fR" Returns the sigma component of the slew time for the rising transition at the max corner.  Return type: float  "\fBslew_sigma_min_fall\fR" Returns the sigma component of the slew time for the falling transition at the min corner.  Return type: float  "\fBslew_sigma_min_rise\fR" Returns the sigma component of the slew time for the falling transition at the min corner.  Return type: float  "\fBsource_latency_early_fall_max\fR" Returns the maximum early fall source insertion delay specified by an explicit set_clock_latency at the pin.  Return type: float  "\fBsource_latency_early_fall_min\fR" Returns the minimum early fall source insertion delay specified by an explicit set_clock_latency at the pin.  Return type: float  "\fBsource_latency_early_rise_max\fR" Returns the maximum early rise source insertion delay specified by an explicit set_clock_latency at the pin.  Return type: float  "\fBsource_latency_early_rise_min\fR" Returns the minimum early rise source insertion delay specified by an explicit set_clock_latency at the pin.  Return type: float  "\fBsource_latency_late_fall_max\fR" Returns the maximum late fall source insertion delay specified by an explicit set_clock_latency at the pin.  Return type: float  "\fBsource_latency_late_fall_min\fR" Returns the minimum late fall source insertion delay specified by an explicit set_clock_latency at the pin.  Return type: float  "\fBsource_latency_late_rise_max\fR" Returns the maximum late rise source insertion delay specified by an explicit set_clock_latency at the pin.  Return type: float  "\fBsource_latency_late_rise_min\fR" Returns the minimum late rise source insertion delay specified by an explicit set_clock_latency at the pin.  Return type: float  "\fBstolen_slack\fR" Returns the slack stolen at the specified pin. This property can be queried only for pins in late mode.  Note: The specified pin must be the endpoint of a transparent latch flush arc.  Return type: float  "\fBuser_constant_value\fR" Returns constant values from netlist or constraints.  Return type: integer  "\fBx_coordinate\fR" Returns the x coordinates of the placed pin.  Return type: float  "\fBy_coordinate\fR" Returns the y coordinates of the placed pin.  Return type: float  Pin Properties for Power/Ground Objects  "\fBinput_signal_level\fR" Returns the rail name of the related_power_pin of an input signal pin.   Return type: string   For example,  get_property [get_pins mmu/U1/I] input_signal_level  "\fBinput_signal_level_voltage\fR" Returns the rail voltage of a rail of the related_power_pin attribute of the input signal pin.  Return type: float  For example,  get_property [get_pins mmu/U1/I] input_signal_level_voltage  "\fBis_always_on\fR" Returns a value of true if an instance pin is an always-on pin.  Return type: boolean  For example,  get_property [get_pins mmu/U1/AON] is_always_on  "\fBis_isolation_cell_data\fR" Returns a value of true if the instance signal pin is the data pin of an isolation cell instance.  Return type: boolean  For example,  get_property [get_pins mmu/U2/ISO] is_isolation_cell_data  "\fBis_isolation_cell_enable\fR" Returns a value of true if the instance signal pin is the enable pin of an isolation cell instance.  Return type: boolean  For example,  get_property [get_pins mmu/U2/ISO_EN] is_isolation_cell_enable  "\fBis_level_shifter_data \fR" Returns a value of true if the instance signal pin is the data pin of a level-shifter cell instance.  Return type: boolean  For example,  get_property [get_pins mmu/LVL/IN] is_level_shifter_data  "\fBis_level_shifter_enable\fR" Returns a value of true if the instance signal pin is the enable pin of a level-shifter cell instance.  Return type: boolean  For example,  get_property [get_pins mmu/LVL/EN] is_level_shifter_enable  "\fBoutput_signal_level \fR" Returns the rail name of the related_power_pin attribute of the output/inout signal pin.  Return type: string   For example,  get_property [get_pins mmu/U1/Y] output_signal_level  "\fBrelated_ground_pin\fR" Returns the related ground pins as a collection for the corresponding instance pins.  Return type: collection   For example,  get_property [get_pins mmu/U1/I] related_ground_pin  "\fBrelated_power_pin \fR" Returns the related power pins as a collection for the corresponding instance pins.  Return type: collection   For example,  get_property [get_pins mmu/U1/I] related_power_pin 
.SH Pin Properties for Power/Ground Objects   "\fBhierarchical_name\fR" Returns the complete hierarchical name of the PG pin.  Return type: string   For example,  get_property [get_pg_pins -of_objects [get_cells iA/out_reg] ] hierarchical_name  get_property [get_pg_pins -of_objects [get_cells iA/out_reg] -filter "pg_type == primary_power" ] hierarchical_name  "\fBvoltage_max \fR" Returns the maximum voltage of a given PG pin. This could be the voltage associated with a pin, power intent or CPF, related_pg_pins attribute in Liberty, or the operating voltage of a power domain or system default voltage.   Return type:  float   For example,  get_property [get_pg_pins -of_objects [get_cells iA/out_reg]] voltage_max  "\fBvoltage_min \fR" Returns the minimum voltage of a given PG pin. This voltage may be associated with a pin, power intent or CPF, related_pg_pins attribute in Liberty, or the operating voltage of a power domain or system default voltage.   Return type: float   For example,  get_property [get_pg_pins -of_objects [get_cells iA/out_reg]] voltage_min  "\fBnet\fR" Returns the immediate PG net(s) connected to the corresponding PG pin objects, as a collection.   Return type: Collection   For example,  get_property [get_pg_pins -of_objects [get_cells iA/out_reg]] net  "\fBpg_type\fR" Returns the type of PG pin.  Return type: string   For example,  get_property [get_pg_pins -of_objects [get_cells iA/out_reg]] pg_type  get_property [get_pg_pins -of_objects [get_cells iA/out_reg] -filter "hierarchical_name =~ *VDD*" ] pg_type  "\fBref_lib_pin_name\fR" Returns the name of the library PG pin associated with an instance PG pin.   Return type: string   For example,  get_property [get_pg_pins -of_objects [get_cells iA/out_reg]] ref_lib_pin_name
.P 
.SH Port Properties   "\fBarrival_max_fall\fR" Returns the worst arrival on the port for a falling signal.  Return type: float  "\fBarrival_max_rise\fR" Returns the worst arrival on the port for a rising signal.  Return type: float  "\fBarrival_min_fall\fR" Returns the best arrival on the port for a falling signal.  Return type: float  "\fBarrival_min_rise\fR" Returns the best arrival on the port for a rising signal.  Return type: float  "\fBarrival_window\fR" Returns the arrival times for the earliest and latest rising and falling transitions in timing window format.  Return type: string  "\fBclock_sources\fR" Returns a collection of the source pins of all the clocks arriving at the port.  Return type: collection  "\fBclocks\fR" Returns a collection of all of the clocks arriving at the port.  Return type: collection  "\fBconstant_value\fR" Returns a constant value of 0 or 1.  Return type: integer  "\fBcapacitance_max\fR" Returns the maximum pin capacitance for the port.  Return type: float  "\fBcapacitance_min\fR" Returns the minimum pin capacitance for the port.  Return type: float  "\fBdelay_max_fall\fR" Returns the maximum falling delay value for the port.  Return type: float  "\fBdelay_max_rise\fR" Returns the maximum rising delay value for the port.  Return type: float  "\fBdelay_min_fall\fR" Returns the minimum falling delay value for the port.  Return type: float  "\fBdelay_min_rise\fR" Returns the minimum rising delay value for the port.  Return type: float  "\fBdirection\fR" Returns the direction of the port: in, out, or inout.  Return type: string  "\fBdrive_resistance_fall_max\fR" Returns the falling linear drive resistance at the port for the max condition.  Return type: float  "\fBdrive_resistance_fall_min\fR" Returns the falling linear drive resistance at the port for the min condition.  Return type: float  "\fBdrive_resistance_rise_max\fR" Returns the rising linear drive resistance at the port for the max condition.  Return type: float  "\fBdrive_resistance_rise_min\fR" Returns the rising linear drive resistance at the port for the min condition.  Return type: float  "\fBdriving_cell_fall_max\fR" Returns the name of the library cell used to compute max falling delays and transitions at the port.  Return type: string  "\fBdriving_cell_fall_min\fR" Returns the name of the library cell used to compute min falling delays and transitions at the port.  Return type: string  "\fBdriving_cell_from_pin_fall_max\fR" Returns the input pin of the driving cell used in the max fall delay calculation at the port.  Return type: string  "\fBdriving_cell_from_pin_fall_min\fR" Returns the input pin of the driving cell used in the min fall delay calculation at the port.  Return type: string  "\fBdriving_cell_from_pin_rise_max\fR" Returns the input pin of the driving cell used in max rise delay calculation at the port.  Return type: string  "\fBdriving_cell_from_pin_rise_min\fR" Returns the input pin of the driving cell used in min rise delay calculation at the port.  Return type: string  "\fBdriving_cell_library_fall_max\fR" Returns the name of the library used to compute max falling delays and transitions at the port.  Return type: string  "\fBdriving_cell_library_fall_min\fR" Returns the name of the library used to compute min falling delays and transitions at the port.  Return type: string  "\fBdriving_cell_library_rise_max\fR" Returns the name of the library used to compute max rising delays and transitions at the port.  Return type: string  "\fBdriving_cell_library_rise_min\fR" Returns the name of the library used to compute min rising delays and transitions at the port.  Return type: string  "\fBdriving_cell_max_fall_itrans_fall\fR" Returns the falling input transition of the from_pin of the driving cell, which is used for the max falling delay calculation at the port.  Return type: float  "\fBdriving_cell_max_fall_itrans_rise\fR" Returns the falling input transition of the from_pin of the driving cell, which is used for the max rising delay calculation at the port.  Return type: float  "\fBdriving_cell_max_rise_itrans_fall\fR" Returns the rising input transition of the from_pin of the driving cell, which is used for the max falling delay calculation at the port.  Return type: float  "\fBdriving_cell_max_rise_itrans_rise\fR" Returns the rising input transition of the from_pin of the driving cell, which is used for the max rising delay calculation at the port.  Return type: float  "\fBdriving_cell_min_fall_itrans_fall\fR" Returns the falling input transition of the from_pin of the driving cell, which is used for the min falling delay calculation at the port.  Return type: float  "\fBdriving_cell_min_fall_itrans_rise\fR" Returns the falling input transition of the from_pin of the driving cell, which is used for the min rising delay calculation at the port.  Return type: float  "\fBdriving_cell_min_rise_itrans_fall\fR" Returns the rising input transition of the from_pin of the driving cell, which is used for the min falling delay calculation at the port.  Return type: float  "\fBdriving_cell_min_rise_itrans_rise\fR" Returns the rising input transition of the from_pin of the driving cell, which is used for the min rising delay calculation at the port.  Return type: float  "\fBdriving_cell_pin_fall_max\fR" Returns the name of the output pin used for max fall delay calculation at the port.  Return type: string  "\fBdriving_cell_pin_fall_min\fR" Returns the name of the output pin used for min fall delay calculation at the port.  Return type: string  "\fBdriving_cell_pin_rise_max\fR" Returns the name of the output pin used for max rise delay calculation at the port.  Return type: string  "\fBdriving_cell_pin_rise_min\fR" Returns the name of the output pin used for min rise delay calculation at the port.  Return type: string  "\fBdriving_cell_rise_max\fR" Returns the name of the library cell used to compute max rising delays and transitions at the port.  Return type: string  "\fBdriving_cell_rise_min\fR" Returns the name of the library cell used to compute min rising delays and transitions at the port.  Return type: string  "\fBfanin\fR" Returns the number of sources connected with net of the specified port.  Return type: integer  "\fBfanout\fR" Returns the number of sinks connected with the net of the specified port.  Return type: integer  "\fBfanout_load\fR" Returns the fanout load for ports. (For input ports, the value is the sum of all fanout loads of all connected pins. For output ports, the value is set using set_fanout_load.)  Return type: float  "\fBhierarchical_name\fR" Returns the complete hierarchical name of the port.  Return type: string  "\fBhold_uncertainty\fR" Returns the most conservative uncertainty of all possible uncertainty assertions associated with the port.  Return type: float  "\fBinput_slew_max_fall\fR" Returns the max falling slew for the input or inout ports. (This value is set with the set_input_transition command.)  Return type: float  "\fBinput_slew_max_rise\fR" Returns the max rising slew for the input or inout ports. (This value is set with the set_input_transition command.)  Return type: float  "\fBinput_slew_min_fall\fR" Returns the min falling slew for the input or inout ports. (This value is set with the set_input_transition command.)  Return type: float  "\fBinput_slew_min_rise\fR" Returns the min rising slew for the input or inout ports. (This value is set with the set_input_transition command.)  Return type: float  "\fBis_disable_timing\fR" Returns a value of true if the timing of the port has been disabled using the set_disable_timing command.  Return type: boolean  "\fBis_hierarchical\fR" Returns a value of true if the port is a port of a hierarchical module.  Return type: boolean  "\fBis_pin\fR" Returns a value of false.  The is_pin and is_port queries are provided for both pin and port objects to provide a quick way of determining the object type of an identifier. is_port always returns false for pins. is_pins always returns false for ports.  Return type: boolean  "\fBis_port\fR" Returns a value of true.  The is_pin and is_port queries are provided for both pin and port objects to provide a quick way of determining the object type of an identifier. is_port always returns false for pins. is_pins always returns false for ports.  Return type: boolean  "\fBis_propagated_clock\fR" Returns a value of true if there is an explicit set_propagated_clock assertion at the port.  Return type: boolean  "\fBlatency_fall_max\fR" Returns the maximum fall insertion delay specified by an explicit set_clock_latency at the port.  Return type: float  "\fBlatency_fall_min\fR" Returns the minimum fall insertion delay specified by an explicit set_clock_latency at the port.  Return type: float  "\fBlatency_rise_max\fR" Returns the maximum rise insertion delay specified by an explicit set_clock_latency at the port.  Return type: float  "\fBlatency_rise_min\fR" Returns the minimum rise insertion delay specified by an explicit set_clock_latency at the port.  Return type: float  "\fBmax_fanout\fR" Returns the maximum fanout load that the port can drive. (This value is set using set_max_fanout, or the default_max_fanout library attribute.)  Return type: float  "\fBmax_transition\fR" Returns the maximum transition time limit specified for the port.  Return type: float  "\fBnet_name\fR" Returns the name of the net connected to the specified port.  Return type: string  "\fBnoise_victim\fR" Returns a collection of si_victim objects that can be used to query glitch attributes.  Return type: collection  "\fBobject_type\fR" Returns the object type port.  Return type: string  "\fBsetup_uncertainty\fR" Returns the most conservative uncertainty of all possible uncertainty assertions associated with the port.  Return type: float  "\fBsi_victim\fR" Returns a collection of the si_victim objects that can be used to query graph-based SI delay attributes.  Return type: collection  "\fBslack_max_edge\fR" Returns the edge (rise or fall) of the worst slack-causing path at the specified port in late mode.  Return type: string  "\fBslack_max_fall\fR" Returns the worst setup slack for a falling signal at the port endpoint.  Return type: float  "\fBslack_max_rise\fR" Returns the worst setup slack for a rising signal at the port endpoint.  When the -view parameter is not specified, the worst slack for all the views is returned.  Return type: float  "\fBslack_min_edge\fR" Returns the edge (rise or fall) of the worst slack-causing path at the specified port in early mode.  Return type: string  "\fBslack_min_fall\fR" Returns the worst hold slack for a falling signal at the port endpoint.  Return type: float  "\fBslack_min_rise\fR" Returns the worst hold slack for a rising signal at the port endpoint.  Return type: float  "\fBslew_max_fall\fR" Returns the maximum falling slew from all of the incoming signals on the port.  Return type: float  "\fBslew_max_rise\fR" Returns the maximum rising slew from all of the incoming signals on the port.  Return type: float  "\fBslew_min_fall\fR" Returns the minimum falling slew from all of the incoming signals on the port.  Return type: float  "\fBslew_min_rise\fR" Returns the minimum rising slew from all of the incoming signals on the port.  Return type: float  "\fBsource_latency_early_fall_max\fR" Returns the maximum early fall source insertion delay specified by an explicit set_clock_latency at the port.  Return type: float  "\fBsource_latency_early_fall_min\fR" Returns the minimum early fall source insertion delay specified by an explicit set_clock_latency at the port.  Return type: float  "\fBsource_latency_early_rise_max\fR" Returns the maximum early rise source insertion delay specified by an explicit set_clock_latency at the port.  Return type: float  "\fBsource_latency_early_rise_min\fR" Returns the minimum early rise source insertion delay specified by an explicit set_clock_latency at the port.  Return type: float  "\fBsource_latency_late_fall_max\fR" Returns the maximum late fall source insertion delay specified by an explicit set_clock_latency at the port.  Return type: float  "\fBsource_latency_late_fall_min\fR" Returns the minimum late fall source insertion delay specified by an explicit set_clock_latency at the port.  Return type: float  "\fBsource_latency_late_rise_max\fR" Returns the maximum late rise source insertion delay specified by an explicit set_clock_latency at the port.  Return type: float  "\fBsource_latency_late_rise_min\fR" Returns the minimum late fall source insertion delay specified by an explicit set_clock_latency at the port.  Return type: float  "\fBuser_constant_value\fR" Returns constant values from netlist or constraints.  Return type: integer  "\fBx_coordinate\fR" Returns the x coordinates of the placed port.  Return type: float  "\fBy_coordinate\fR" Returns the y coordinates of the placed port.  Return type: float 
.SH Timing Arc Properties   "\fBaocv_derate_capture_clock_early_fall\fR" Returns graph based AOCV derate factors in AOCV mode for a given timing arc that is a part of early capture clock paths with fall sink pin transitions.  Return type: float  "\fBaocv_derate_capture_clock_early_rise\fR" Returns graph based AOCV derate factors in AOCV mode for a given timing arc that is a part of early capture clock paths with rise sink pin transitions.  Return type: float  "\fBaocv_derate_capture_clock_late_fall\fR" Returns graph based AOCV derate factors in AOCV mode for a given timing arc that is a part of late capture clock paths with fall sink pin transitions.  Return type: float  "\fBaocv_derate_capture_clock_late_rise\fR" Returns graph based AOCV derate factors in AOCV mode for a given timing arc that is a part of late capture clock paths with rise sink pin transitions.  Return type: float  "\fBaocv_derate_data_early_fall\fR" Returns AOCV derate values for a timing arc on an early data path with fall transitions.  Return type: float  "\fBaocv_derate_data_early_rise\fR" Returns AOCV derate values for a timing arc on an early data path with rise transitions.  Return type: float  "\fBaocv_derate_data_late_fall\fR" Returns AOCV derate values for a timing arc on a late data path with fall transitions.  Return type: float  "\fBaocv_derate_data_late_rise\fR" Returns AOCV derate values for a timing arc on a late data path with rise transitions.  Return type: float  "\fBaocv_derate_launch_clock_early_fall\fR" Returns graph based AOCV derate factors in AOCV mode for a given timing arc that is a part of early launch clock paths with fall sink pin transitions.  Return type: float  "\fBaocv_derate_launch_clock_early_rise\fR" Returns graph based AOCV derate factors in AOCV mode for a given timing arc that is a part of early launch clock paths with rise sink pin transitions.  Return type: float  "\fBaocv_derate_launch_clock_late_fall\fR" Returns graph based AOCV derate factors in AOCV mode for a given timing arc that is a part of late launch clock paths with fall sink pin transitions.  Return type: float  "\fBaocv_derate_launch_clock_late_rise\fR" Returns graph based AOCV derate factors in AOCV mode for a given timing arc that is a part of late launch clock paths with rise sink pin transitions.  Return type: float  "\fBaocv_stage_count_capture_clock_early\fR" Returns graph based AOCV stage count values in AOCV mode for a given timing arc that is a part of early capture clock paths.  Return type: float  "\fBaocv_stage_count_capture_clock_late\fR" Returns graph based AOCV stage count values in AOCV mode for a given timing arc that is a part of late capture clock paths.  Return type: float  "\fBaocv_stage_count_data_early\fR" Returns AOCV stage count values for a timing arc on an early data path.  Return type: float  "\fBaocv_stage_count_data_late\fR" Returns AOCV stage count values for a timing arc on a late data path.  Return type: float  "\fBaocv_stage_count_launch_clock_early\fR" Returns AOCV stage count values in AOCV mode for a given timing arc that is a part of early launch clock paths.  Return type: float  "\fBaocv_stage_count_launch_clock_late\fR" Returns AOCV stage count values in AOCV mode for a given timing arc that is a part of late launch clock paths.  Return type: float  "\fBarc_type\fR" Returns the Liberty timing_type attribute of the arc.  Return type: string  "\fBdelay_max_fall\fR" Returns the fall delay for the max corner.  Return type: float  "\fBdelay_max_rise\fR" Returns the rise delay for the max corner.  Return type: float  "\fBdelay_mean_max_fall\fR" Returns the mean component of the maximum falling delay value for the timing arc.  Return type: float  "\fBdelay_mean_max_rise\fR" Returns the mean component of the maximum rising delay value for the timing arc.  Return type: float  "\fBdelay_mean_min_fall\fR" Returns the mean component of the minimum falling delay value for the timing arc.  Return type: float  "\fBdelay_mean_min_rise\fR" Returns the mean component of the minimum rising delay value for the timing arc.  Return type: float  "\fBdelay_min_fall\fR" Returns the fall delay for the min corner.  Return type: float  "\fBdelay_min_rise\fR" Returns the rise delay for the min corner.  Return type: float  "\fBdelay_sigma_max_fall\fR" Returns the 1-sigma variation component of the maximum falling delay for the specified timing arc.  Return type: float  "\fBdelay_sigma_max_rise\fR" Returns the 1-sigma variation component of the maximum rising delay for the specified timing arc.  Return type: float  "\fBdelay_sigma_min_fall\fR" Returns the 1-sigma variation component of the minimum falling delay for the specified timing arc.  Return type: float  "\fBdelay_sigma_min_rise\fR" Returns the 1-sigma variation component of the minimum rising delay for the specified timing arc.  Return type: float  "\fBdelta_delay_max_fall\fR" Returns the delta fall delay for the max corner.  Return type: float  "\fBdelta_delay_max_rise\fR" Returns the delta rise delay for the max corner.  Return type: float  "\fBdelta_delay_min_fall\fR" Returns the delta fall delay for the min corner.  Return type: float  "\fBdelta_delay_min_rise\fR" Returns the delta rise delay for the min corner.  Return type: float  "\fBis_cellarc\fR" Returns a value of true if the arc belongs to a cell.  Return type: boolean  "\fBis_disabled\fR" Returns a value of true if a set_disable_timing has been applied on the supplied library timing arc.  Return type: boolean  "\fBmode\fR" Returns the mode specified for the timing arc in the library.  Return type: string  "\fBobject_type\fR" Returns the object type timing_arc.  Return type: string  "\fBsdf_cond\fR" Returns the sdf_cond expression specified for the timing arc in the library.  Return type: string  "\fBsdf_cond_end\fR" Returns the sdf_cond_end expression specified for the timing arc in the library.  Return type: string  "\fBsdf_cond_start\fR" Returns the sdf_cond_start expression specified for the timing arc in the library.  Return type: string  "\fBsense\fR" Returns the sense of the timing arc.  Return type: string  "\fBsink_pin\fR" Returns the sink pin of the delay arc, or the reference pin of the check arc.  Return type: collection  "\fBsource_pin\fR" Returns the source pin of the delay arc, or the signal pin of the check arc.  Return type: collection  "\fBwhen\fR" Returns the when condition specified for the timing arc in the library.  Return type: string
.P 
.SH Timing Path Properties   "\fBarrival\fR" Returns the arrival time at the timing path.  Return type: float  "\fBarrival_mean\fR" Returns the mean component of the arrival time for the timing path.  Return type: float  "\fBarrival_sigma\fR" Returns the sigma component of the arrival time for the timing path.  Return type: float  "\fBcapture_clock_path\fR" Returns the capturing clock path of the timing path.  This property can be used only for path_type full_clock.  Return type: collection  "\fBcapturing_clock\fR" Returns the capturing clock of the timing path.  Return type: collection  "\fBcapturing_clock_close_edge_time\fR" Returns the closing edge time of the capturing clock.  Return type: float  "\fBcapturing_clock_close_edge_type\fR" Returns the capturing clock edge direction: rise or fall.  Return type: string  "\fBcapturing_clock_is_inverted\fR" Returns a value of true if the phase of the clock at the end point of the capture clock path is opposite to the phase of the capturing clock at the source.  Return type: boolean  "\fBcapturing_clock_is_propagated\fR" Returns a value of true if the capturing clock is in the propagated mode, at the clock end point.  Return type: boolean  "\fBcapturing_clock_latency\fR" Returns the ideal or propagated latency of the capturing clock.  Return type: float  "\fBcapturing_clock_open_edge_type\fR" Returns the opening edge time of the capturing clock.  Return type: string  "\fBcapturing_clock_pin\fR" Returns the name of the capturing clock pin.  Return type: collection  "\fBcapturing_clock_source_arrival_time\fR" Returns the capturing clock arrival time at the clock root pin/port of the capturing clock path.  This value is a sum of the clock edge time and the source latency constraints specified at the clock root.  Note: You must specify report_timing -path_type full_clock in order to return capturing clock arrival time information.  Return type: float  "\fBcapturing_clock_source_arrival_time_mean\fR" Returns the mean component of the capturing clock arrival time at the clock root pin/port of the capturing clock path.  Return type: float  "\fBcapturing_clock_source_arrival_time_sigma\fR" Returns the sigma component of the capturing clock arrival time at the clock root pin/port of the capturing clock path.  Return type: float  "\fBcapturing_point\fR" Returns a pointer to the end point of the timing path.  Return type: collection  "\fBcapturing_point_is_level_sensitive\fR" Returns a value of true if the end point of the data path is level sensitive.  Return type: boolean  "\fBcheck_delay\fR" Returns the check delay value for the timing path.  Return type: float  "\fBcheck_delay_mean\fR" Returns the mean component of the check delay value for the timing path.  Return type: float  "\fBcheck_delay_sigma\fR" Returns the sigma component of the check delay value for the timing path.  Return type: float  "\fBclock_path_end_point\fR" Returns the last point in the capture clock path of the timing path.  Return type: collection  "\fBclock_uncertainty\fR" Returns the clock uncertainty of the timing path.  Return type: float  "\fBcppr_adjustment\fR" Returns the CPPR adjustment of the timing path.  Return type: float  "\fBcppr_adjustment_mean\fR" Returns the mean component of the CPPR adjustment of a timing path.  Return type: float  "\fBcppr_adjustment_sigma\fR" Returns the sigma component of the CPPR adjustment of a timing path.  Return type: float  "\fBcppr_branch_point\fR" Returns the CPPR branch point of the given timing path.  Return Type: collection  "\fBdrive_adjustment\fR" Returns the drive adjustment value for the timing path.  Return type: float  "\fBdrive_adjustment_mean\fR" Returns the mean component of the drive adjustment value for the timing path.  Return type: float  "\fBdrive_adjustment_sigma\fR" Returns the sigma component of the drive adjustment value for the timing path.  Return type: float  "\fBexternal_delay\fR" Returns the value of the set_output_delay constraint at the end point of the path.  Return type: float  "\fBgba_slack\fR" Returns the original slack time for the timing path - before PBA retiming is performed.  Return type: float  "\fBgba_slack_mean\fR" Returns the mean component of the slack time for the timing path - before PBA retiming is performed.  Return type: float  "\fBgba_slack_sigma\fR" Returns the sigma component of the slack time for the timing path - before PBA retiming is performed.  Return type: float  "\fBhold\fR" Returns the hold time at the end point of the path.  Return type: float  "\fBis_clock_gating_hold\fR" Returns a value of true if the path is a clock gating hold check.  Return type: boolean  "\fBis_clock_gating_setup\fR" Returns a value of true if the path is a clock gating setup check.  Return type: boolean  "\fBis_transparent_latch\fR" Returns a value of true if the path is a transparent latch path.  Return type: boolean  "\fBlaunch_clock_path\fR" Returns the launching clock path of the timing path.  This property can be used only for path_type full_clock.  Return type: collection  "\fBlaunching_clock\fR" Returns the launching clock of the timing path.  Return type: collection  "\fBlaunching_clock_is_inverted\fR" Returns a value of true if the phase of the clock at the start point of the launch clock path is opposite to the phase of the launch clock at the source.  Return type: boolean  "\fBlaunching_clock_is_propagated\fR" Returns a value of true if the launching clock is in the propagated mode, at the clock end point.  Return type: boolean  "\fBlaunching_clock_latency\fR" Returns the ideal or propagated latency of the launching clock.  Return type: float  "\fBlaunching_clock_latency_mean\fR" Returns mean component of latency of the launching clock.  Return type: float  "\fBlaunching_clock_latency_sigma\fR" Returns sigma component of latency of the launching clock.  Return type: float  "\fBlaunching_clock_open_edge_time\fR" Returns the opening edge time of the launching clock.  Return type: float  "\fBlaunching_clock_open_edge_type\fR" Returns the launching clock's open edge type at the launching point of the timing path. In case of input delay path with respect to a clock it will return the clock edge type, which is triggering the path.   Return type: string  "\fBlaunching_clock_source_arrival_time\fR" Returns the launching clock arrival time at the clock route pin/port of the launching clock path. This value is the sum of the clock edge time plus any source latency constraint specified at the clock root.  Note: You must specify report_timing -path_type full_clock in order to return launching clock arrival time information.  Return type: float  "\fBlaunching_clock_source_arrival_time_mean\fR" Returns the mean component of the launching clock arrival time at the clock route pin/port of the launching clock path.  "\fBlaunching_clock_source_arrival_time_sigma\fR" Returns the sigma component of the launching clock arrival time at the clock route pin/port of the launching clock path.  Return type: float  "\fBlaunching_input_delay\fR" Returns the input delay if the timing path starts from an input or output port. This value is set using set_input_delay.  Return type: float  "\fBlaunching_point\fR" Returns a pointer to the start point of the timing path.  Return type: collection  "\fBlaunching_point_is_level_sensitive\fR" Returns a value of true if the begin point of the data path is level sensitive.  Return type: boolean  "\fBobject_type\fR" Returns the object type timing_path.  Return type: string  "\fBother_end_arrival\fR" Returns the capture clock path's begin time, In case of SOCV analysis, mean+N*sigma quantile value is reported.  Return type: float  "\fBother_end_arrival_mean\fR" Returns the mean component of capture clock path's begin time.  Return type: float  "\fBother_end_arrival_sigma\fR" Returns the sigma component of capture clock path's begin time.  Return type: float  "\fBpath_delay\fR" Returns the delay of data path component of a timing path. In case of SOCV analysis, mean+N*sigma quantile delay is reported.  Return type: float  "\fBpath_delay_mean\fR" Returns the mean delay component of data path of a timing path.  Return type: float  "\fBpath_delay_sigma\fR" Returns the sigma delay component of data path of a timing path.  Return type: float  "\fBpath_group\fR" Returns a collection of path groups associated with the timing path.  Return type: collection  "\fBpath_group_name\fR" Returns the name of the path group for the timing path.  Return type: string  "\fBpath_type\fR" Returns a value of max if the path is for setup, or min if the path is for hold.  Return type: string  "\fBperiod\fR" Returns the time duration between the launching clock edge and capturing clock edge of the path.  The launching clock edge indicates the launching clock time when the signal at the start point of the path is launched, and the capturing clock edge indicates the capturing clock time when the signal at the path end point is captured. For both of these edges, their ideal clock cycle times are considered for calculating the path period.  For those paths, where either the launching or capturing clock is absent or asynchronous, the property prints NA. The property works for both setup (late) paths, and hold (early) paths.  Usually the path period is decided by a simple subtraction of effective launching edge from the effective capturing edge of the path. Under certain scenario, these edges are moved back or ahead in time, and accordingly the path period is also affected.  The following factors impact period:  a) Multicycle paths: The launch or capture edge will move by the cycle factor depending on the type of multi cycle exception, and this cycle factor is taken into account while computing the period.  b) Max delay paths: Any max_delay specification overrides the relationship between capturing and launching edges and sets it to the max_delay value. The period of the path is thus returned as equal to the specified max delay value for sequential max delay paths. Note that a combinational max delay path has at least one of the launch or capture clocks either absent or asynchronous, and hence the effective period is not calculated for them.  c) Clock uncertainty: The uncertainties applicable to the interaction of launch and capture clocks for this particular path also affect the effective edges, but this factor is not taken into consideration while computing the period.  d) Unconstrained paths: The unconstrained paths have no capture clock and hence period can not be calculated for them. The property will return NA.  Return value: float  For more information, see "Examples".  "\fBrecovery\fR" Returns the recovery time at the end point of the path.  Return type: float  "\fBremoval\fR" Returns the removal time at the end point of the path.  Return type: float  "\fBrequired_time\fR" Returns the required time for the timing path.  Return type: float  "\fBrequired_time_mean\fR" Returns the mean component of the required time for the timing path.  Return type: float  "\fBrequired_time_sigma\fR" Returns the sigma component of the required time for the timing path.  Return type: float  "\fBsetup\fR" Returns the setup time at the end point of the path.  Return type: float  "\fBskew\fR" Returns the latency difference between the capturing clock latency and launching clock latency of the path (after considering the effect of CPPR factor).  Return type: float  "\fBslack\fR" Returns the slack time for the timing path.  Return type: float  "\fBslack_mean\fR" Returns the mean component of the slack time for the timing path.  Return type: float  "\fBslack_sigma\fR" Returns the sigma component of the slack time for the timing path.  Return type: float  "\fBslack_stddev\fR" Returns standard deviation of the slack.  Return type: float  "\fBspatial_distance\fR" Reports the bounding box distance for spatial derating applied on a timing path.  Return type: float  "\fBtime_borrowed\fR" Returns the amount of time borrowed from the timing end point.  Return type: float  "\fBtime_lent\fR" Returns the amount of time lent to the timing start point.  Return type: float  "\fBtiming_points\fR" Returns a collection of the timing points that make up the path.  Return type: collection  "\fBunderated_slack\fR" Returns the underated slack time for the timing path. The underated slack value is available with timing path object only if it is generated using the -derate parameter.  Return type: float  "\fBview_name\fR" Returns the analysis view name associated with the timing path.  Return type: string
.P 
.SH Timing Point Properties   "\fBarrival\fR" Returns the arrival time at the timing point.  Return type: float  "\fBarrival_mean\fR" Returns the mean component of the arrival time at the timing point.  Return type: float  "\fBarrival_sigma\fR" Returns the sigma component of arrival time at the timing point.  Return type: float  "\fBdelay\fR" Returns the delay value for the timing point.  Return type: float  "\fBdelay_mean\fR" Returns the mean component of the delay value for the timing point.  Return type: float  "\fBdelay_sigma\fR" Returns the sigma component of the delay value for the timing point.  Return type: float  "\fBfanin_arc\fR" Returns the delay arc for the corresponding timing point.  Return type: collection  "\fBobject_type\fR" Returns the timing_point object type.  Return type: string  "\fBpin\fR" Returns a collection of pins or ports of the timing point.  Return type: collection  "\fBsi_object\fR" Returns the si_victim object type that can be used to query SI delay attributes.  Note: To enable SI objects, you can set the timing Category Attributesglobal variable to true.  "\fBslew\fR" Returns the path-specific slew of the timing point.  Return type: float  "\fBslew_mean\fR" Returns the mean component of the path-specific slew of the timing point.  Return type: float  "\fBslew_sigma\fR" Returns the sigma component of the path-specific slew of the timing point.  Return type: float  "\fBtransition_type\fR" Returns the transition type of the timing point - rise or fall.  Return type: string 
.SH   Signal Integrity Attributes
.P The signal integrity attributes can be queried using the following object types:
.RS  "*" 2 si_victim  "*" 2 si_attacker  "*" 2 noise_victim: Returns a collection of si_victim objects that can be used to query glitch attributes.  Return type: collection
.RE
.P These are explained below. 
.SH si_victim Properties
.P The following information is saved under the si_victim object type:  ________________________________________________________
.P |          |           | \fB Valid for Properties\fR             |   |__________________________________|____________________|
.P |\fB Property\fR | \fB Descript\fR | \fB si_victi\fR | \fB si_objec\fR | \fB noise_vi\fR |   |\fB  Name\fR    | \fB ion\fR      | \fB m\fR        | \fB t\fR        | \fB ctim\fR     |   |__________|___________|___________|___________|________|
.P | annotate |  Reports  |   N       |   N       |   Y       |   | d_glitch |  the      |           |           |           |   |          |   annotat |           |           |           |   |          |  ed       |           |           |           |   |          |   glitch. |           |           |           |   |          |  Return   |           |           |           |   |          |   type:   |           |           |           |   |          |   float   |           |           |           |   |__________|___________|___________|___________|________|
.P | attacker |  Returns  |   Y       |   Y       |   Y       |   | s        |  a        |           |           |           |   |          |   collect |           |           |           |   |          |  ion of   |           |           |           |   |          |   si_atta |           |           |           |   |          |  cker     |           |           |           |   |          |   objects |           |           |           |   |          |   that    |           |           |           |   |          |   can     |           |           |           |   |          |  be       |           |           |           |   |          |  used     |           |           |           |   |          |  to query |           |           |           |   |          |   attacke |           |           |           |   |          |  r        |           |           |           |   |          |   attribu |           |           |           |   |          |  tes.Retu |           |           |           |   |          |  rn type: |           |           |           |   |          |   collect |           |           |           |   |          |  ion      |           |           |           |   |__________|___________|___________|___________|________|
.P | capacita |  Returns  |   Y       |   Y       |   Y       |   | nceCDN_N |  the      |           |           |           |   | BSP      |   total   |           |           |           |   |          |   capacit |           |           |           |   |          |  ance     |           |           |           |   |          |  of       |           |           |           |   |          |           |           |           |           |   |          |  victim   |           |           |           |   |          |   net.Ret |           |           |           |   |          |  urn      |           |           |           |   |          |   type:   |           |           |           |   |          |   float   |           |           |           |   |__________|___________|___________|___________|________|
.P | coupling |  Returns  |   Y       |   Y       |   Y       |   | _capacit |  the      |           |           |           |   | anceCDN_ |   total   |           |           |           |   | NBSP     |   couplin |           |           |           |   |          |  g        |           |           |           |   |          |   capacit |           |           |           |   |          |  ance     |           |           |           |   |          |  of a     |           |           |           |   |          |           |           |           |           |   |          |  victim   |           |           |           |   |          |   net.Ret |           |           |           |   |          |  urn      |           |           |           |   |          |   type:   |           |           |           |   |          |   float   |           |           |           |   |__________|___________|___________|___________|________|
.P | glitch_a |  Returns  |   N       |   N       |   Y       |   | rea      |  the      |           |           |           |   |          |           |           |           |           |   |          |  glitch   |           |           |           |   |          |   area.Re |           |           |           |   |          |  turn     |           |           |           |   |          |   type:   |           |           |           |   |          |   float   |           |           |           |   |__________|___________|___________|___________|________|
.P | glitch_w |  Returns  |   N       |   N       |   Y       |   | idth     |  the      |           |           |           |   |          |           |           |           |           |   |          |  glitch   |           |           |           |   |          |   width.R |           |           |           |   |          |  eturn    |           |           |           |   |          |   type:   |           |           |           |   |          |   float   |           |           |           |   |__________|___________|___________|___________|________|
.P | hierarch |  Returns  |   Y       |   Y       |   Y       |   | ical_nam |  the      |           |           |           |   | e        |   hierarc |           |           |           |   |          |  hical    |           |           |           |   |          |   name of |           |           |           |   |          |   a       |           |           |           |   |          |           |           |           |           |   |          |  victim   |           |           |           |   |          |   net.Ret |           |           |           |   |          |  urn      |           |           |           |   |          |   type:   |           |           |           |   |          |   string  |           |           |           |   |__________|___________|___________|___________|________|
.P | input_pe |  Returns  |   N       |   N       |   Y       |   | ak       |  the      |           |           |           |   |          |   Receive |           |           |           |   |          |  r        |           |           |           |   |          |  Input    |           |           |           |   |          |   Peak    |           |           |           |   |          |   (RIP)   |           |           |           |   |          |   value.R |           |           |           |   |          |  eturn    |           |           |           |   |          |   type:   |           |           |           |   |          |   float   |           |           |           |   |__________|___________|___________|___________|________|
.P | input_fa |  Returns  |   N       |   N       |   Y       |   | ilure_th |  the      |           |           |           |   | reshold  |   failure |           |           |           |   |          |   thresho |           |           |           |   |          |  ld at    |           |           |           |   |          |   RIP.    |           |           |           |   |          |   This    |           |           |           |   |          |   will    |           |           |           |   |          |           |           |           |           |   |          |  always   |           |           |           |   |          |   be      |           |           |           |   |          |   reporte |           |           |           |   |          |  d        |           |           |           |   |          |   irrespe |           |           |           |   |          |  ctive of |           |           |           |   |          |   whether |           |           |           |   |          |   failure |           |           |           |   |          |   happens |           |           |           |   |          |   at      |           |           |           |   |          |  RIP or   |           |           |           |   |          |   ROP.Ret |           |           |           |   |          |  urn      |           |           |           |   |          |   type:   |           |           |           |   |          |   float   |           |           |           |   |__________|___________|___________|___________|________|
.P | level    |  Returns  |   N       |   N       |   Y       |   |          |  the      |           |           |           |   |          |   noise   |           |           |           |   |          |   level - |           |           |           |   |          |   VL or   |           |           |           |   |          |   VH.Retu |           |           |           |   |          |  rn type: |           |           |           |   |          |   string  |           |           |           |   |__________|___________|___________|___________|________|
.P | num_acti |  Returns  |   Y       |   Y       |   Y       |   | ve_attac |  the      |           |           |           |   | kersCDN_ |           |           |           |           |   | NBSP     |  number   |           |           |           |   |          |   of      |           |           |           |   |          |           |           |           |           |   |          |  active   |           |           |           |   |          |   attacke |           |           |           |   |          |  rs.Retur |           |           |           |   |          |  n        |           |           |           |   |          |  type:    |           |           |           |   |          |   float   |           |           |           |   |__________|___________|___________|___________|________|
.P | num_atta |  Returns  |   Y       |   Y       |   Y       |   | ckersCDN |  the      |           |           |           |   | _NBSP    |           |           |           |           |   |          |  number   |           |           |           |   |          |   of      |           |           |           |   |          |   total   |           |           |           |   |          |   attacke |           |           |           |   |          |  rs       |           |           |           |   |          |   (distin |           |           |           |   |          |  ct       |           |           |           |   |          |   +CDN_NB |           |           |           |   |          |  SPaccumu |           |           |           |   |          |  latedCDN |           |           |           |   |          |  _NBSPsma |           |           |           |   |          |  ll       |           |           |           |   |          |   attacke |           |           |           |   |          |  r - as   |           |           |           |   |          |           |           |           |           |   |          |  1).The   |           |           |           |   |          |   attacke |           |           |           |   |          |  rs       |           |           |           |   |          |  that are |           |           |           |   |          |   dropped |           |           |           |   |          |   from    |           |           |           |   |          |   the     |           |           |           |   |          |   accumul |           |           |           |   |          |  ated     |           |           |           |   |          |   small   |           |           |           |   |          |   attacke |           |           |           |   |          |  rs       |           |           |           |   |          |  will not |           |           |           |   |          |   be      |           |           |           |   |          |   include |           |           |           |   |          |  d with   |           |           |           |   |          |   the     |           |           |           |   |          |   total   |           |           |           |   |          |   attacke |           |           |           |   |          |  rs.Retur |           |           |           |   |          |  n        |           |           |           |   |          |  type:    |           |           |           |   |          |   float   |           |           |           |   |__________|___________|___________|___________|________|
.P | object_t |  Returns  |   Y       |   Y       |   Y       |   | ype      |  the      |           |           |           |   |          |           |           |           |           |   |          |  object   |           |           |           |   |          |   type    |           |           |           |   |          |   si_vict |           |           |           |   |          |  im.Retur |           |           |           |   |          |  n        |           |           |           |   |          |  type:    |           |           |           |   |          |   string  |           |           |           |   |__________|___________|___________|___________|________|
.P | prop_gli |  Reports  |   N       |   N       |   Y       |   | tch      |  the      |           |           |           |   |          |   propaga |           |           |           |   |          |  ted      |           |           |           |   |          |           |           |           |           |   |          |  glitch   |           |           |           |   |          |   seen at |           |           |           |   |          |   the     |           |           |           |   |          |           |           |           |           |   |          |  victim   |           |           |           |   |          |           |           |           |           |   |          |  driver   |           |           |           |   |          |   output. |           |           |           |   |          |  Return   |           |           |           |   |          |   type:   |           |           |           |   |          |   float   |           |           |           |   |__________|___________|___________|___________|________|
.P | receiver |  Returns  |   N       |   N       |   Y       |   | _peak    |  the      |           |           |           |   |          |   Receive |           |           |           |   |          |  r Output |           |           |           |   |          |   Peak    |           |           |           |   |          |   (ROP)   |           |           |           |   |          |   value.R |           |           |           |   |          |  eturn    |           |           |           |   |          |   type:   |           |           |           |   |          |   float   |           |           |           |   |__________|___________|___________|___________|________|
.P | receiver |  Returns  |   N       |   N       |   Y       |   | _peak_th |  the      |           |           |           |   | reshold  |   failure |           |           |           |   |          |   thresho |           |           |           |   |          |  ld at    |           |           |           |   |          |   ROP.Thi |           |           |           |   |          |  s will   |           |           |           |   |          |           |           |           |           |   |          |  always   |           |           |           |   |          |   be      |           |           |           |   |          |   reporte |           |           |           |   |          |  d        |           |           |           |   |          |   irrespe |           |           |           |   |          |  ctive of |           |           |           |   |          |   whether |           |           |           |   |          |   failure |           |           |           |   |          |   happens |           |           |           |   |          |   at      |           |           |           |   |          |  RIP or   |           |           |           |   |          |   ROP.Ret |           |           |           |   |          |  urn      |           |           |           |   |          |   type:   |           |           |           |   |          |   float   |           |           |           |   |__________|___________|___________|___________|________|
.P | resistan |  Returns  |   Y       |   Y       |   Y       |   | ceCDN_NB |  the      |           |           |           |   | SP       |   total   |           |           |           |   |          |   resista |           |           |           |   |          |  nce of a |           |           |           |   |          |           |           |           |           |   |          |  victim   |           |           |           |   |          |   net.Ret |           |           |           |   |          |  urn      |           |           |           |   |          |   type:   |           |           |           |   |          |   string  |           |           |           |   |__________|___________|___________|___________|________|
.P | transiti |  Returns  |   Y       |   Y       |   N       |   | on       |  the      |           |           |           |   |          |           |           |           |           |   |          |  victim   |           |           |           |   |          |   transit |           |           |           |   |          |  ion      |           |           |           |   |          |   directi |           |           |           |   |          |  on (rise |           |           |           |   |          |   or      |           |           |           |   |          |   fall).R |           |           |           |   |          |  eturn    |           |           |           |   |          |   type:   |           |           |           |   |          |   string  |           |           |           |   |__________|___________|___________|___________|________|
.P | view_typ |  Returns  |   Y       |   Y       |   N       |   | e        |  the type |           |           |           |   |          |   of      |           |           |           |   |          |   analysi |           |           |           |   |          |  s (early |           |           |           |   |          |   or      |           |           |           |   |          |   late).R |           |           |           |   |          |  eturn    |           |           |           |   |          |   type:   |           |           |           |   |          |   string  |           |           |           |   |__________|___________|___________|___________|________| 
.SH si_attacker Properties
.P The following Information is saved under the si_attacker object type for each attacker of the victim net in the path:   "\fBProperty Name (for each attacker retrieved from a victim)\fR" Description  "\fBcoupling_capacitance\fR" Returns the coupling of a victim net.  Return type: float  "\fBhierarchical_name\fR" Returns the hierarchical name of an attacker.  Return type: string  "\fBis_active \fR" Returns whether an attacker is active or not.  Return type: string  "\fBnoise_peak \fR" Returns the Xtalk delay bump induced by an attacker.  Return type: float  "\fBobject_type\fR" Returns the si_attacker object type.  Return type: string  "\fBslew \fR" Returns the slew of attackers.  Return type: float  "\fBstate \fR" Returns the status of attackers. The status descriptions are given below:
.RS  "*" 2 SY: Synchronous  "*" 2 INF: Attacker with infinite timing window  "*" 2 PE: Filtered due to physical exclusion  "*" 2 UF: Filtered by user  "*" 2 CN: Filtered because it is a constant net  "*" 2 SB: Filtered due to small bump  "*" 2 TA: Filtered because of timing window does not overlap  "*" 2 LC: Filtered due to logical correlation  "*" 2 NA: Attacker status is not known
.RE   Return type: string 
.SH   Examples 
.SH  
.SH  
.SH 
.P The following get_property example shows the usage of SI attributes to query noise information:
.P source pinlist.tcl  set chan [open attribute.log w]  foreach pin $pinList {     set vicArray [get_property [get_pins $pin] noise_victim]     foreach_in_collection vic $vicArray {         set input_peak [ get_property $vic input_peak]         #if { $input_peak > 250 } {}
.P        set vic_name [ get_property $vic hierarchical_name ]         set x [ get_property [get_net -of_objects $vic_name ] name ]         set level [ get_property $vic level]         set ccap [ get_property $vic capacitance]         set vdd [get_property [get_pins $vic_name] power_rail_voltage_max]         set libs [get_libs -of_objects [get_lib_cells -of_objects [get_cells -of_objects [get_pins $vic_name]]]]         foreach_in_collection libName $libs {set library [get_property $libName hierarchical_name]}         set prop_glitch [ get_property $vic prop_glitch]         set cap [format %.2f $ccap]         set annotated_glitch [ get_property $vic annotated_glitch]         set receiver_peak [ get_property $vic receiver_peak]         set input_peak_threshold [ get_property $vic input_failure_threshold ]         set receiver_peak_threshold [ get_property $vic receiver_peak_threshold]         puts $chan "--------------------------------------------------------------------------------"           puts $chan "Peak(mV) Level TotalCap(fF) Vdd(V) Library VictimNet"           puts $chan "$input_peak $level $cap $vdd $library $vic_name {$x}"
.P          if { $receiver_peak > 0 } {             puts $chan "Receiver output peak:"             puts $chan "Value ReceiverNet"             puts $chan "$receiver_peak ( $receiver_peak_threshold) $vic_name (CELL)"           }
.P          if { $input_peak > 0 } {             puts $chan "Receiver Input peak:"             puts $chan "Value ReceiverNet"             puts $chan "$input_peak ( $input_peak_threshold) $vic_name (CELL)"           }
.P          puts $chan "\\nConstituents:"           puts $chan "Source Peak(mV) Offset(ps) Slew(ps) Xcap(fF) Vdd(V) Edge Status Net"           set aggs [ get_property $vic attackers ]           foreach_in_collection current_agg $aggs {
.P            set hierarchical_name [ get_property $current_agg hierarchical_name ]             set noise_peak [ get_property $current_agg noise_peak]             set state [ get_property $current_agg state]             set slew [ get_property $current_agg slew]             set edge [ get_property $current_agg transition]             if {[string match ~* $hierarchical_name]} {             set vdd [get_property [get_pins $vic_name] power_rail_voltage_max]             } else {              set vdd [get_property [get_pins -of_objects [get_nets $hierarchical_name]] power_rail_voltage_max]             }             set coupling_capacitance [ get_property $current_agg coupling_capacitance]
.P            puts $chan "Cpl: $noise_peak $slew $edge $vdd $coupling_capacitance $state $hierarchical_name"             }           if { $prop_glitch > 0 } {             puts $chan "Prp: $prop_glitch"            }
.P  }  close $chan 
.SH User-Defined Properties
.P The user-defined properties allow you to define certain properties which can be interpreted by the software in a predefined way. When these properties are not specified, the software will revert to the default behavior, as applicable.  ________________________________________________________
.P |\fB Property Name\fR   | \fB Type\fR            | \fB Description\fR     |   |_________________|__________________|__________________|
.P | capacitive_load |   lib            |  Provides the    |   | _unit           |                  |   load unit      |   |                 |                  |   mentioned in   |   |                 |                  |   the library.   |   |_________________|__________________|__________________|
.P | time_unit       |   lib            |   Provides the   |   |                 |                  |   time unit      |   |                 |                  |   mentioned in   |   |                 |                  |   the library.   |   |_________________|__________________|__________________|
.P | aocv_weight     |   lib_cell       |   Defines AOCV   |   |                 |                  |   weight for a   |   |                 |                  |   given cell.    |   |_________________|__________________|__________________|
.P | k_input_switchi |   lib            |   Defines the    |   | ng_window_fall* |                  |   switching      |   |                 |                  |   window         |   |                 |                  |   threshold      |   |                 |                  |  for fall signal |   |                 |                  |   during the     |   |                 |                  |   application of |   |                 |                  |   SSI            |   |                 |                  |                  |   |                 |                  |  (simultaneous   |   |                 |                  |   switching      |   |                 |                  |   input)         |   |                 |                  |   derating       |   |                 |                  |   feature.CDN_NB |   |                 |                  |  SPDefault: 1    |   |_________________|__________________|__________________|
.P | k_input_switchi |   lib            |   Defines the    |   | ng_window_rise* |                  |   switching      |   |                 |                  |   window         |   |                 |                  |   threshold      |   |                 |                  |  for rise signal |   |                 |                  |   during the     |   |                 |                  |   application of |   |                 |                  |   SSI            |   |                 |                  |                  |   |                 |                  |  (simultaneous   |   |                 |                  |   switching      |   |                 |                  |   input)         |   |                 |                  |   derating       |   |                 |                  |   feature.CDN_NB |   |                 |                  |  SPDefault: 1    |   |_________________|__________________|__________________|
.P *  When the above properties are defined in SSI derating environment, the delay of the respective cell multiplied by the above factor will be compared with the difference in (rise/fall) signal arrivals at two inputs to determine if switching derate needs to be applied to cell delay. 
.SH  
.SH Examples
.RS  "*" 2 The following command returns the hierarchical name for the pin contained in the collection referenced by $pin:   get_property $pin hierarchical_name
.RE
.RS  "*" 2 The following example shows how you can query a user-defined property from stage_weighting library at the cell level:   set_property [get_lib_arcs -of fast/BUFX2] stage_weighting 3 // sets the value  get_property [get_lib_arcs -of fast/BUFX2] stage_weighting
.RE
.RS  "*" 2 The following example shows power and ground pins for the corresponding library pins:   get_property [get_lib_pins CELLA/A] related_power_pin  get_property [get_lib_pins CELLA/A] related_ground_pin  "*" 2 The following example shows active clocks:  get_property [get_clocks Iclk1] is_active true   "*" 2 The following commands define the switching window threshold for rise signal:   define_property -type float -object_type lib k_input_switching_window_rise  set_property [get_libs slow] k_input_switching_window_rise 1.1   "*" 2 The following example shows that the phase shift is 2.0 ns, as returned by the "period" property:  report_timing -clock_to CLK_W_3 -clock_from CLK_W_3
.RE
.P Path 1: MET Setup Check with Pin seg3/u14/CK  Endpoint: seg3/u14/D (^) checked with leading edge of 'CLK_W_3'  Beginpoint: seg3/u9/Q (^) triggered by leading edge of 'CLK_W_3'  Path Groups: {CLK_W_3}  Other End Arrival Time 0.621  - Setup 0.186  + Phase Shift 2.000  = Required Time 2.434  - Arrival Time 2.062  = Slack Time 0.372  Clock Rise Edge 0.000  + Clock Network Latency (Prop) 0.682  = Beginpoint Arrival Time 0.682 
........  innovus > set path [rt -clock_to CLK_W_3 -clock_from CLK_W_3 -collection]  0x14  innovus > get_property $path period  2.000
.RS  "*" 2 In this following example, there is a clock reference for launch clock (Null phase- @), so Innovus does not show any clock period for this path:  report_timing -clock_to CLK_W_3 -early
.RE
.P Path 1: VIOLATED Hold Check with Pin seg3/u3/CK  Endpoint: seg3/u3/D (v) checked with leading edge of 'CLK_W_3'  Beginpoint: IN3 (v) triggered by leading edge of '@'  Path Groups: {CLK_W_3}  Other End Arrival Time 0.682  + Hold -0.034  + Phase Shift 0.000  = Required Time 0.648  Arrival Time 0.117  Slack Time -0.531  Clock Rise Edge 0.000  + Input Delay 0.000  + Drive Adjustment -0.014  = Beginpoint Arrival Time -0.014  ------------------------------------------------------------------------------------------  Load  Slew   Delay   Incr    Arc        Fanout  Cell  Arc           User   Arrival Instance                       Delay   Annotation                             Derate Time  ------------------------------------------------------------------------------------------  0.013 0.029                  WLM        1       IN3     v                 -0.014  0.013 0.057  0.054   0.000   WLM        1       CLKBUF  A v -> Y v  1.000  0.040   seg3/u1  0.003 0.050  0.077   0.000   WLM        1       CLKBUF  A v -> Y v  1.000  0.117   seg3/u2  0.003 0.050  0.000   0.000   WLM                DFF     D v         1.000  0.117   seg3/u3  -----------------------------------------------------------------------------------------
.P innovus > set path [report_timing -clock_to CLK_W_3 -collection -early]  0x16  innovus > get_property $path period  NA 
.SH Related Information
.RS  "*" 2 define_property  "*" 2 report_property  "*" 2 set_property  "*" 2 list_property
.RE
.RS  "*" 2 get_clocks  "*" 2 get_pins  "*" 2 get_cells   "*" 2 report_timing
.RE
.P
