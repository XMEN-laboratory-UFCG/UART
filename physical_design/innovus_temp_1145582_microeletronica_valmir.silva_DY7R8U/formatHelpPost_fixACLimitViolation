.nf
.P Product Version     22.14    Cadence Design Systems, Inc. 
.fi
.TH fixACLimitViolation  22.14 "Fri Oct 06 02:12:27 2023" 
.SH Name \fBfixACLimitViolation\fR \-  Repairs violations associated with AC current density, wire-self-heat, Joules heat, or electromigration, mostly in a postRoute stage
.SH Syntax \fBfixACLimitViolation\fR  [-help]  [-excludeIO {true | false}]  [-excludeNetFile <filename>]  [-fixNetCategory {dataOnly | clockOnly | clockAndData}]   [-fixingMethod {route_rule | down_size | buffer}]  [-postCTS]  [-selectNetFile <filename>]  [-useReportFile <filename>]  [-useSegmentBasedNDR {true | false}]
.P Repairs violations associated with AC current density, wire-self-heat, Joules heat, or electromigration, mostly in a postRoute stage. Fixing methods are applying routing rules, downsizing drivers or adding a buffer to split up the net load on the violated nets. Use this command in conjunction with the verifyACLimit command. The verifyACLimit command can mark the violating net for the fixACLimitViolation command to repair, and it can generate the report file that fixACLimitViolation can read.
.P  The fixACLimitViolation command only applies a single fixing method to fix EM violations. You can select the fixing method by specifying the -fixingMethod parameter. If the method is not specified, the command will fix EM violations by setting route rules on violating routes.  For example, the following usage will apply route rules for both clock and data nets while excluding nets with I/O pins:
.P fixACLimitViolation -fixNetCategory clockAndData -excludeIO true
.P Before running fixACLimitViolation, you can generate an incoming EM violation report using the verifyACLimit command. This operation will ensure that the appropriate data for fixACLimitViolation is included in the violation report.  After that, this report should be provided as an input to fixACLimitViolation using the -useReportFile parameter. The following is an example of the sequence of operations:
.P verifyACLimit -report beforeFix.rpt -view hold_view
.P fixACLimitViolation -useReportFile beforeFix.rpt 
.P verifyACLimit -report afterFix.rpt -view hold_view
.P By default, verifyACLimit will calculate EM currents using the hold view.  This means that verifyACLimit will internally invoke a hold timing update.  If it is desired to maintain the current setup timing graph in memory for use after EM fixing, the -forceHoldView parameter should be provided to verifyACLimit so that the hold timing update doesn't nullify the setup timing graph.  Below is an example of this scenario:
.P timeDesign -postRoute  verifyACLimit -report beforeFix.rpt -forceHoldView  fixACLimitViolation -useReportFile beforeFix.rpt   verifyACLimit -report afterFix.rpt -forceHoldView
.P Note:  It is important to set the right switching activity factor on the nets before using the verifyACLimit command.  Refer to the set_power_analysis_mode, set_default_switching_activity and set_switching_activity commands for further details on the default behaviors of the software and how to modify them. The example below shows how to set the global switching activity for verifying and fixing AC limit violations.   
.P set_default_switching_activity -global_activity 0.2  propagate_activity -set_net_freq true  verifyACLimit -use_db_freq -report em.report  fixACLimitViolation -useReportFile em.report
.P Alternatively, verifyACLimit -toggle parameter can be used for more pessimistic analysis. In this case, modifying set_default_switching_activity is not needed. The following is an example of forcing every signal net to toggle at 50% of the clock rate:  
.P verifyACLimit -toggle 0.5 -report em.report  fixACLimitViolation -useReportFile em.report
.P See verifyACLimit for further command parameters and usage. 
.SH Parameters   "\fB-help\fR" Outputs a brief description that includes type and default information for each fixACLimitViolation parameter.  For a detailed description of the command and all of its parameters, use the man command:   man fixACLimitViolation  "\fB-excludeIO {true | false}\fR" If set to true, excludes nets connected to I/O pins during violation fixing.  Default: false  "\fB-excludeNetFile <filename>\fR" Specifies a file that contains the names of nets to exclude from AC limit violation repair.  "\fB-fixNetCategory { dataOnly | clockOnly | clockAndData}   \fR" Specifies fixing net types. For dataOnly, fixes data nets only. If clockOnly is specified, fixes clock nets. If clockAndData is specified, fixes clock and data nets.  Note: For clock nets, only route rules will be used for fixing. Downsizing or buffering will not be used.  Default: dataOnly  "\fB-fixingMethod {route_rule | down_size | buffer}\fR" Specifies the fixing method for correcting EM violations. You can specify any of the following:
.RS  "*" 2 route_rule: routing rules will be applied for fixing violations  "*" 2 down_size: driver cell downsizing will be applied for the violating nets  "*" 2 buffer: buffering will be applied to the violating nets.
.RE   Default: route_rule  "\fB-postCTS\fR" If specified, enables fix for the clock nets, for postCTS DBs. This parameter should be used only with -fixNetCategory clockOnly.  Default: omitted  "\fB-selectNetFile <fileName>\fR" Specifies a file that contains the names of nets for which to perform AC limit violation repair.   "\fB-useReportFile <filename>\fR" Reads the verifyACLimit report, and uses the violation information from the report file to set up a proper routing rules. This is recommended for the best fixing performance.  "\fB-useSegmentBasedNDR {true | false}\fR" Enables/disables segment-based route rules. If set to true, generates and applies segment-based route rules for fixing violations. This approach enables you to specify the desired width and distance for each layer of the violated net.   Default: true 
.SH Examples
.RS  "*" 2 The following command performs buffering only, for the nets specified in the netFile.txt only:  fixACLimitViolation -fixingMethod buffer -selectNetFile netFile.txt
.RE
.RS  "*" 2 To use downsizing, excluding nets with I/O pins:  fixACLimitViolation -fixingMethod down_size -excludeIO true
.RE
.RS  "*" 2 To fix both clock and data nets with route rules:  fixACLimitViolation -fixNetCategory clockAndData 
.RE
.RS  "*" 2 The following example shows how to feed verifyACLimit report through the -useReportFile parameter.    fixACLimitViolation -useReportFile em.report
.RE 
.SH Related Information
.RS  "*" 2 set_power_analysis_mode  "*" 2 set_default_switching_activity  "*" 2 set_switching_activity  "*" 2 timeDesign  "*" 2 verifyACLimit
.RE 
.SH Related Information
.RS  "*" 2 The following chapters in the Innovus User Guide:
.RS  "*" 2 Identifying and Viewing Violations   "*" 2 "Optimizing Signal EM Violations at PostRoute Stage" in the Optimizing Timing chapter 
.RE 
.RE
.P
