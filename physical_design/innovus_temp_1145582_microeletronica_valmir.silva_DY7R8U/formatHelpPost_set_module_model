.nf
.P Product Version     22.14    Cadence Design Systems, Inc. 
.fi
.TH set_module_model  22.14 "Fri Oct 06 02:12:27 2023" 
.SH Name \fBset_module_model\fR \-  Sets or configures specific block model(s) to top-level design
.SH Syntax \fBset_module_model\fR  [-help]   [-allow_port_mismatch]   [-dir <model_data_directory>]   [-hold_views <string>]   [-phys_hier]   [-setup_views <string>]   [-tag <flow_tag>]   [-type {flexilm lef ilm pnr pnr_shell]    [-update]   {[[[[-cell <moduleName>] [-default_set_options <string>]] | [-top <cell_name> [-logical_only ]]]   [-add_ons {1801 boundary_model etm latency pnr_view scan_info spef timing_context extraction_context}]] |   -default_dir <default_model_data_directory> |   -default_create_options <default_option> |   -default_commit_options <string> |   -active_rc_corners <list_of_rc_corners> }
.P Sets or configures specific block model(s) to top-level design. 
.SH Parameters    "\fB-active_rc_corners <list_of_rc_corners>\fR" Specifies the list of RC corners.  Note: For multi-corners, different applications have different ways to get or specify RC corners for outputting/reading SPEF (Standard Parasitic Exchange Format ). In the Integrated Hierarchical Database (iHDB) flow, the -active_rc_corners parameter provides a uniform way to use RC corners.  Note: The create_module_model -type spef honors the set_module_model -active_rc_corners command to output SPEF(s) for the specified RC corners. By default, multi corner SPEFs are saved as gzip. The output SPEF(s) are saved at <iHDB_root>/<cell>/<tag>/spef/<topCell>.<cornerName>.spef.gz  Data_type: string, optional  "\fB-add_ons {1801 boundary_model etm latency pnr_view scan_info spef timing_context extraction_context}  \fR" Specifies the supplement model that can be loaded additionally with an existing model or a design. The following is the list of the supported model types:
.RS  "*" 2 1801: UPF for power domain  "*" 2 boundary_model: Boundary model for timing analysis  "*" 2 etm: Extraction timing model  "*" 2 latency: Clock latency information  "*" 2 pnr_view: Full pnr physical DB   "*" 2 scan_info: Scan chain information  "*" 2 spef: SPEF file from RC extraction  "*" 2 timing_context: Timing context model  "*" 2 extraction_context: Extraction context model
.RE   For example the following command specifies that the etm add on type is associated with the -type lef parameter. It uses LEF and timing model ETM (.lib) together at top-level design:  set_module_model -cell tdsp_core -type lef -add_ons {etm}  Note: The 1801 add on type can only be specified for ilm model type (-type ilm).  Note: The pnr_view add on type can only be specified for ilm model type (-type ilm)where it will load in the full pnr physical DB on top of an ILM model so you can see all cells and routing. This can be used for debugging timing.  Note: The spef add on type honors the -active_rc_corners parameter to read in SPEFs (Standard Parasitic Exchange Format ) for the specified RC corners.  Note:  The spef add on type cannot be used with the pnr_shell model type.  Note: With the latency and scan_info add on types, the create_module_model command can save the latency and scan chain data into iHDB. The commit_module_model command can bring back the latency data of an ILM data to the top-level design for pre-CTS stage, and be able to merge block scan chains back to top-level design.  Data_type: bool, optional  "\fB-allow_port_mismatch\fR" Allows model I/O ports mismatching from the original database. It replaces the new updated LEF and provides an ability to bring in an updated model with mis-matched ports to top-level design.  Note: This parameter can be specified with the lef, flexIlm, ilm, and pnr type (-type) of module models only.  Data_type: string, optional   "\fB-cell <moduleName>\fR" Specifies the cell name(s) to be loaded. You can specify a list of cell names.  Note: The -cell parameter accepts wildcards as input.  Data_type: string, optional  "\fB-default_commit_options< string>\fR" Specifies the default commit options. These default settings are honored by the commit_module_model command.  Use Model:  set_module_model -default_commit_options {<listOfAssembleDesignOptions>} -type pnr  set_module_model -default_commit_options {<listOfSetIlmTypeOptions>} -type ilm  Example:  set_module_model -default_commit_options {-fe -keepPinGeometry} -type pnr   set_module_model -default_commit_options {-model si} -type ilm  Data_type: string, optional  "\fB-default_create_options <default_options>\fR" Specifies the default create options for a specific model type. These default settings are honored by the create_module_model command.  Note: You must specify the -type parameter with this option.  Note: While specifying the default create options, ensure that you specify the correct names of the options as per the selected Innovus interface.  Data_type: string, optional  "\fB-default_dir <default_model_data_directory> \fR" Specifies the default central directory name where the module models data will be saved/loaded.  Note: If set_module_model -default_dir is not specified, the Innovus system does not set any directory by default. Later on, when you try to run the restore_module_model command, it displays an error message that the -default_dir parameter is not set. This option MUST be set before loading any Integrated Hierarchical Database (iHDB) design.  Data_type: string, optional  "\fB-default_set_options <string>\fR" Sets the default options.  Data_type: string, optional  "\fB-dir <model_data_directory>\fR" Specifies the directory where data of the specified cell can be found.  Note: The -dir parameter will override the -default_dir setting for this cell.  Note: The -dir parameter cannot be specified if the -cell parameter has been specified using wildcards.  Data_type: string, optional  "\fB-help\fR" Outputs a brief description that includes the type and default information for each set_module_model parameter. For a detailed description of the command and all of its parameters, use the man command:   man set_module_model  "\fB-hold_views <string>\fR" Specifies the hold views.  Note: The -setup_views and -hold_views parameters allow you to specify the active analysis views for the loaded design. Innovus uses these settings to know which SDC constraints to use. By default, the active views will be based on the viewDefinition.file of pnr model (*.enc.dat).  Data_type: string, optional  "\fB-logical_only\fR" Specifies that only the logical data will be read. It controls whether to load DEF and LEF libraries or not. If -logical_only is specified, Innovus only loads Verilog/.lib but not DEF/LEF.  Data_type: bool, optional  "\fB-phys_hier\fR" Enables you to load the physical hierarchy for viewing purpose.   Data_type: bool, optional   "\fB-setup_views <string>\fR" Enables you to setup views.  Note: The -setup_views and -hold_views parameters allow you to specify the active analysis views for the loaded design. Innovus uses these settings to know which SDC constraints to use. By default, the active views will be based on the viewDefinition.file of pnr model (*.enc.dat).  Data_type: string, optional  "\fB-tag <flow_tag>\fR" Specifies the tag name of the specified cell. It can be design stage/status name such as 'prects', 'cts', etc....  Note: The 'latest' tag will be used if this option is not specified. 'latest' can also be specified as tag name for referencing to the latest updated tag.  Note: For a specific cell, you only need to specify this tag option for one model type. For subsequent model type setting of the same cell,  same tag name will be used if it's not specified.  Data_type: string, optional  "\fB-top <cell_name>\fR" Specifies the top module model. When specified it configures the Verilog netlist and/or the DEF file of the specified top-level design.  Note: When the -top parameter is specifies, the default model type (-type) is pnr.  "\fB-type {flexilm ilm lef pnr pnr_shell}  \fR" Specifies the model type. The model type can be lef, flexIlm, ilm, pnr, or pnr_shell.  The following is the list of the most frequently used iHDB module model types:
.RS  "*" 2 flexilm: Flexible interface logic model  "*" 2 ilm: Interface logic model  "*" 2 lef: LEF abstract  "*" 2 pnr: Innovus DB  "*" 2 pnrshell: Reduced pnr model where only the first level of logics is kept.
.RE   Note: You must specify the -type parameter.  Data_type: enum, optional  "\fB-update\fR" Specifies that the data of the specified cell will be loaded without doing any checking.  Data_type: bool, optional 
.SH Example
.RS  "*" 2 The following command specifies the default central directory name (./DATA) where models data will be saved/loaded.   set_module_model -default_dir
./DATA  "*" 2  The following command configures the tdsp_core module model using LEF and timing model ETM (.lib) together at the top-level design:  set_module_model -cell tdsp_core -tag my_prects -type lef -add_ons {etm}  "*" 2  The following example specifies the default options for type lef:  set_module_model -type lef -default_create_options {-specifyTopLayer M10 -stripePin}
.RE 
.SH Related Information
.RS  "*" 2 check_module_model  "*" 2 commit_module_model  "*" 2 create_module_model  "*" 2 report_module_model  "*" 2 restore_module_model  "*" 2 savePartition  "*" 2 update_module_model  "*" 2 write_module_model_context  "*" 2 Hierarchical and Prototyping Flow chapter in the Innovus User Guide
.RS  "*" 2  Integrated Hierarchical Database Flow
.RE 
.RE
.P
