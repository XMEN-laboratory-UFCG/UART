.nf
.P Product Version     22.14    Cadence Design Systems, Inc. 
.fi
.TH create_pushdown_eco  22.14 "Fri Oct 06 02:12:27 2023" 
.SH Name \fBcreate_pushdown_eco\fR \-  Creates logical and physical ECO files that are used to push down ECO objects by comparing two partition databases
.SH Syntax \fBcreate_pushdown_eco\fR  [-help]  [-gen_script_only]  [-ptn_net_dir <ptnNetDirName>]  [-ptns <ptnNameList>]  {-original_dir <originalDirName> | -original_tag <tagName> }  {-pushdown_dir <pushdownDirName> | -pushdown_tag <tagName> }  [-eco_object_dir <outputDirName> | -eco_tag <tagName> ] 
.P Creates logical and physical ECO files that are used to push down ECO objects by comparing two partition databases. It generates logical and physical ECO objects for each partition, in parallel, using EDP (parallel/distributed) framework. The regular/special wire ECO is generated for those nets which are specified via -ptn_net_dir.
.P Note: A FlexHtree amendment file will also be created besides the logical ECO and DEF file. 
.SH Parameters   "\fB-eco_object_dir <outputDirName>\fR" Specifies the directory in which eco objects for each partition will be created. The eco objects are saved in sub-directories, one for each partition.  Default:
./eco_object_dir  Data_type: string, optional  "\fB-eco_tag <tagName>\fR" Specifies the tag name where ECO file will be saved.   Default: eco_object_dir  Data_type: string, optional  "\fB-gen_script_only\fR" Generates a TCL command file but does not execute it.  Data_type: bool, optional  "\fB-help\fR" Outputs a brief description that includes type and default information for each create_pushdown_eco parameter.  For a detailed description of the command and all of its parameters, use the man command: man create_pushdown_eco.  "\fB-original_dir <originalDirName>\fR" Specifies the directory in which original partition sub-directories are present.  Data_type: string, optional  "\fB-original_tag <tagName>\fR" Specifies the tag name where the original partition pnr model is present.  Data_type: string, optional  "\fB-ptn_net_dir <ptnNetDirName>\fR" Specifies the directory in which net file for each partition is present. The net file contains the nets for which regular/special wire ECO is generated.  Note: Specifying -ptn_net_dir iis not mandatory for the create_pushdown_eco command. If the -ptn_net_dir parameter is not specified, then logically modified nets are selected for DEF ECO generation. Otherwise, a union of -ptn_net_dir and logically-modified-nets is selected for DEF ECO generation.  Data_type: string, optional   "\fB-ptns <ptnNameList>\fR" Specifies the list of partition names for which ECO objects are to be created.  Data_type: string, optional  "\fB-pushdown_dir <pushdownDirName>\fR" Specifies the directory in which pushdown (Example, clock tree constructed) version of partition sub-directories are present. These partitions will be compared with respective original partitions, and ECO objects will be generated for each of them.  Data_type: string, required  "\fB-pushdown_tag <tagName>\fR" Specifies the tag name of the pnr model that contains the pushed down data (clock or feedthrough).  Data_type: string, optional 
.SH Example
.RS  "*" 2 The following is an example dbTCL script for generating the original database of each  partition , generating the  pushdown database, and then generating partition pushdown ECO:  # load full-chip database;  partition -pushDownSpecialNetAsObs $snets  savePartition -dir $originalDir -def  flattenPartition  # Create push down (say, htree/push_ptn_network) database  push_ptn_network -nets $clk_nets -output_nets_for_wire_distribution nets.txt
...  partition -pushDownSpecialNetAsObs $snets -inputNetsForWireDistribution nets.txt  savePartition -dir $htreeBlocksDir -def  # Create ECO by comparing original and pushdown databases  create_pushdown_eco \\  -original_dir $originalDir \\   -pushdown_dir $htreeBlocksDir \\   -ptns [concat [dbget top.ptns.master.cell.name] [dbget top.name]] \\  -eco_object_dir $ecoObjectDir \\    -gen_script_only  The above script generates ECO objects, for each partition, in $ecoObjectDir:  ECO is generated only for the partitions specified via -ptns option.
.RE
.RS  "*" 2 The following command generates logical and physical ECO objects based on the specified tag names of the pnr model:  create_pushdown_eco -original_tag original -pushdown_tag block_with_ft  -eco_tag eco_data
.RE 
.SH Related Information
.RS  "*" 2 commit_pushdown_eco  "*" 2 push_ptn_network  "*" 2 Partitioning the Design chapter in the Innovus User Guide 
.RS  "*" 2 Partition Pushdown Replay Flow 
.RE 
.RE
.P
