.nf
.P Product Version     22.14    Cadence Design Systems, Inc. 
.fi
.TH save_abstract  22.14 "Fri Oct 06 02:12:27 2023" 
.SH Name \fBsave_abstract\fR \-  Generates hierarchical design abstract information for the current block-level design
.SH Syntax \fBsave_abstract\fR  [-help]   [-PGpinLayers <layerNameList>]  [-cutObs]  [-cutObsMinSpacing]  [-extractBlockObs]  [-extractBlockPGPinLayers <layerNameList>]  [-lib <lib>]  [-specifyTopLayer <topLayerName>]  [-stripePin {top all none}]   [-view <view>]
.P Generates hierarchical design abstract information for the current block-level design. By default, save_abstract creates power and ground pins on the design and creates a single obstruction shape for each routing layer. The output abstract contains the antenna information, if you run antenna verification.
.P In a bottom-up flow (where the block was not created using the definePartition or partition command), you normally create a simple OpenAccess abstract that contains:
.RS  "*" 2 one obstruction (OBS) shape per routing layer
.RE
.RS  "*" 2 signal pins located along the block boundary
.RE
.RS  "*" 2 power pins for the top metal layer
.RE
.P You can use the save_abstract command after loading a block-level design. 
.SH Parameters   "\fB-help\fR" Prints a brief description that includes the type and default information for each save_abstract parameter.  For a detailed description of the command and all of its parameters, use the man command:   man save_abstract.  "\fB-cutObs\fR" Creates cut-outs (obstructions) in the blockages for signal pins, power and ground pins, vias, and power and ground stripes.  Default: Creates a single obstruction shape for each routing layer.  "\fB-cutObsMinSpacing\fR" Creates cut-outs (obstructions) in the blockages around pins using the minimum width to calculate the spacing.    "\fB-extractBlockObs\fR" Extracts all obstruction (OBS) information from the instantiated CLASS BLOCK or RING macros and writes out the obstructions to the output OpenAccess file. OBS information is extracted for layers that are not already being completely covered under the normal routing layer range and for cut layers between routing layers that are completely covered.  "\fB-extractBlockPGPinLayers <layerNameList>\fR" Extracts the power and ground pin information from any CLASS BLOCK and CLASS RING macros with pins on layers in the specified layer list and writes out the pin information to the OpenAccess file.  You can use metal layer numbers (for example, specify 4 for metal4). Specify a list of layer numbers by leaving a space between each number. For example, to create a list with layers metal3, metal4, and metal5, specify -extractBlockPGPinLayers 3 4 5.  Default: Does not extract the pin information from any macros.  "\fB-lib\fR" Specifies the target library name.  Default: The abstract is written into the library from which the current data was loaded.  "\fB-PGpinLayers <layerNameList>\fR" Specifies the list of layers.   "\fB-specifyTopLayer <top><LayerName>\fR" Writes out obstruction information only for layers up to the specified layer. You can use the metal layer number (for example, specify 4 for metal4).  Default: Top routing layer (therefore, writes out obstruction information for all layers)  "\fB-stripePin {top all none}\fR" Writes out power and ground stripes on the top metal layer as power and ground pins. You can use this parameter in a bottom-up methodology, when you create abstracts for blocks that you will use at the next higher level of a hierarchical design.  "\fB-view <view>\fR" Specifies the target view name.  Default: abstract 
.SH Related Information
.RS  "*" 2 definePartition  "*" 2 partition  "*" 2 write_lef_abstract  "*" 2 Mixed Signal (MS) Interoperability Guide 
.RS  "*" 2 Useful Tips chapter
.RE 
.RE
.P
