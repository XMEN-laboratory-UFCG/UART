.nf
.P Product Version     22.14    Cadence Design Systems, Inc. 
.fi
.TH dbShape  22.14 "Fri Oct 06 02:12:27 2023" 
.SH Name \fBdbShape\fR \-  Performs geometric (such as SIZE and BBOX) and logical (such as AND and ANDNOT) operations on shapes (a polygon, a rectangle, or a list of rectangles and polygons)
.SH Syntax \fBdbShape\fR  [-help]   [-d]   [-step step]   [-output polygon|rect|hrect|area]  shapeList [AND shapeList | ANDNOT shapeList | OR shapeList | XOR shapeList   | INSIDE shapeList | OUTSIDE shapeList | ENCLOSE shapeList | STRADDLE <shapeList>  | BBOX | HOLES | NOHOLES | BBOX_CIRCLE | BBOX_OCTAGON | MOVE {<dx> <dy> | SIZE value | SIZEX value | SIZEY value]
... 
.P Performs geometric (such as SIZE and BBOX) and logical (such as AND and ANDNOT) operations on shapes (a polygon, a rectangle, or a list of rectangles and polygons). 
.SH Parameters    "\fB-help\fR" Prints a brief description that includes the type and default information of each dbShape parameter.  For a detailed description of the command and all its parameters, use the man command:   man dbShape  "\fB-d\fR" Specifies values in database units, specified in integers. All shapeList values as well as values for MOVE, SIZE, and step should use units consistent with the -d setting.   The output units are the same with the input units.  Default: Specifies values in user-defined units, in microns.  "\fB-step\fR" Specifies the step size if output format is rectangle, required to convert non-orthogonal shapes into a series of rectangles.  Default: The minwidth value of the first routing layer.  Type: coord, optional  "\fB-output <polygon>|<rect>|<hrect>|<area>\fR" Specifies the output format.
.RS  "*" 2 polygon: Polygon shape  "*" 2 rect: Vertical rectangles  Note: This value works only for the orthogonal shapes.  "*" 2 hrect: Horizontal rectangles  Note: This value works only for the orthogonal shapes.  "*" 2 area: Total area of final shape
.RE   Default: rect (string)  "\fBshapeList\fR" Specifies a polygon or a rectangle, or a list of polygons and rectangles. The shape of the polygon or rectangle in one shapeList will merge if they intersect with each other before performing geometric or logical operation.
.RS  "*" 2 polygon: {{x y} {x y} {x y}
... };
.RE
.RS  "*" 2 rect: {x1 y1 x2 y2}
.RE   Type: list  "\fBAND <shapeList>\fR" Is a binary operator that is the intersection of shapeLists.  "\fBANDNOT <shapeList>\fR" Is a binary operator defining the initial shapeList minus the final shapeList.  "\fBOR <shapelist>\fR" Is a binary operator defining the union of shapelists.  "\fBXOR<shapeList>\fR" Is a binary operator of the shapeList: OR minus AND. It is a string and is optional.  "\fBINSIDE <shapeList>\fR" Is a binary operator for the initial shapes that are inside (including touching) one of the shapes from the second list.  "\fBOUTSIDE <shapeList>\fR" Is a binary operator for the initial shapes that are outside (including touching) of one of the shapes from the second list.   "\fBENCLOSE <shapeList>\fR" Is a binary operator for the initial shapes that completely enclose at least one shape from the second list.   "\fBSTRADDLE <shapeList>\fR" Is a binary operator for the initial shapes that are partially inside and partially outside at least one shape from the second list.   "\fBMOVE {<dx> <dy>}\fR" Is a unary operator that moves the shape.   "\fBBBOX\fR" Is a unary operator that computes the bounding box of the shapeList. This is a string and optional.  "\fBBBOX_CIRCLE\fR" Is a unary operator that creates a circle shape. For example, the following command creates a circle within the specified coordinates:  dbShape {0 0 10 10} BBOX_CIRCLE -output {polygon}  Following is the output of the above command:  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   "\fBBBOX_OCTAGON\fR" Is a unary operator that creates an octagon shape. For example, the following command creates an octagon within the specified coordinates:
.P dbShape {0 0 10 10} BBOX_OCTAGON -output {polygon}   Following is the output of the above command:  (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.)   "\fBHOLES\fR" Is a unary operator that gives the list of the new shapes that fill holes in the original shapeList.   "\fBNOHOLES\fR" Is a unary operator that gives the list of the new shapes that include the filled holes in the original shapeList.  This is same as dbShape <shapeList> HOLES OR <shapeList>  "\fBSIZE <value>\fR" Is a unary operator that increases the size of the shapeList by "value".  "\fBSIZEX <value>\fR" Is a unary operator that increases the size of the shapes in the list in the X-direction by <value>. This parameter works only for the orthogonal shapes. To increase the size in the X-direction of a non-orthogonal shape, use it with the -step parameter to convert the shape into series of rectangles first.  "\fBSIZEY <value>\fR" Is a unary operator that increases the size of the shapes in the list in the Y-direction by <value>. This parameter works only for the orthogonal shapes. To increase the size in the Y-direction of a non-orthogonal shape, use it with the -step parameter to convert the shape into series of rectangles first.
.P Note: All the shapes processed by dbShape must have non-zero area. If a shapeList contains a list of rectangles and one of them is zero-area, it will be dropped.   Also, during negative sizing or other operations, if a zero-area shape is created, it will be dropped from the output (or intermediate results). 
.P For example, a rectangle that is 4x4 or smaller will disappear when using dbShape $rect SIZE -2 SIZE 2, while shapes larger than 4x4 will be returned to their original state.   The same is true for protrusions with width less than 4. 
.SH Examples
.RS  "*" 2 Unary:
.RE
.P (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.) 
.RS  "*" 2 Binary:
.RE
.P (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.) 
.RS  "*" 2 Combination:
.RE
.P (<Image> To view the image, refer to the Innovus Text Command Reference - Release 22.1 manual.) 
.RS  "*" 2 The following command returns the intersection (as a list of rectangles) between the shapes in the $shapes1 and the $shapes2 lists:  dbShape $shapes1 AND $shapes2  "*" 2 The following command returns the area of the intersection between the shapes in the $shapes1 and the $shapes2 lists:  dbShape -output area $shapes1 AND $shapes2  "*" 2 The following commands return the merged polygon of shapes1. The rectangle shapes in shapes1 will merge firstly before performing the STRADDLE operation, if they intersect with each other.  set shapes1 [list {0.1 0.1 0.4 0.4} {0.2 0.2 0.6 0.6}]  set shapes2 {0.1 0.1 0.5 0.5}  dbShape -output polygon $shapes1 STRADDLE $shapes2  {{0.6 0.6} {0.2 0.6} {0.2 0.4} {0.1 0.4} {0.1 0.1} {0.4 0.1} {0.4 0.2} {0.6 0.2}}
.RE
.P
